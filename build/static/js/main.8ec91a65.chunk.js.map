{"version":3,"sources":["assets/imgs/womancookingbackg.jpg","assets/imgs/cookfriendsret.jpg","assets/imgs/facebook2ret.jpg","assets/imgs/instagramret.jpg","assets/imgs/loginret.jpg","assets/imgs/panret2.jpg","assets/imgs/soupret.jpg","assets/imgs/spoonret.jpg","assets/imgs sync /^/.*/.jpg$","assets/imgs/contactret.jpg","assets/imgs/cookbookret.jpg","assets/imgs/knobovenret.jpg","assets/imgs/knobovenretactive.jpg","assets/imgs/reciperet.jpg","assets/imgs/tastingret.jpg","assets/imgs/signupret.png","assets/imgs/recipebookret.png","redux/config/Encryptor.js","redux/config/cases/Cases.js","redux/signup/reducer/SignupReducer.js","redux/customerContact/reducer/customerContactReducer.js","redux/remindPassword/showRemindPass/reducer/showRemindPassReducer.js","redux/remindPassword/remindUserPassword/reducer/remindPasswordReducer.js","redux/login/loginUser/reducer/loginReducer.js","redux/logout/reducer/logoutReducer.js","redux/googleSignup/reducer/googleSignupReducer.js","redux/recipeBook/retrieveRecipe/reducer/retrieveRecipesReducer.js","redux/recipeBook/showRecipeDetails/reducer/showRecipeDetailsReducer.js","redux/recipeBook/recipeCategorySelected/reducer/recipeCategorySelectedReducer.js","redux/recipeBook/toEditRecipeRateComment/reducer/toEditRateCommentReducer.js","redux/recipeBook/changeRecipeListItem/reducer/changeRecipeListItemReducer.js","redux/recipeBook/changeRateComment/reducer/changeRateCommentReducer.js","redux/recipeBook/turnOffRecipeButtons/reducer/turnOffRecipeButtonsReducer.js","redux/recipeBook/recipeButtonTurnedOn/reducer/recipeButtonTurnedOnReducer.js","redux/myRecipes/retrieveMyRecipes/reducer/retrieveMyRecipesReducer.js","redux/myRecipes/showNewRecipeForm/reducer/showNewRecipeFormReducer.js","redux/myRecipes/toEditMyRecipe/reducer/toEditMyRecipeReducer.js","redux/myRecipes/myRecipePreview/reducer/myRecipePreviewReducer.js","redux/updateMyProfile/updateProfile/reducer/updateMyProfileReducer.js","redux/login/userLogged/reducer/userLoggedReducer.js","redux/updateMyProfile/showMyPassword/reducer/showMyPasswordReducer.js","redux/updateMyProfile/changePassword/reducer/changePasswordReducer.js","redux/myRecipes/changeMyRecipes/reducer/changeMyRecipesReducer.js","redux/updateMyProfile/removeAccount/reducer/removeAccountReducer.js","redux/myEvents/eventCategorySelected/reducer/eventCategorySelectedReducer.js","redux/myEvents/showNewEventForm/reducer/showNewEventFormReducer.js","redux/myEvents/getAddress/reducer/getAddressReducer.js","redux/myEvents/selectEventAddress/reducer/selectEventAddressReducer.js","redux/myEvents/chooseEventAddress/reducer/chooseEventAddressReducer.js","redux/myEvents/getLocationDetails/reducer/getLocationDetailsReducer.js","redux/myEvents/retrieveEvents/reducer/retrieveEventsReducer.js","redux/myEvents/changeEvent/reducer/changeEventReducer.js","redux/myEvents/eventPreview/reducer/eventPreviewReducer.js","redux/myEvents/toEditEvent/reducer/toEditEventReducer.js","redux/myEvents/searchEventFilled/reducer/searchEventFilledReducer.js","redux/mails/socketData/reducer/ioConnectReducer.js","redux/mails/showNewMessageForm/reducer/showNewMessageReducer.js","redux/mails/chooseRecipient/reducer/chooseRecipientReducer.js","redux/mails/newMessageSelected/reducer/newMessageSelectedReducer.js","redux/mails/setConversation/reducer/setConversationReducer.js","redux/mails/setMessages/reducer/setMessagesReducer.js","redux/mails/setMessageId/reducer/setMessageIdReducer.js","redux/mails/conversationWindowOpen/reducer/conversationWindowOpenReducer.js","redux/mails/mailsComponentActive/reducer/mailsComponentActiveReducer.js","redux/mails/mailError/reducer/mailErrorReducer.js","redux/myEvents/showCalendar/reducer/showCalendarReducer.js","redux/myEvents/selectEventDate/reducer/selectEventDateReducer.js","redux/emoji/showEmojis/reducer/showEmojisReducer.js","redux/emoji/getEmojis/reducer/getEmojisReducer.js","redux/emoji/selectEmoji/reducer/selectEmojiReducer.js","redux/config/combineReducers/Index.js","redux/config/Persistor.js","strings/Strings.js","redux/logout/query/logoutQuery.js","util/Util.js","redux/logout/thunk/logoutThunk.js","redux/login/loginUser/query/loginQuery.js","redux/login/loginUser/query/googleLoginQuery.js","redux/login/loginUser/query/updateUserProfileQuery.js","redux/myRecipes/retrieveMyRecipes/query/retrieveMyRecipesQuery.js","redux/recipeBook/showRecipeDetails/query/addRateAndCommentQuery.js","redux/recipeBook/showRecipeDetails/query/editRateAndCommentQuery.js","redux/recipeBook/showRecipeDetails/query/removeRateAndCommentQuery.js","redux/recipeBook/showRecipeDetails/query/followAuthorQuery.js","redux/recipeBook/showRecipeDetails/query/unfollowAuthorQuery.js","shared/sortCommentsByDate.js","redux/recipeBook/showRecipeDetails/thunk/showRecipeDetailsThunk.js","redux/recipeBook/retrieveRecipe/query/retrieveRecipeQuery.js","redux/recipeBook/retrieveRecipe/query/searchRecipeQuery.js","redux/recipeBook/retrieveRecipe/thunk/retrieveRecipesThunk.js","redux/recipeBook/changeRecipeListItem/thunk/changeRecipeListItemThunk.js","redux/recipeBook/toEditRecipeRateComment/thunk/toEditRateCommentThunk.js","redux/myRecipes/toEditMyRecipe/thunk/toEditMyRecipeThunk.js","redux/myRecipes/myRecipePreview/thunk/myRecipePreviewThunk.js","redux/myEvents/getAddress/thunk/getAddressThunk.js","redux/myEvents/selectEventAddress/thunk/selectEventAddressThunk.js","redux/myEvents/getLocationDetails/thunk/getLocationDetailsThunk.js","redux/myEvents/retrieveEvents/query/retrieveEventsQuery.js","redux/myEvents/retrieveEvents/query/searchEventsQuery.js","redux/myEvents/retrieveEvents/thunk/retrieveEventsThunk.js","redux/myEvents/eventPreview/query/joinEventQuery.js","redux/myEvents/eventPreview/query/unjoinEventQuery.js","redux/myEvents/eventPreview/query/followAuthorQuery.js","redux/myEvents/eventPreview/query/unfollowAuthorQuery.js","redux/myEvents/eventPreview/thunk/eventPreviewThunk.js","redux/myEvents/toEditEvent/thunk/toEditEventThunk.js","redux/mails/setConversation/thunk/setConversationThunk.js","redux/mails/setMessages/thunk/setMessagesThunk.js","redux/mails/setMessageId/thunk/setMessageIdThunk.js","redux/emoji/getEmojis/thunk/getEmojisThunk.js","redux/myEvents/searchEventFilled/thunk/searchEventFilledThunk.js","hooks/screen/nav/useNavMenu.js","hooks/screen/nav/countUnreadMessages.js","redux/login/userLogged/thunk/userLoggedThunk.js","redux/login/loginUser/thunk/loginThunk.js","redux/recipeBook/recipeCategorySelected/thunk/recipeCategorySelectedThunk.js","redux/myRecipes/retrieveMyRecipes/thunk/retrieveMyRecipesThunk.js","redux/myEvents/eventCategorySelected/thunk/eventCategorySelectedThunk.js","redux/mails/socketData/thunk/ioConnectThunk.js","shared/testWordsArray.js","components/navbar/disconnectIOSocket.js","components/navbar/makeNavMenu.js","components/navbar/Navbar.js","views/main/Main.js","views/about/Area.js","views/about/About.js","redux/customerContact/query/customerContactQuery.js","hooks/form/contact/useContactForm.js","redux/customerContact/thunk/customerContactThunk.js","forms/contact/ContactForm.js","redux/signup/query/signupQuery.js","redux/remindPassword/remindUserPassword/query/remindPasswordQuery.js","redux/googleSignup/query/googleSignupQuery.js","redux/updateMyProfile/changePassword/query/changePasswordQuery.js","redux/myRecipes/changeMyRecipes/query/addMyRecipeQuery.js","redux/myRecipes/changeMyRecipes/query/editMyRecipeQuery.js","redux/myRecipes/changeMyRecipes/query/removeMyRecipeQuery.js","redux/myRecipes/changeMyRecipes/thunk/changeMyRecipesThunk.js","redux/myEvents/changeEvent/query/addNewEventQuery.js","redux/myEvents/changeEvent/query/editEventQuery.js","redux/myEvents/changeEvent/query/removeEventQuery.js","redux/myEvents/changeEvent/thunk/changeEventThunk.js","redux/updateMyProfile/removeAccount/query/removeAccountQuery.js","redux/updateMyProfile/removeAccount/thunk/removeAccountThunk.js","hooks/notifications/useNotification.js","redux/signup/thunk/SignupThunk.js","redux/remindPassword/remindUserPassword/thunk/remindPasswordThunk.js","redux/googleSignup/thunk/googleSignupThunk.js","redux/updateMyProfile/changePassword/thunk/changePasswordThunk.js","components/notifications/Notification.js","views/contact/Contact.js","components/home/Home.js","redux/remindPassword/showRemindPass/thunk/showRemindPassThunk.js","hooks/form/login/useLoginForm.js","hooks/googleButton/login/useGoogleLogin.js","forms/login/LoginForm.js","hooks/form/remindPass/useRemindPassForm.js","forms/remindPassword/RemindPasswordForm.js","views/login/Login.js","hooks/form/signup/useSignupForm.js","hooks/googleButton/signup/useGoogleSignup.js","forms/signup/SignupForm.js","views/signup/Signup.js","redux/recipeBook/changeRateComment/thunk/changeRateCommentThunk.js","shared/buttonItemsArray.js","hooks/screen/recipeBook/useRecipeButton.js","redux/recipeBook/recipeButtonTurnedOn/thunk/recipeButtonTurnedOnThunk.js","views/recipeBook/makeRecipeButton.js","shared/initializeStarRating.js","shared/RatingStars.js","shared/RatingActiveStars.js","shared/getAverageRating.js","views/recipeBook/RecipesList.js","views/recipeBook/CommentRate.js","redux/emoji/showEmojis/thunk/showEmojisThunk.js","hooks/form/rateAndComment/useRateAndComment.js","forms/recipeBook/RateAndComment/RateAndComment.js","hooks/screen/recipeDetails/useRecipeDetails.js","views/recipeBook/RecipeDetails.js","redux/recipeBook/turnOffRecipeButtons/thunk/turnOffRecipeButtonsThunk.js","hooks/form/searchRecipe/useSearchRecipe.js","forms/recipeBook/searchRecipe/SearchRecipeForm.js","hooks/screen/emoji/useEmoji.js","redux/emoji/selectEmoji/thunk/selectEmojiThunk.js","components/emoji/Emoji.js","hooks/screen/recipeBook/useRecipeBook.js","views/recipeBook/RecipeBook.js","redux/myRecipes/showNewRecipeForm/thunk/showNewRecipeFormThunk.js","views/myRecipes/MyRecipesList.js","hooks/screen/myRecipes/useMyRecipePreview.js","views/myRecipes/MyRecipePreview.js","shared/getImage.js","shared/makeImageBinary.js","hooks/form/myRecipes/useNewRecipeForm.js","forms/myRecipes/myRecipesForm.js","views/myRecipes/MyRecipes.js","redux/mails/showNewMessageForm/thunk/showNewMessageThunk.js","redux/mails/newMessageSelected/thunk/newMessageSelectedThunk.js","redux/mails/conversationWindowOpen/thunk/conversationWindowOpenThunk.js","redux/mails/chooseRecipient/thunk/chooseRecipientThunk.js","hooks/form/mails/useMessageForm.js","components/mails/suggestions/Recipient.js","components/mails/suggestions/RecipientSuggestions.js","forms/mails/MessageForm.js","forms/mails/getConversationDate.js","redux/mails/mailsComponentActive/thunk/mailsComponentActiveThunk.js","redux/mails/mailError/thunk/mailErrorThunk.js","hooks/screen/mails/useMailsList.js","views/mails/MailsList.js","redux/mails/continueConversation/thunk/continueConversationThunk.js","redux/mails/continueConversation/thunk/sortConversationsByDate.js","views/mails/Mails.js","hooks/screen/myEvents/useMyEvents.js","views/myEvents/MyEventsList.js","redux/myEvents/showNewEventForm/thunk/showNewEventFormThunk.js","redux/myEvents/showCalendar/thunk/showCalendarThunk.js","redux/myEvents/selectEventDate/thunk/selectEventDateThunk.js","shared/generateZoom.js","hooks/form/myEvents/useMyEventsForm.js","components/map/suggestions/Suggestions.js","redux/myEvents/chooseEventAddress/thunk/chooseEventAddressThunk.js","hooks/screen/myEvents/useMap.js","components/map/map/Map.js","forms/myEvents/MyEventsForm.js","hooks/form/myEvents/useSearchEventsForm.js","forms/myEvents/SearchEventsForm.js","hooks/screen/myEvents/useEventButtons.js","views/myEvents/makeEventButtons.js","shared/getDateTime.js","hooks/screen/myEvents/delayAvailablePlacesCounter.js","hooks/screen/myEvents/useEventPreview.js","views/myEvents/EventPreview.js","components/calendar/getDaysInMonth.js","components/calendar/getNewSelectedDate.js","hooks/screen/myEvents/useCalendar.js","components/calendar/isWeekend.js","components/calendar/Calendar.js","components/calendar/getDate.js","views/myEvents/MyEvents.js","hooks/form/myProfile/useMyProfileForm.js","redux/updateMyProfile/updateProfile/thunk/updateMyProfileThunk.js","forms/myProfile/MyProfileForm.js","hooks/screen/myProfile/useMyProfilePreview.js","views/myProfile/MyProfilePreview.js","redux/updateMyProfile/showMyPassword/thunk/showMyPasswordThunk.js","hooks/form/myProfile/useMyPasswordForm.js","forms/myProfile/MyPasswordForm.js","hooks/screen/myProfile/useMyProfile.js","views/myProfile/MyProfile.js","hooks/screen/app/useApp.js","views/app/App.js","index.js","assets/imgs/cookerret.png","assets/imgs/panret.jpg","assets/imgs/eventret.jpg"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","encryptor","createEncryptor","secretKey","process","onError","err","console","log","signupCases","freeze","LOADING","USER_SIGNEDUP","ERROR","CLEAR_STATE","customerContactCases","EMAIL_SENT","remindPassCases","PASSWORD_SENT","showRemindPassCases","FORM_SHOWN","loginCases","LOADING_GOOGLE","USER_DATA","CLEAR_ERROR_STATE","logoutCases","SIGNOUT","signupGoogleUserCases","USER_GOOGLE_SIGNEDUP","retrieveRecipesCases","RECIPE_RETRIVED","showRecipeDetailsCases","SHOWN","DETAILS_RETRIVED","recipeCategorySelectedCases","BUTTON_ID_RETRIEVED","toEditRecipeRateCommentCases","RATE_COMMENT_RETRIEVED","changeRecipeListItemCases","RECIPE_LIST_ITEM_CHANGED","changeRateCommentCases","RATE_COMMENT_CHANGED","turnOffRecipeButtonsCases","SEARCH_INPUT_FILLED","recipeButtonTurnedOnCases","BUTTON_PRESSES","retrieveMyRecipesCases","MY_RECIPES_RETRIEVED","showNewRecipeFormCases","toEditMyRecipeCases","MY_RECIPE_TO_EDIT","myRecipePreviewCases","PREVIEW_SHOWN","PREVIEW_DATA_RECEIVED","updateMyProfileCases","PROFILE_UPDATED","userLoggedCases","USER_LOGGED","showMyPasswordFormCases","changePasswordCases","PASSWORD_CHANGED","changeMyRecipesCases","RECIPE_UPDATED","removeAccountCases","ACCOUNT_REMOVED","eventCategorySelectedCases","showNewEventFormCases","getAddressCases","ADDRESSES_RETRIEVED","selectEventAddressCases","ADDRESS_SELECTED","chooseEventAddressCases","ADDRESS_CHOSEN","getLocationDetailsCases","LOCATION_DETAILS_RETRIEVED","changeEventCases","EVENT_CHANGED","retrieveEventsCases","EVENTS_RETRIEVED","myEventPreviewCases","toEditEventCases","EVENT_TO_EDIT","searchEventFilledCases","FORM_FILLED","ioConnectCases","iO_CONNECTED","showNewMessageFormCases","chooseRecipientCases","RECIPIENT_CHOSEN","newMessageSelectedCases","SELECTED","setConversationCases","CONVERSATION_RETRIEVED","setMessagesCases","MESSAGES_RETRIEVED","setMessageIdCases","ID_RETRIEVED","conversationWindowOpenCases","WINDOW_OPEN","mailsComponentActiveCases","MAILS_ACTIVE","mailErrorCases","ERROR_RETRIEVED","showCalendarCases","CALENDAR_SHOWN","selectEventDateCases","DATE_RETRIEVED","showEmojisCases","EMOJIS_SHOWN","getEmojisCases","EMOJIS_RETRIEVED","CATEGORIES_RETRIEVED","selectEmojiCases","EMOJI_SELECTED","initialState","loading","userSignedup","error","signupReducer","state","action","type","payload","emailSent","emailSentError","customerContactReducer","show","showRemindPassReducer","passwordSent","remindPassError","remindPasswordReducer","loadingGoogle","userData","loginError","loginReducer","userLoggedOut","logoutError","logoutReducer","loadingSignGoogle","userGoogleSignedup","errorGoogleSignup","googleSignupReducer","loadingRecipes","recipesRetrieved","recipesError","retrieveRecipesReducer","detailsLoading","detailsShown","detailsDataRetrieved","detailsDataError","showRecipeDetailsReducer","recipeButtonId","recipeCategorySelectedReducer","rateAndComment","toEditRecipeRateCommentReducer","recipeListItemChanged","changeRecipeListItemReducer","rateCommentChanged","changeRateCommentReducer","searchInputFilled","turnOffRecipeButtonsReducer","recipeButtonPressed","recipeButtonTurnedOnReducer","loadingMyRecipes","myRecipesRetrieved","myRecipesError","retrieveMyRecipesReducer","newRecipeFormShown","showNewRecipeFormReducer","myRecipeToEdit","toEditMyRecipeReducer","myRecipePreviewShown","myRecipePreviewData","myRecipePreviewReducer","profileUpdated","updateMyProfileReducer","userLogged","userLoggedReducer","myPasswordFormShown","showMyPasswordReducer","userPasswordChanged","changeUserPasswordError","changePasswordReducer","recipeUpdated","myRecipeChangeError","changeMyRecipesReducer","accountRemoved","removingAccountError","removeAccountReducer","eventButtonId","eventCategorySelectedReducer","newEventFormShown","showNewEventFormReducer","loadingAddresses","addressesRetrieved","addressesRetrievedError","getAddressReducer","selectedAddress","selectEventAddressReducer","addressChosen","chooseEventAddressReducer","loadingLocationDetails","locationDetailsRetrieved","locationDetailsError","getLocationDetailsReducer","loadingEvents","eventsRetrieved","eventsError","retrieveEventsReducer","loadingEventUpdating","eventUpdated","eventChangeError","changeEventReducer","eventPreviewShown","eventPreviewError","eventPreviewData","eventPreviewReducer","eventToEdit","toEditEventReducer","searchEventFilled","searchEventFilledReducer","socket","ioConnectReducer","newMessageFormShown","showNewMessageFormReducer","recipient","chooseRecipientReducer","newMessageSelected","newMessageSelectedReducer","conversations","setConversationReducer","messages","setMessagesReducer","messageId","setMessageIdReducer","windowOpen","conversationWindowOpenReducer","mailsActive","mailsComponentActiveReducer","mailError","mailErrorReducer","calendarShown","showCalendarReducer","eventDate","selectEventDateReducer","emojisShown","showEmojisReducer","emojisAll","emojiCategories","emojiError","getEmojisReducer","emojiCharacter","selectEmojiReducer","allReducers","combineReducers","signup","customerContact","isRemindPassFormShown","remindPass","login","logout","signGoogle","recipeBook","isRecipeDetailsShown","recipeCategorySelected","toEditRateComment","isRecipeListItemChanged","isRateCommentChanged","turnOffRecipeButtons","recipeButtonTurnedOn","myRecipes","isNewRecipeFormShown","toEditMyRecipe","myRecipePreview","updateMyProfile","isUserLogged","isMyPasswordFormShown","isUserPasswordChanged","isMyRecipeChanged","isAccountRemoved","eventCategorySelected","isNewEventFormShown","addressSuggestions","selectedEventAddress","isEventAddressChosen","locationDetails","events","isEventChanged","eventPreview","toEditEvent","isSearchEventFormFilled","socketData","isNewMessageFormShown","isRecipientChosen","isNewMessageSelected","userConversations","userMessages","isMessageId","isConversationWindowOpen","isMailsComponentActive","hasMailError","isCalendarShown","eventDateSelected","isEmojiShown","emojis","selectedEmoji","persistConfig","key","storage","transforms","persistedReducers","persistReducer","strings","path","HOME","GRAPHQL","LOGIN","SIGNUP","RECIPE_BOOK","MY_RECIPES","MAILS","MY_EVENTS","MY_PROFILE","LINKEDIN","SERVER_REQUEST","USER_PHOTO","IMAGE_REQUEST","SERVER_PATH","MAP_REQUEST","GET_ADDRESSES","GET_LOCATION","GET_EMOJIS","GET_EMOJI_CAT","navbar","navType","LOGO","LOGO_GET_STARTED","LOGO_USER_LOGGED","HOME_MENU","GET_STARTED_MENU","USER_LOGGED_MENU","navHomeItems","MAIN","ABOUT","CONTACT","navGetStartedItems","navUserLoggedItems","main","MAIN_TEXT","MAIN_SUB_TEXT","BUTTON_TEXT","about","FIRST_AREA","SECOND_AREA","THIRD_AREA","FOURTH_AREA","contact","FIRST_SECTION","BUTTON_TEXT_LOADING","FOOTER","SUBJECT","SUBJECT_PLACEHOLDER","EMAIL","EMAIL_PLACEHOLDER","MESSAGE","MESSAGE_PLACEHOLDER","PASSWORD","PASSWORD_PLACEHOLDER","FORGOT_PASSWORD","USER_NAME","USER_NAME_PLACEHOLDER","CONFIRM_EMAIL","CONFIRM_EMAIL_PLACEHOLDER","CHECK_EMAIL","signupGoogle","GOOGLE_USER_CREATED","BUTTON_TEXT_CANCEL","searchRecipe","SEARCH","LOGOUT","BUTTON_NEW","CAT_NEWS","BUTTON_FAST_FOOD","CAT_FAST_FOOD","BUTTON_LUNCH","CAT_LUNCH","BUTTON_DESSERT","CAT_DESSERT","BUTTON_DRINKS","CAT_DRINKS","BUTTON_EVENING","CAT_EVENING","BUTTON_SALADES","CAT_SALADES","recipeBookDetails","DESCRIBE","INGREDIENTS","FOLLOW","FOLLOW_LOADING","UNFOLLOW","rating","DETAILS","LIST","COMMENT_RATE","RATE_AND_COMMENT","RATING_STARS","COMMENT","NOTE","BUTTON_EDIT_TEXT","BUTTON_EDIT_TEXT_LOADING","BUTTON_CANCEL_TEXT","BUTTON_NEW_RECIPE","BUTTON_CORRECTION","BUTTON_REMOVE","BUTTON_REMOVE_LOADING","TITLE","TITLE_PLACEHOLDER","PICTURE","VIDEO","VIDEO_PLACEHOLDER","CATEGORY","COOK_TIME","COOK_TIME_PLACEHOLDER","LOADING_IMAGE","INGREDIENTS_EX","DESCRIPTION","DESCRIPTION_PLACEHOLDER","CHOOSE_PICTURE","CHOOSE_CATEGORY","MAX_PICTURE_SIZE","category","LUNCH","DESSERTS","DRINKS","EVENING","SALADES","FAST_FOOD","inputName","VIDEO_URL_ERROR","IMAGE_SIZE_ERROR","IMAGE_UNACCEPTABLE","IMAGE_FORMAT","VIDEO_UNACCEPTABLE","myProfile","BUTTON_TEXT_EDIT","BUTTON_EDIT_PASS","CURRENT_PASS","CURRENT_PASS_PLACEHOLDER","NEW_PASS","NEW_PASS_PLACEHOLDER","CONFIRM_PASS","CONFIRME_PASS_PLACEHOLDER","REMOVE_ACCOUNT","PHOTO","PICKER","myEvents","BUTTON_ALL","CAT_ALL","BUTTON_MY_EVENTS","CAT_MY_EVENTS","BUTTON_EVENTS_JOINED","CAT_EVENTS_JOINED","BUTTON_NEW_EVENT","ADDRESS","ADDRESS_PREVIEW","ADDRESS_PLACEHOLDER","AVAILABLE_PLACES","AVAILABLE_PLACES_PLACEHOLDER","AVAILABLE_PLACES_PREVIEW","EVENT_DATE","EVENT_DATE_PLACEHOLDER","TEL","TEL_PLACEHOLDER","PARTICIPANTS_PREVIEW","SEARCH_CITY","SEARCH_DATE","DATE_PLACEHOLDER","SEARCH_DATE_PLACEHOLDER","BUTTON_JOIN","BUTTON_JOIN_LOADING","BUTTON_UNJOIN","BUTTON_UNJOIN_LOADING","NO_SUGGESTIONS","NO_PARTICIPANTS","CITY","calendar","days","MON","TUE","WED","THU","FRI","SAT","SUN","months","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","HOUR","TIME_BEFORE","button","SAVE","EDIT","CANCEL","categories","EMOTIONS","BODY","ANIMALS","FOOD","TRAVEL","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","categories_eng","mails","BUTTON_NEW_MESSAGE","TO_PLACEHOLDER","CONTENT_PLACEHOLDER","BUTTON_SEND","BUTTON_SEND_LOADING","CLEAN_MESSAGE_INFO","CONNECTION_ERROR","FETCH_ERROR","logoutQuery","userId","email","query","variables","capitalize","text","toLowerCase","split","word","charAt","toUpperCase","slice","join","capitalizeFirst","createDate","date","Date","toUTCString","logoutUser","dispatch","getState","a","bodyRequest","fetch","method","headers","credentials","body","JSON","stringify","response","json","responseData","data","clearLogoutState","loginQuery","password","googleLoginQuery","updateUserProfileQuery","name","profileImage","retrieveMyRecipesQuery","addRateAndCommentQuery","recipeId","rateValue","commentContent","editRateAndCommentQuery","rateId","commentId","removeRateAndCommentQuery","commentItemId","followAuthorQuery","authorId","unfollowAuthorQuery","sortCommentsByDate","comments","sort","b","comment","recipeDetailsClearState","retrieveRecipeQuery","skip","limit","searchRecipeQuery","recipeTitle","getRecipe","errors","retrieveRecipes","message","changeRecipeListItem","bool","toEditRateCommentClearState","toEditMyRecipeClearState","myRecipePreviewClearState","getAddressClearState","selectEventAddressClearState","getLocationDetailsClearState","retrieveEventsQuery","searchEventsQuery","city","getEvents","retrieveEvents","joinEventQuery","eventId","unjoinEventQuery","eventPreviewClearState","toEditEventClearState","setConversation","conversation","setConversationClearState","setMessages","setMessagesClearState","setMessageIdClearState","getEmojisClearState","useNavMenu","useDispatch","useState","isActive","setIsActive","useSelector","unreadMessages","filter","isRead","_id","length","author","sender","countUnreadMessages","useEffect","disconnected","undefined","unacceptableWordsArray","userGooglePhoto","disconnectIOSocket","Promise","emit","on","disconnect","MakeNavMenu","item","index","Nav","Item","as","className","activeClass","to","spy","smooth","offset","duration","activeClassName","exact","Spinner","animation","size","role","aria-hidden","onClick","preventDefault","connected","photo","src","some","element","includes","loader","variant","icon","faUserCircle","Navbar","url","isExact","Row","Col","xs","fill","Main","props","useSpring","opacity","from","div","style","Button","Image","require","Area","image","roundedCircle","About","customerContactQuery","subject","content","useContactForm","inputs","setInputs","handleInputChange","persist","target","value","handleSubmit","ContactForm","Form","onSubmit","Group","controlId","Label","Control","onChange","placeholder","rows","disabled","signupQuery","confirmEmail","remindPasswordQuery","googleSignupQuery","changePasswordQuery","currentPass","newPass","confirmPass","addMyRecipeQuery","title","recipeImage","video","cookTime","ingredients","description","editMyRecipeQuery","removeMyRecipeQuery","changeMyRecipesClearState","addNewEventQuery","eventImage","addressObj","availablePlaces","tel","editEventQuery","addressId","removeEventQuery","changeEventClearState","removeAccountQuery","removeAccountClearState","useNotification","notificationMessage","notifications","setNotification","setShow","notification","timer","setTimeout","clearTimeout","Notification","faTimesCircle","faCheckCircle","Contact","getFullYear","Link","href","faLinkedin","Home","match","showRemindPassComponent","useLoginForm","useGoogleLogin","handleGoogleSuccessResponse","tokenId","profileObj","loginGoogleUser","handleGoogleFailureResponse","LoginForm","render","renderProps","clientId","onSuccess","onFailure","cookiePolicy","useRemindPassForm","remindPassword","RemindPasswordForm","Login","loginForm","transition","useTransition","marginLeft","marginRight","enter","history","useHistory","push","useSignupForm","signUp","useGoogleSignup","imageUrl","signUpGoogleUser","SignupForm","autoComplete","Signup","signupForm","changeRateComment","recipeButtonItemsArray","eventButtonItemsArray","useRecipeButton","buttonInitialStates","i","activesClasses","setActive","buttonPressedCount","setButtonPressedCount","toggleActiveClass","buttonId","count","MakeRecipeButton","buttonItem","initializeStarRating","place","stars","faStar","RatingStars","star","RatingActiveStars","getAverageRating","rates","rate","average","reduce","toFixed","RecipesList","timeago","pl","recipeRetrieved","picture","datetime","locale","width","height","faUser","faClock","CommentRate","showEmojis","useRateAndComment","setRate","rateHover","setRateHover","inputHasFocus","setInputHasFocus","concat","commentValue","handleClick","currentTarget","dataset","handleMouseEnter","handleMouseLeave","handleOnSubmit","editRecipeRateComment","editRecipeRateAndComment","parseInt","addRecipeRateComment","addRateAndComment","handleFocus","handleBlur","relatedTarget","RateAndComment","ratingStars","ratingStar","onMouseEnter","onMouseLeave","data-value","onFocus","onBlur","faGrin","useRecipeDetails","editShow","setEditShow","handleEditClick","handleTrashClick","removeRecipeRateComment","removeRecipeRateAndComment","handleClearDetailsState","handleFollowRecipeAuthor","followAuthorRecipe","followAuthor","handleUnfollowRecipeAuthor","unfollowAuthorRecipe","unfollowAuthor","RecipeDetails","config","recipeCommented","commentator","recipeFollowed","followers","follower","smoothScrolling","faUserPlus","faUserMinus","ingredient","controls","faEdit","faTrash","useSearchRecipe","recipe","SearchRecipeForm","InputGroup","Prepend","Text","faSearch","useEmoji","categoryIndex","setCategoryIndex","emojisFiltered","setEmojisFiltered","emojiFilteredBySubGroup","setEmojiFilteredBySubGroup","setSelectedEmoji","setLoading","emoji","group","slug","subCategories","forEach","subCat","subCatFiltered","subGroup","handleSelectCategory","catIndex","handleEmoji","character","handleSave","handleCancel","Emoji","horizontal","values","emojiSubGroup","useRecipeBook","setSkip","handlePrev","handleNext","RecipeBook","ListGroup","faChevronCircleLeft","faChevronCircleRight","Google","client","slot","float","borderRadius","format","showNewRecipeForm","MyRecipesList","retrieveMyRecipes","retrieveRecipe","faBook","useMyRecipePreview","removeMyRecipe","MyRecipePreview","recipeVideo","recipeCategory","recipeCookTime","recipeIngredients","recipeDescription","getImage","pictureName","toString","pictureType","blob","metadata","fileReader","FileReader","readAsDataURL","File","onloadend","imageBinary","result","makeImageBinary","reject","splice","imageName","compress","Compress","quality","resize","prefix","useNewRecipeForm","setError","loadingImage","setLoadingImage","handlePicture","imageError","others","playerError","handleInputsChange","replace","handleRemoveImage","handleRemoveVideo","handlePlayerError","handlePlayerReady","player","isReady","editMyRecipe","addMyRecipe","MyRecipesForm","maxLength","fileContainerStyle","fontFamily","border","backgroundColor","withIcon","singleImage","withLabel","label","buttonText","buttonStyles","fontSize","imgExtension","fileTypeError","thumbnail","onReady","MyRecipes","faFileAlt","showNewMessageForm","newMessage","conversationWindowOpen","chooseRecipient","chooseRecipientClearState","useMessageForm","searchLoading","setSearchLoading","newTopPosition","setNewTopPosition","showRecipientSuggestions","setShowRecipientSuggestions","recipients","setRecipients","conversationScrollRef","useRef","searchedUser","off","searchRecipientError","connectionError","isConnected","messageSent","newConversationContent","scrollRefCurrentHeight","current","realHeight","containerHeight","scrollArea","scrollYTo","removeAllListeners","handleRemoveRecipient","handleSubmitMessage","Recipient","RecipientSuggestions","messageRecipientIds","messageSenderIds","MessageForm","faTimes","ref","conversationDate","getDate","getMonth","getHours","getMinutes","mailsComponentActive","setMailError","mailErrorClearState","useMailsList","messageUnread","res","conversationMessageId","MailsList","userDataId","continueConversation","faEnvelope","substr","Mails","useMyEvents","MyEventsList","eventRetrieved","creationDate","faUsers","participants","faMapMarkerAlt","eventAddress","showNewEventForm","showCalendar","selectEventDate","selectEventDateClearState","generateZoom","address","houseNumber","street","country","useMyEventsForm","setAddressObj","showSuggestions","setShowSuggestions","showMap","setShowMap","addressValue","suggestions","addressData","displayPosition","streetNumber","streetName","postCode","postalCode","latitude","longitude","zoom","eventData","handleOnChange","handleShowCalendar","editEvent","addMyEvent","addNewEvent","Suggestions","suggestion","locationId","view","location","useMap","showLoading","setShowLoading","handleHideLoading","Map","scrolling","frameBorder","onLoad","MyEventsForm","moment","faCalendarAlt","useSearchEventsForm","searchEvents","handleRemoveDate","SearchEventsForm","useEventButtons","MakeEventButtons","getDateTime","delayAvailablePlacesCounter","time","useEventPreview","countAvailablePlaces","setCountAvailablePlaces","removeEvent","handleJoinEvent","joinEvent","handleUnjoinEvent","unjoinEvent","handleFollowEventAuthor","followAuthorEvent","handleUnfollowEventAuthor","unfollowAuthorEvent","EventPreview","eventFollowed","participant","faFileSignature","getDaysInMonth","month","year","getNewSelectedDate","newSelectedDate","newDate","firstDay","getDay","selectedMonth","selectedYear","useCalendar","now","dayNames","monthIndex","setMonthIndex","setNewSelectedDate","daysInMonth","setDaysInMonth","setSelectedMonth","selectedDay","setSelectedDay","setDate","numberOfDaysInMonth","hour","toLocaleTimeString","minute","add","_d","inputsSplit","setHours","dateNow","isBefore","timeError","handlePreviousMonth","handleNextMonth","isSame","handleSelectDate","isWeekend","day","Calendar","MyEvents","useMyProfileForm","showOverlay","setShowOverlay","showEdit","setShowEdit","handleEdit","updateUserProfile","MyProfileForm","position","useMyProfilePreview","inputUserPhoto","setInputUserPhoto","userPhoto","MyProfilePreview","showMyPasswordForm","useMyPasswordForm","changeUserPassword","MyPasswordForm","useMyProfile","showRemoveAccount","setShowRemoveAccount","handleTrash","handleDeleteAccount","removeAccount","MyProfile","isGoogleUser","useApp","userDataMemoized","useMemo","userEmail","socketClient","userSocketId","isEmojiSupported","App","component","myStore","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","store","document","getElementById"],"mappings":"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,MAAM,6SAKNC,UAAW,CAAEmM,cAAaC,UAASC,cAAaxM,SAAQC,WCb/CwM,GAAmB,SAC9BC,EACAC,EACAC,EACApT,EACAqT,EACAC,EACAC,EACA/M,EACAC,EACAc,GAEA,MAAO,CACLb,MAAM,waAGNC,UAAW,CACTuM,QACAC,cACAC,QACApT,WACAqT,WACAC,cACAC,cACA/M,SACAC,QACAc,UC1BOiM,GAAoB,SAC/BrK,EACA+J,EACAC,EACAC,EACApT,EACAqT,EACAC,EACAC,EACA/M,EACAC,GAEA,MAAO,CACLC,MAAM,ubAGNC,UAAW,CACTwC,WACA+J,QACAC,cACAC,QACApT,WACAqT,WACAC,cACAC,cACA/M,SACAC,WC1BOgN,GAAsB,SAACtK,EAAU3C,EAAQC,GACpD,MAAO,CACLC,MAAM,8IAGNC,UAAW,CACTwC,WACA3C,SACAC,WCsJOiN,GAA4B,WACvC,OAAO,SAAC/L,EAAUC,GAChBD,EAAS,CAAEhb,KAAM5D,EAAqB/C,gBChK7B2tB,GAAmB,SAC9BT,EACAU,EACAC,EACAN,EACAO,EACAzf,EACA0f,EACAvN,EACAC,EACAc,GAEA,MAAO,CACLb,MAAM,ubAGNC,UAAW,CACTuM,QACAU,aACAC,aACAN,cACAO,kBACAzf,YACA0f,MACAvN,SACAC,QACAc,UC1BOyM,GAAiB,SAC5Bd,EACAU,EACAC,EACAN,EACAO,EACAzf,EACA0f,EACApI,EACAsI,EACAzN,EACAC,GAEA,MAAO,CACLC,MAAM,yeAGNC,UAAW,CACTuM,QACAU,aACAC,aACAN,cACAO,kBACAzf,YACA0f,MACApI,UACAsI,YACAzN,SACAC,WC5BOyN,GAAmB,SAACvI,EAASsI,EAAWzN,EAAQC,GAC3D,MAAO,CACLC,MAAM,0LAGNC,UAAW,CACTgF,UACAsI,YACAzN,SACAC,WCuJO0N,GAAwB,WACnC,OAAO,SAACxM,EAAUC,GAChBD,EAAS,CAAEhb,KAAM9C,EAAiB7D,gBClKzBouB,GAAqB,SAAC5N,EAAQC,GACzC,MAAO,CACLC,MAAM,sKAKNC,UAAW,CAAEH,SAAQC,WC6BZ4N,GAA0B,WA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","file":"static/js/main.8ec91a65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/womancookingbackg.2212f559.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cookfriendsret.a744b51b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook2ret.a3acf0c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/instagramret.426aea2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loginret.72591987.jpg\";","module.exports = __webpack_public_path__ + \"static/media/panret2.2105b5cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/soupret.b0e79d37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spoonret.7760c9c9.jpg\";","var map = {\n\t\"./contactret.jpg\": 222,\n\t\"./cookbookret.jpg\": 223,\n\t\"./cookfriendsret.jpg\": 113,\n\t\"./eventret.jpg\": 74,\n\t\"./facebook2ret.jpg\": 114,\n\t\"./instagramret.jpg\": 115,\n\t\"./knobovenret.jpg\": 224,\n\t\"./knobovenretactive.jpg\": 225,\n\t\"./loginret.jpg\": 116,\n\t\"./panret.jpg\": 44,\n\t\"./panret2.jpg\": 117,\n\t\"./reciperet.jpg\": 226,\n\t\"./soupret.jpg\": 118,\n\t\"./spoonret.jpg\": 119,\n\t\"./tastingret.jpg\": 227,\n\t\"./womancookingbackg.jpg\": 111\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 221;","module.exports = __webpack_public_path__ + \"static/media/contactret.81f085e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cookbookret.81297265.jpg\";","module.exports = __webpack_public_path__ + \"static/media/knobovenret.cecd1799.jpg\";","module.exports = __webpack_public_path__ + \"static/media/knobovenretactive.9d9bf0c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reciperet.f5af451c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tastingret.748f094c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/signupret.eef7a588.png\";","module.exports = __webpack_public_path__ + \"static/media/recipebookret.82e35d0b.png\";","import createEncryptor from \"redux-persist-transform-encrypt\";\r\n\r\nconst encryptor = createEncryptor({\r\n  secretKey: process.env.REACT_APP_STORE_KEY,\r\n  onError: (err) => console.log(err),\r\n});\r\n\r\nexport default encryptor;\r\n","export const signupCases = Object.freeze({\r\n  LOADING: \"signup_Loading\",\r\n  USER_SIGNEDUP: \"signupUser_Signedup\",\r\n  ERROR: \"signup_Error\",\r\n  CLEAR_STATE: \"signup_ClearState\",\r\n});\r\n\r\nexport const customerContactCases = Object.freeze({\r\n  LOADING: \"customerContact_Loading\",\r\n  EMAIL_SENT: \"customerContact_EmailSent\",\r\n  ERROR: \"customerContact_Error\",\r\n  CLEAR_STATE: \"customerContact_ClearState\",\r\n});\r\n\r\nexport const remindPassCases = Object.freeze({\r\n  LOADING: \"remindPass_Loading\",\r\n  ERROR: \"remindPass_Error\",\r\n  PASSWORD_SENT: \"remindPass_Sent\",\r\n  CLEAR_STATE: \"remindPass_ClearState\",\r\n});\r\n\r\nexport const showRemindPassCases = Object.freeze({\r\n  FORM_SHOWN: \"showRemindPass_Visible\",\r\n});\r\n\r\nexport const loginCases = Object.freeze({\r\n  LOADING: \"login_Loading\",\r\n  LOADING_GOOGLE: \"login_LoadingGoogle\",\r\n  USER_DATA: \"login_UserData\",\r\n  ERROR: \"login_Error\",\r\n  CLEAR_STATE: \"login_ClearState\",\r\n  CLEAR_ERROR_STATE: \"loginCases_ClearErrorState\",\r\n});\r\n\r\nexport const logoutCases = Object.freeze({\r\n  LOADING: \"logout_Loading\",\r\n  SIGNOUT: \"logout_Signout\",\r\n  ERROR: \"logout_Error\",\r\n  CLEAR_STATE: \"logout_ClearState\",\r\n});\r\n\r\nexport const googleLogoutCases = Object.freeze({\r\n  LOADING: \"googleLogout_Loading\",\r\n  SIGNOUT: \"googleLogout_Signout\",\r\n  CLEAR_STATE: \"googleLogout_ClearState\",\r\n});\r\n\r\nexport const signupGoogleUserCases = Object.freeze({\r\n  LOADING: \"signupGoogleUser_Loading\",\r\n  USER_GOOGLE_SIGNEDUP: \"signupGoogleUser_SignedUp\",\r\n  ERROR: \"signupGoogleUser_Error\",\r\n  CLEAR_STATE: \"signupGoogleUser_ClearState\",\r\n});\r\n\r\nexport const retrieveRecipesCases = Object.freeze({\r\n  LOADING: \"retrieveRecipes_Loading\",\r\n  RECIPE_RETRIVED: \"retrieveRecipes_RecipeRetrieved\",\r\n  ERROR: \"retrieveRecipes_Error\",\r\n  CLEAR_STATE: \"retrieveRecipesCases_ClearState\",\r\n});\r\n\r\nexport const showRecipeDetailsCases = Object.freeze({\r\n  LOADING: \"showRecipeDetails_Loading\",\r\n  SHOWN: \"showRecipeDetails_Shown\",\r\n  DETAILS_RETRIVED: \"showRecipeDetails_DetailsRetrieved\",\r\n  ERROR: \"showRecipeDetails_Error\",\r\n  CLEAR_STATE: \"showRecipeDetails_ClearState\",\r\n  CLEAR_ERROR_STATE: \"showRecipeDetails_ClearErrorState\",\r\n});\r\n\r\nexport const recipeCategorySelectedCases = Object.freeze({\r\n  BUTTON_ID_RETRIEVED: \"recipeCategorySelected_ButtonIdRetrieved\",\r\n  CLEAR_STATE: \"recipeCategorySelected_ClearState\",\r\n});\r\n\r\nexport const toEditRecipeRateCommentCases = Object.freeze({\r\n  RATE_COMMENT_RETRIEVED: \"toEditRecipeRateComment_RateCommentRetrieved\",\r\n  CLEAR_STATE: \"toEditRecipeRateComment_ClearState\",\r\n});\r\n\r\nexport const changeRecipeListItemCases = Object.freeze({\r\n  RECIPE_LIST_ITEM_CHANGED: \"changeRecipeListItem_RecipeListItemChanged\",\r\n});\r\n\r\nexport const changeRateCommentCases = Object.freeze({\r\n  RATE_COMMENT_CHANGED: \"changeRateComment_RateCommentChanged\",\r\n});\r\n\r\nexport const turnOffRecipeButtonsCases = Object.freeze({\r\n  SEARCH_INPUT_FILLED: \"turnOffRecipeButtons_SearchInputFilled\",\r\n});\r\n\r\nexport const recipeButtonTurnedOnCases = Object.freeze({\r\n  BUTTON_PRESSES: \"recipeButtonTurnedOn_ButtonPressed\",\r\n});\r\n\r\nexport const retrieveMyRecipesCases = Object.freeze({\r\n  LOADING: \"retrieveMyRecipes_Loading\",\r\n  MY_RECIPES_RETRIEVED: \"retrieveMyRecipes_MyRecipesRetrieved\",\r\n  ERROR: \"retrieveMyRecipes_Error\",\r\n  CLEAR_STATE: \"retrieveMyRecipes_ClearState\",\r\n});\r\n\r\nexport const showNewRecipeFormCases = Object.freeze({\r\n  FORM_SHOWN: \"showNewRecipeForm_FormShown\",\r\n});\r\n\r\nexport const toEditMyRecipeCases = Object.freeze({\r\n  MY_RECIPE_TO_EDIT: \"toEditMyRecipe_MyRecipeToEdit\",\r\n  CLEAR_STATE: \"toEditMyRecipe_ClearState\",\r\n});\r\n\r\nexport const myRecipePreviewCases = Object.freeze({\r\n  PREVIEW_SHOWN: \"myRecipePreview_PreviewShown\",\r\n  PREVIEW_DATA_RECEIVED: \"myRecipePreview_PreviewDataReceived\",\r\n  CLEAR_STATE: \"myRecipePreview_ClearState\",\r\n});\r\n\r\nexport const updateMyProfileCases = Object.freeze({\r\n  PROFILE_UPDATED: \"updateMyProfile_ProfileUpdated\",\r\n});\r\n\r\nexport const userLoggedCases = Object.freeze({\r\n  USER_LOGGED: \"userLogged_UserLogged\",\r\n});\r\n\r\nexport const showMyPasswordFormCases = Object.freeze({\r\n  FORM_SHOWN: \"showMyPasswordForm_FormShown\",\r\n});\r\n\r\nexport const changePasswordCases = Object.freeze({\r\n  LOADING: \"changePassword_Loading\",\r\n  PASSWORD_CHANGED: \"changePassword_PasswordChanged\",\r\n  ERROR: \"changePassword_Error\",\r\n  CLEAR_STATE: \"changePassword_ClearState\",\r\n});\r\n\r\nexport const changeMyRecipesCases = Object.freeze({\r\n  LOADING: \"changeMyRecipes_Loading\",\r\n  RECIPE_UPDATED: \"changeMyRecipes_RecipeUpdated\",\r\n  ERROR: \"changeMyRecipes_Error\",\r\n  CLEAR_STATE: \"changeMyRecipes_ClearState\",\r\n});\r\n\r\nexport const removeAccountCases = Object.freeze({\r\n  LOADING: \"removeAccount_Loading\",\r\n  ACCOUNT_REMOVED: \"removeAccount_AccountRemoved\",\r\n  ERROR: \"removeAccount_Error\",\r\n  CLEAR_STATE: \"removeAccount_ClearState\",\r\n});\r\n\r\nexport const eventCategorySelectedCases = Object.freeze({\r\n  BUTTON_ID_RETRIEVED: \"eventCategorySelected_ButtonIdRetrieved\",\r\n  CLEAR_STATE: \"eventCategorySelected_ClearState\",\r\n});\r\n\r\nexport const showNewEventFormCases = Object.freeze({\r\n  FORM_SHOWN: \"showNewEventForm_FormShown\",\r\n});\r\n\r\nexport const getAddressCases = Object.freeze({\r\n  LOADING: \"getAddress_Loading\",\r\n  ADDRESSES_RETRIEVED: \"getAddress_AddressesRetrieved\",\r\n  ERROR: \"getAddress_Error\",\r\n  CLEAR_STATE: \"getAddress_ClearState\",\r\n});\r\n\r\nexport const selectEventAddressCases = Object.freeze({\r\n  ADDRESS_SELECTED: \"selectEventAddress_AddressSelected\",\r\n  CLEAR_STATE: \"selectEventAddress_ClearState\",\r\n});\r\n\r\nexport const chooseEventAddressCases = Object.freeze({\r\n  ADDRESS_CHOSEN: \"chooseEventAddress_AddressChosen\",\r\n});\r\n\r\nexport const getLocationDetailsCases = Object.freeze({\r\n  LOADING: \"getLocationDetails_Loading\",\r\n  LOCATION_DETAILS_RETRIEVED: \"getLocationDetails_LoactionDetalsRetrieved\",\r\n  ERROR: \"getLocationDetails_Error\",\r\n  CLEAR_STATE: \"getLocationDetails_ClearState\",\r\n});\r\n\r\nexport const changeEventCases = Object.freeze({\r\n  LOADING: \"changeEvent_Loading\",\r\n  EVENT_CHANGED: \"changeEvent_EventChanged\",\r\n  ERROR: \"changeEvent_Error\",\r\n  CLEAR_STATE: \"changeEvent_ClearState\",\r\n});\r\n\r\nexport const retrieveEventsCases = Object.freeze({\r\n  LOADING: \"retrieveEvents_Loading\",\r\n  EVENTS_RETRIEVED: \"retrieveEvents_EventsRetrieved\",\r\n  ERROR: \"retrieveEvents_Error\",\r\n  CLEAR_STATE: \"retrieveEvents_ClearState\",\r\n});\r\n\r\nexport const myEventPreviewCases = Object.freeze({\r\n  LOADING: \"myEventPreview_Loading\",\r\n  PREVIEW_SHOWN: \"myEventPreview_PreviewShown\",\r\n  PREVIEW_DATA_RECEIVED: \"myEventPreview_PreviewDataReceived\",\r\n  ERROR: \"myEventPreview_Error\",\r\n  CLEAR_ERROR_STATE: \"myEventPreview_ClearErrorState\",\r\n  CLEAR_STATE: \"myEventPreview_ClearState\",\r\n});\r\n\r\nexport const toEditEventCases = Object.freeze({\r\n  EVENT_TO_EDIT: \"toEditEvent_EventToEdit\",\r\n  CLEAR_STATE: \"toEditEvent_ClearState\",\r\n});\r\n\r\nexport const searchEventFilledCases = Object.freeze({\r\n  FORM_FILLED: \"searchEventFilled_FormFilled\",\r\n});\r\n\r\nexport const ioConnectCases = Object.freeze({\r\n  iO_CONNECTED: \"ioConnect_IoConnected\",\r\n  CLEAR_STATE: \"ioConnect_CLearState\",\r\n});\r\n\r\nexport const showNewMessageFormCases = Object.freeze({\r\n  FORM_SHOWN: \"showNewMessageForm_FormShown\",\r\n});\r\n\r\nexport const chooseRecipientCases = Object.freeze({\r\n  RECIPIENT_CHOSEN: \"chooseRecipient_RecipientChosen\",\r\n  CLEAR_STATE: \"chooseRecipient_ClearState\",\r\n});\r\n\r\nexport const newMessageSelectedCases = Object.freeze({\r\n  SELECTED: \"newMessageSelected_Selected\",\r\n});\r\n\r\nexport const setConversationCases = Object.freeze({\r\n  CONVERSATION_RETRIEVED: \"setConversation_ConversationRetrieved\",\r\n  CLEAR_STATE: \"setConversation_ClearState\",\r\n});\r\n\r\nexport const setMessagesCases = Object.freeze({\r\n  MESSAGES_RETRIEVED: \"setMessages_MessagesRetrieved\",\r\n  CLEAR_STATE: \"setMessages_ClearState\",\r\n});\r\n\r\nexport const setMessageIdCases = Object.freeze({\r\n  ID_RETRIEVED: \"setMessageId_IdRetrieved\",\r\n  CLEAR_STATE: \"setMessageId_ClearState\",\r\n});\r\n\r\nexport const conversationWindowOpenCases = Object.freeze({\r\n  WINDOW_OPEN: \"conversationWindowOpen_WindowOpen\",\r\n});\r\n\r\nexport const mailsComponentActiveCases = Object.freeze({\r\n  MAILS_ACTIVE: \"mailsComponentActive_MailsActive\",\r\n});\r\n\r\nexport const mailErrorCases = Object.freeze({\r\n  ERROR_RETRIEVED: \"mailError_ErrorRetrieved\",\r\n  CLEAR_STATE: \"mailError_ClearState\",\r\n});\r\n\r\nexport const showCalendarCases = Object.freeze({\r\n  CALENDAR_SHOWN: \"showCalendar_CalendarShown\",\r\n});\r\n\r\nexport const selectEventDateCases = Object.freeze({\r\n  DATE_RETRIEVED: \"selectEventDate_DateRetrieved\",\r\n  CLEAR_STATE: \"selectEventDate_ClearState\",\r\n});\r\n\r\nexport const showEmojisCases = Object.freeze({\r\n  EMOJIS_SHOWN: \"showEmojis_EmojisShown\",\r\n});\r\n\r\nexport const getEmojisCases = Object.freeze({\r\n  EMOJIS_RETRIEVED: \"getEmojis_EmojisRetrieved\",\r\n  CATEGORIES_RETRIEVED: \"getEmojis_CategoriesRetrieved\",\r\n  ERROR: \"getEmojis_Error\",\r\n  CLEAR_STATE: \"getEmojis_ClearState\",\r\n});\r\n\r\nexport const selectEmojiCases = Object.freeze({\r\n  EMOJI_SELECTED: \"selectEmoji_EmojiSelected\",\r\n  CLEAR_STATE: \"selectEmoji_ClearState\",\r\n});\r\n","import { signupCases } from \"../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  userSignedup: null,\r\n  error: null,\r\n};\r\n\r\nconst signupReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case signupCases.LOADING:\r\n      return { ...state, initialState, loading: action.payload };\r\n    case signupCases.USER_SIGNEDUP:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        userSignedup: action.payload,\r\n      };\r\n    case signupCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        error: action.payload,\r\n      };\r\n    case signupCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default signupReducer;\r\n","import { customerContactCases } from \"../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  emailSent: null,\r\n  emailSentError: null,\r\n};\r\n\r\nconst customerContactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case customerContactCases.LOADING:\r\n      return { ...state, ...initialState, loading: action.payload };\r\n    case customerContactCases.EMAIL_SENT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        emailSent: action.payload,\r\n      };\r\n    case customerContactCases.ERROR:\r\n      return { ...state, ...initialState, emailSentError: action.payload };\r\n    case customerContactCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default customerContactReducer;\r\n","import { showRemindPassCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n};\r\n\r\nconst showRemindPassReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showRemindPassCases.FORM_SHOWN:\r\n      return {\r\n        ...state,\r\n        show: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showRemindPassReducer;\r\n","import { remindPassCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  passwordSent: null,\r\n  remindPassError: null,\r\n};\r\n\r\nconst remindPasswordReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case remindPassCases.LOADING:\r\n      return { ...state, initialState, loading: action.payload };\r\n    case remindPassCases.PASSWORD_SENT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        passwordSent: action.payload,\r\n      };\r\n    case remindPassCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        remindPassError: action.payload,\r\n      };\r\n    case remindPassCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default remindPasswordReducer;\r\n","import { loginCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  loadingGoogle: false,\r\n  userData: {},\r\n  loginError: null,\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case loginCases.LOADING:\r\n      return { ...state, loading: action.payload };\r\n    case loginCases.LOADING_GOOGLE:\r\n      return { ...state, loadingGoogle: action.payload };\r\n    case loginCases.USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        userData: action.payload,\r\n      };\r\n    case loginCases.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loadingGoogle: false,\r\n        loginError: action.payload,\r\n      };\r\n    case loginCases.CLEAR_ERROR_STATE:\r\n      return {\r\n        ...state,\r\n        loginError: null,\r\n      };\r\n    case loginCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","import { logoutCases } from \"../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  userLoggedOut: false,\r\n  logoutError: null,\r\n};\r\n\r\nconst logoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case logoutCases.LOADING:\r\n      return { ...state, ...initialState, loading: action.payload };\r\n    case logoutCases.SIGNOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        userLoggedOut: action.payload,\r\n      };\r\n    case logoutCases.ERROR:\r\n      return { ...state, ...initialState, logoutError: action.payload };\r\n    case logoutCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logoutReducer;\r\n","import { signupGoogleUserCases } from \"../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingSignGoogle: false,\r\n  userGoogleSignedup: null,\r\n  errorGoogleSignup: null,\r\n};\r\n\r\nconst googleSignupReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case signupGoogleUserCases.LOADING:\r\n      return { ...state, ...initialState, loadingSignGoogle: action.payload };\r\n    case signupGoogleUserCases.USER_GOOGLE_SIGNEDUP:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        userGoogleSignedup: action.payload,\r\n      };\r\n    case signupGoogleUserCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        errorGoogleSignup: action.payload,\r\n      };\r\n    case signupGoogleUserCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default googleSignupReducer;\r\n","import { retrieveRecipesCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingRecipes: false,\r\n  recipesRetrieved: null,\r\n  recipesError: null,\r\n};\r\n\r\nconst retrieveRecipesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case retrieveRecipesCases.LOADING:\r\n      return { ...state, ...initialState, loadingRecipes: action.payload };\r\n    case retrieveRecipesCases.RECIPE_RETRIVED:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        recipesRetrieved: action.payload,\r\n      };\r\n    case retrieveRecipesCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        recipesError: action.payload,\r\n      };\r\n    case retrieveRecipesCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default retrieveRecipesReducer;\r\n","import { showRecipeDetailsCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  detailsLoading: false,\r\n  detailsShown: false,\r\n  detailsDataRetrieved: {},\r\n  detailsDataError: null,\r\n};\r\n\r\nconst showRecipeDetailsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showRecipeDetailsCases.SHOWN:\r\n      return {\r\n        ...state,\r\n        detailsShown: action.payload,\r\n      };\r\n    case showRecipeDetailsCases.LOADING:\r\n      return { ...state, detailsLoading: action.payload };\r\n    case showRecipeDetailsCases.DETAILS_RETRIVED:\r\n      return {\r\n        ...state,\r\n        detailsLoading: false,\r\n        detailsDataRetrieved: action.payload,\r\n      };\r\n    case showRecipeDetailsCases.ERROR:\r\n      return {\r\n        ...state,\r\n        detailsLoading: false,\r\n        detailsDataError: action.payload,\r\n      };\r\n    case showRecipeDetailsCases.CLEAR_ERROR_STATE:\r\n      return { ...state, detailsDataError: null };\r\n    case showRecipeDetailsCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showRecipeDetailsReducer;\r\n","import { recipeCategorySelectedCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  recipeButtonId: 0,\r\n};\r\n\r\nconst recipeCategorySelectedReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case recipeCategorySelectedCases.BUTTON_ID_RETRIEVED:\r\n      return { ...state, recipeButtonId: action.payload };\r\n    case recipeCategorySelectedCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recipeCategorySelectedReducer;\r\n","import { toEditRecipeRateCommentCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  rateAndComment: {},\r\n};\r\n\r\nconst toEditRecipeRateCommentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case toEditRecipeRateCommentCases.RATE_COMMENT_RETRIEVED:\r\n      return { ...state, ...initialState, rateAndComment: action.payload };\r\n    case toEditRecipeRateCommentCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toEditRecipeRateCommentReducer;\r\n","import { changeRecipeListItemCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  recipeListItemChanged: false,\r\n};\r\n\r\nconst changeRecipeListItemReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case changeRecipeListItemCases.RECIPE_LIST_ITEM_CHANGED:\r\n      return {\r\n        ...state,\r\n        recipeListItemChanged: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeRecipeListItemReducer;\r\n","import { changeRateCommentCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  rateCommentChanged: false,\r\n};\r\n\r\nconst changeRateCommentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case changeRateCommentCases.RATE_COMMENT_CHANGED:\r\n      return { ...state, rateCommentChanged: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeRateCommentReducer;\r\n","import { turnOffRecipeButtonsCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  searchInputFilled: false,\r\n};\r\n\r\nconst turnOffRecipeButtonsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case turnOffRecipeButtonsCases.SEARCH_INPUT_FILLED:\r\n      return { ...state, searchInputFilled: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default turnOffRecipeButtonsReducer;\r\n","import { recipeButtonTurnedOnCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  recipeButtonPressed: 0,\r\n};\r\n\r\nconst recipeButtonTurnedOnReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case recipeButtonTurnedOnCases.BUTTON_PRESSES:\r\n      return { ...state, recipeButtonPressed: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recipeButtonTurnedOnReducer;\r\n","import { retrieveMyRecipesCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingMyRecipes: false,\r\n  myRecipesRetrieved: null,\r\n  myRecipesError: null,\r\n};\r\n\r\nconst retrieveMyRecipesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case retrieveMyRecipesCases.LOADING:\r\n      return { ...state, loadingMyRecipes: action.payload };\r\n    case retrieveMyRecipesCases.MY_RECIPES_RETRIEVED:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        myRecipesRetrieved: action.payload,\r\n      };\r\n    case retrieveMyRecipesCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        myRecipesError: action.payload,\r\n      };\r\n    case retrieveMyRecipesCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default retrieveMyRecipesReducer;\r\n","import { showNewRecipeFormCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  newRecipeFormShown: false,\r\n};\r\n\r\nconst showNewRecipeFormReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showNewRecipeFormCases.FORM_SHOWN:\r\n      return {\r\n        ...state,\r\n        newRecipeFormShown: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showNewRecipeFormReducer;\r\n","import { toEditMyRecipeCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  myRecipeToEdit: {},\r\n};\r\n\r\nconst toEditMyRecipeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case toEditMyRecipeCases.MY_RECIPE_TO_EDIT:\r\n      return { ...state, myRecipeToEdit: action.payload };\r\n    case toEditMyRecipeCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toEditMyRecipeReducer;\r\n","import { myRecipePreviewCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  myRecipePreviewShown: false,\r\n  myRecipePreviewData: {},\r\n};\r\n\r\nconst myRecipePreviewReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case myRecipePreviewCases.PREVIEW_SHOWN:\r\n      return { ...state, myRecipePreviewShown: action.payload };\r\n    case myRecipePreviewCases.PREVIEW_DATA_RECEIVED:\r\n      return { ...state, myRecipePreviewData: action.payload };\r\n    case myRecipePreviewCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myRecipePreviewReducer;\r\n","import { updateMyProfileCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  profileUpdated: false,\r\n};\r\n\r\nconst updateMyProfileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case updateMyProfileCases.PROFILE_UPDATED:\r\n      return { ...state, profileUpdated: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default updateMyProfileReducer;\r\n","import { userLoggedCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  userLogged: false,\r\n};\r\n\r\nconst userLoggedReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case userLoggedCases.USER_LOGGED:\r\n      return { ...state, userLogged: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userLoggedReducer;\r\n","import { showMyPasswordFormCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  myPasswordFormShown: false,\r\n};\r\n\r\nconst showMyPasswordReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showMyPasswordFormCases.FORM_SHOWN:\r\n      return {\r\n        ...state,\r\n        myPasswordFormShown: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showMyPasswordReducer;\r\n","import { changePasswordCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  userPasswordChanged: false,\r\n  changeUserPasswordError: null,\r\n};\r\n\r\nconst changePasswordReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case changePasswordCases.LOADING:\r\n      return { ...state, ...initialState, loading: action.payload };\r\n    case changePasswordCases.PASSWORD_CHANGED:\r\n      return { ...state, ...initialState, userPasswordChanged: action.payload };\r\n    case changePasswordCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        changeUserPasswordError: action.payload,\r\n      };\r\n    case changePasswordCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changePasswordReducer;\r\n","import { changeMyRecipesCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  recipeUpdated: false,\r\n  myRecipeChangeError: null,\r\n};\r\n\r\nconst changeMyRecipesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case changeMyRecipesCases.LOADING:\r\n      return { ...state, ...initialState, loading: action.payload };\r\n    case changeMyRecipesCases.RECIPE_UPDATED:\r\n      return { ...state, ...initialState, recipeUpdated: action.payload };\r\n    case changeMyRecipesCases.ERROR:\r\n      return { ...state, ...initialState, myRecipeChangeError: action.payload };\r\n    case changeMyRecipesCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeMyRecipesReducer;\r\n","import { removeAccountCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  accountRemoved: false,\r\n  removingAccountError: null,\r\n};\r\n\r\nconst removeAccountReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case removeAccountCases.LOADING:\r\n      return { ...state, ...initialState, loading: action.payload };\r\n    case removeAccountCases.ACCOUNT_REMOVED:\r\n      return { ...state, ...initialState, accountRemoved: action.payload };\r\n    case removeAccountCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        removingAccountError: action.payload,\r\n      };\r\n    case removeAccountCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default removeAccountReducer;\r\n","import { eventCategorySelectedCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  eventButtonId: 0,\r\n};\r\n\r\nconst eventCategorySelectedReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case eventCategorySelectedCases.BUTTON_ID_RETRIEVED:\r\n      return { ...state, eventButtonId: action.payload };\r\n    case eventCategorySelectedCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default eventCategorySelectedReducer;\r\n","import { showNewEventFormCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  newEventFormShown: false,\r\n};\r\n\r\nconst showNewEventFormReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showNewEventFormCases.FORM_SHOWN:\r\n      return {\r\n        ...state,\r\n        newEventFormShown: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showNewEventFormReducer;\r\n","import { getAddressCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingAddresses: false,\r\n  addressesRetrieved: [],\r\n  addressesRetrievedError: null,\r\n};\r\n\r\nconst getAddressReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case getAddressCases.LOADING:\r\n      return { ...state, loadingAddresses: action.payload };\r\n    case getAddressCases.ADDRESSES_RETRIEVED:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        addressesRetrieved: action.payload,\r\n      };\r\n    case getAddressCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        addressesRetrievedError: action.payload,\r\n      };\r\n    case getAddressCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getAddressReducer;\r\n","import { selectEventAddressCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  selectedAddress: {},\r\n};\r\n\r\nconst selectEventAddressReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case selectEventAddressCases.ADDRESS_SELECTED:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        selectedAddress: action.payload,\r\n      };\r\n    case selectEventAddressCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectEventAddressReducer;\r\n","import { chooseEventAddressCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  addressChosen: false,\r\n};\r\n\r\nconst chooseEventAddressReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case chooseEventAddressCases.ADDRESS_CHOSEN:\r\n      return {\r\n        ...state,\r\n        addressChosen: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chooseEventAddressReducer;\r\n","import { getLocationDetailsCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingLocationDetails: false,\r\n  locationDetailsRetrieved: {},\r\n  locationDetailsError: null,\r\n};\r\n\r\nconst getLocationDetailsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case getLocationDetailsCases.LOADING:\r\n      return { ...state, loadingLocationDetails: action.payload };\r\n    case getLocationDetailsCases.LOCATION_DETAILS_RETRIEVED:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        locationDetailsRetrieved: action.payload,\r\n      };\r\n    case getLocationDetailsCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        locationDetailsError: action.payload,\r\n      };\r\n    case getLocationDetailsCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getLocationDetailsReducer;\r\n","import { retrieveEventsCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingEvents: false,\r\n  eventsRetrieved: null,\r\n  eventsError: null,\r\n};\r\n\r\nconst retrieveEventsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case retrieveEventsCases.LOADING:\r\n      return { ...state, loadingEvents: action.payload };\r\n    case retrieveEventsCases.EVENTS_RETRIEVED:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        eventsRetrieved: action.payload,\r\n      };\r\n    case retrieveEventsCases.ERROR:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        eventsError: action.payload,\r\n      };\r\n    case retrieveEventsCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default retrieveEventsReducer;\r\n","import { changeEventCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loadingEventUpdating: false,\r\n  eventUpdated: false,\r\n  eventChangeError: null,\r\n};\r\n\r\nconst changeEventReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case changeEventCases.LOADING:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        loadingEventUpdating: action.payload,\r\n      };\r\n    case changeEventCases.EVENT_CHANGED:\r\n      return { ...state, ...initialState, eventUpdated: action.payload };\r\n    case changeEventCases.ERROR:\r\n      return { ...state, ...initialState, eventChangeError: action.payload };\r\n    case changeEventCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeEventReducer;\r\n","import { myEventPreviewCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  eventPreviewShown: false,\r\n  eventPreviewError: null,\r\n  eventPreviewData: {},\r\n};\r\n\r\nconst eventPreviewReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case myEventPreviewCases.PREVIEW_SHOWN:\r\n      return { ...state, eventPreviewShown: action.payload };\r\n    case myEventPreviewCases.LOADING:\r\n      return { ...state, loading: action.payload };\r\n    case myEventPreviewCases.PREVIEW_DATA_RECEIVED:\r\n      return { ...state, loading: false, eventPreviewData: action.payload };\r\n    case myEventPreviewCases.ERROR:\r\n      return { ...state, loading: false, eventPreviewError: action.payload };\r\n    case myEventPreviewCases.CLEAR_ERROR_STATE:\r\n      return { ...state, eventPreviewError: null };\r\n    case myEventPreviewCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default eventPreviewReducer;\r\n","import { toEditEventCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  eventToEdit: {},\r\n};\r\n\r\nconst toEditEventReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case toEditEventCases.EVENT_TO_EDIT:\r\n      return { ...state, eventToEdit: action.payload };\r\n    case toEditEventCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toEditEventReducer;\r\n","import { searchEventFilledCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  searchEventFilled: false,\r\n};\r\n\r\nconst searchEventFilledReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case searchEventFilledCases.FORM_FILLED:\r\n      return {\r\n        ...state,\r\n        searchEventFilled: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchEventFilledReducer;\r\n","import { ioConnectCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  socket: {},\r\n};\r\n\r\nconst ioConnectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ioConnectCases.iO_CONNECTED:\r\n      return { ...state, socket: action.payload };\r\n    case ioConnectCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ioConnectReducer;\r\n","import { showNewMessageFormCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  newMessageFormShown: false,\r\n};\r\n\r\nconst showNewMessageFormReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showNewMessageFormCases.FORM_SHOWN:\r\n      return {\r\n        ...state,\r\n        newMessageFormShown: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showNewMessageFormReducer;\r\n","import { chooseRecipientCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  recipient: {},\r\n};\r\n\r\nconst chooseRecipientReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case chooseRecipientCases.RECIPIENT_CHOSEN:\r\n      return { ...state, recipient: action.payload };\r\n    case chooseRecipientCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chooseRecipientReducer;\r\n","import { newMessageSelectedCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  newMessageSelected: false,\r\n};\r\n\r\nconst newMessageSelectedReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case newMessageSelectedCases.SELECTED:\r\n      return { ...state, newMessageSelected: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default newMessageSelectedReducer;\r\n","import { setConversationCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  conversations: [],\r\n};\r\n\r\nconst setConversationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case setConversationCases.CONVERSATION_RETRIEVED:\r\n      return { ...state, conversations: action.payload };\r\n    case setConversationCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setConversationReducer;\r\n","import { setMessagesCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  messages: [],\r\n};\r\n\r\nconst setMessagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case setMessagesCases.MESSAGES_RETRIEVED:\r\n      return { ...state, messages: action.payload };\r\n    case setMessagesCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setMessagesReducer;\r\n","import { setMessageIdCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  messageId: null,\r\n};\r\n\r\nconst setMessageIdReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case setMessageIdCases.ID_RETRIEVED:\r\n      return { ...state, messageId: action.payload };\r\n    case setMessageIdCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setMessageIdReducer;\r\n","import { conversationWindowOpenCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  windowOpen: false,\r\n};\r\n\r\nconst conversationWindowOpenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case conversationWindowOpenCases.WINDOW_OPEN:\r\n      return { ...state, windowOpen: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default conversationWindowOpenReducer;\r\n","import { mailsComponentActiveCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  mailsActive: false,\r\n};\r\n\r\nconst mailsComponentActiveReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case mailsComponentActiveCases.MAILS_ACTIVE:\r\n      return { ...state, mailsActive: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mailsComponentActiveReducer;\r\n","import { mailErrorCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  mailError: null,\r\n};\r\n\r\nconst mailErrorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case mailErrorCases.ERROR_RETRIEVED:\r\n      return { ...state, mailError: action.payload };\r\n    case mailErrorCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mailErrorReducer;\r\n","import { showCalendarCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  calendarShown: false,\r\n};\r\n\r\nconst showCalendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showCalendarCases.CALENDAR_SHOWN:\r\n      return { ...state, calendarShown: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showCalendarReducer;\r\n","import { selectEventDateCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  eventDate: null,\r\n};\r\n\r\nconst selectEventDateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case selectEventDateCases.DATE_RETRIEVED:\r\n      return { ...state, eventDate: action.payload };\r\n    case selectEventDateCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectEventDateReducer;\r\n","import { showEmojisCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  emojisShown: false,\r\n};\r\n\r\nconst showEmojisReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case showEmojisCases.EMOJIS_SHOWN:\r\n      return { ...state, emojisShown: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default showEmojisReducer;\r\n","import { getEmojisCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  emojisAll: [],\r\n  emojiCategories: [],\r\n  emojiError: null,\r\n};\r\n\r\nconst getEmojisReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case getEmojisCases.EMOJIS_RETRIEVED:\r\n      return { ...state, emojisAll: action.payload };\r\n    case getEmojisCases.CATEGORIES_RETRIEVED:\r\n      return { ...state, emojiCategories: action.payload };\r\n    case getEmojisCases.ERROR:\r\n      return { ...state, ...initialState, emojiError: action.payload };\r\n    case getEmojisCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getEmojisReducer;\r\n","import { selectEmojiCases } from \"../../../config/cases/Cases\";\r\n\r\nconst initialState = {\r\n  emojiCharacter: null,\r\n};\r\n\r\nconst selectEmojiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case selectEmojiCases.EMOJI_SELECTED:\r\n      return { ...state, emojiCharacter: action.payload };\r\n    case selectEmojiCases.CLEAR_STATE:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectEmojiReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport signupReducer from \"../../signup/reducer/SignupReducer\";\r\nimport customerContactReducer from \"../../customerContact/reducer/customerContactReducer\";\r\nimport showRemindPassReducer from \"../../remindPassword/showRemindPass/reducer/showRemindPassReducer\";\r\nimport remindPasswordReducer from \"../../remindPassword/remindUserPassword/reducer/remindPasswordReducer\";\r\nimport loginReducer from \"../../login/loginUser/reducer/loginReducer\";\r\nimport logoutReducer from \"../../logout/reducer/logoutReducer\";\r\nimport googleSignupReducer from \"../../googleSignup/reducer/googleSignupReducer\";\r\nimport retrieveRecipesReducer from \"../../recipeBook/retrieveRecipe/reducer/retrieveRecipesReducer\";\r\nimport showRecipeDetailsReducer from \"../../recipeBook/showRecipeDetails/reducer/showRecipeDetailsReducer\";\r\nimport recipeCategorySelectedReducer from \"../../recipeBook/recipeCategorySelected/reducer/recipeCategorySelectedReducer\";\r\nimport toEditRecipeRateCommentReducer from \"../../recipeBook/toEditRecipeRateComment/reducer/toEditRateCommentReducer\";\r\nimport changeRecipeListItemReducer from \"../../recipeBook/changeRecipeListItem/reducer/changeRecipeListItemReducer\";\r\nimport changeRateCommentReducer from \"../../recipeBook/changeRateComment/reducer/changeRateCommentReducer\";\r\nimport turnOffRecipeButtonsReducer from \"../../recipeBook/turnOffRecipeButtons/reducer/turnOffRecipeButtonsReducer\";\r\nimport recipeButtonTurnedOnReducer from \"../../recipeBook/recipeButtonTurnedOn/reducer/recipeButtonTurnedOnReducer\";\r\nimport retrieveMyRecipesReducer from \"../../myRecipes/retrieveMyRecipes/reducer/retrieveMyRecipesReducer\";\r\nimport showNewRecipeFormReducer from \"../../myRecipes/showNewRecipeForm/reducer/showNewRecipeFormReducer\";\r\nimport toEditMyRecipeReducer from \"../../myRecipes/toEditMyRecipe/reducer/toEditMyRecipeReducer\";\r\nimport myRecipePreviewReducer from \"../../myRecipes/myRecipePreview/reducer/myRecipePreviewReducer\";\r\nimport updateMyProfileReducer from \"../../updateMyProfile/updateProfile/reducer/updateMyProfileReducer\";\r\nimport userLoggedReducer from \"../../login/userLogged/reducer/userLoggedReducer\";\r\nimport showMyPasswordReducer from \"../../updateMyProfile/showMyPassword/reducer/showMyPasswordReducer\";\r\nimport changePasswordReducer from \"../../updateMyProfile/changePassword/reducer/changePasswordReducer\";\r\nimport changeMyRecipesReducer from \"../../myRecipes/changeMyRecipes/reducer/changeMyRecipesReducer\";\r\nimport removeAccountReducer from \"../../updateMyProfile/removeAccount/reducer/removeAccountReducer\";\r\nimport eventCategorySelectedReducer from \"../../myEvents/eventCategorySelected/reducer/eventCategorySelectedReducer\";\r\nimport showNewEventFormReducer from \"../../myEvents/showNewEventForm/reducer/showNewEventFormReducer\";\r\nimport getAddressReducer from \"../../myEvents/getAddress/reducer/getAddressReducer\";\r\nimport selectEventAddressReducer from \"../../myEvents/selectEventAddress/reducer/selectEventAddressReducer\";\r\nimport chooseEventAddressReducer from \"../../myEvents/chooseEventAddress/reducer/chooseEventAddressReducer\";\r\nimport getLocationDetailsReducer from \"../../myEvents/getLocationDetails/reducer/getLocationDetailsReducer\";\r\nimport retrieveEventsReducer from \"../../myEvents/retrieveEvents/reducer/retrieveEventsReducer\";\r\nimport changeEventReducer from \"../../myEvents/changeEvent/reducer/changeEventReducer\";\r\nimport eventPreviewReducer from \"../../myEvents/eventPreview/reducer/eventPreviewReducer\";\r\nimport toEditEventReducer from \"../../myEvents/toEditEvent/reducer/toEditEventReducer\";\r\nimport searchEventFilledReducer from \"../../myEvents/searchEventFilled/reducer/searchEventFilledReducer\";\r\nimport ioConnectReducer from \"../../mails/socketData/reducer/ioConnectReducer\";\r\nimport showNewMessageFormReducer from \"../../mails/showNewMessageForm/reducer/showNewMessageReducer\";\r\nimport chooseRecipientReducer from \"../../mails/chooseRecipient/reducer/chooseRecipientReducer\";\r\nimport newMessageSelectedReducer from \"../../mails/newMessageSelected/reducer/newMessageSelectedReducer\";\r\nimport setConversationReducer from \"../../mails/setConversation/reducer/setConversationReducer\";\r\nimport setMessagesReducer from \"../../mails/setMessages/reducer/setMessagesReducer\";\r\nimport setMessageIdReducer from \"../../mails/setMessageId/reducer/setMessageIdReducer\";\r\nimport conversationWindowOpenReducer from \"../../mails/conversationWindowOpen/reducer/conversationWindowOpenReducer\";\r\nimport mailsComponentActiveReducer from \"../../mails/mailsComponentActive/reducer/mailsComponentActiveReducer\";\r\nimport mailErrorReducer from \"../../mails/mailError/reducer/mailErrorReducer\";\r\nimport showCalendarReducer from \"../../myEvents/showCalendar/reducer/showCalendarReducer\";\r\nimport selectEventDateReducer from \"../../myEvents/selectEventDate/reducer/selectEventDateReducer\";\r\nimport showEmojisReducer from \"../../emoji/showEmojis/reducer/showEmojisReducer\";\r\nimport getEmojisReducer from \"../../emoji/getEmojis/reducer/getEmojisReducer\";\r\nimport selectEmojiReducer from \"../../emoji/selectEmoji/reducer/selectEmojiReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  signup: signupReducer,\r\n  customerContact: customerContactReducer,\r\n  isRemindPassFormShown: showRemindPassReducer,\r\n  remindPass: remindPasswordReducer,\r\n  login: loginReducer,\r\n  logout: logoutReducer,\r\n  signGoogle: googleSignupReducer,\r\n  recipeBook: retrieveRecipesReducer,\r\n  isRecipeDetailsShown: showRecipeDetailsReducer,\r\n  recipeCategorySelected: recipeCategorySelectedReducer,\r\n  toEditRateComment: toEditRecipeRateCommentReducer,\r\n  isRecipeListItemChanged: changeRecipeListItemReducer,\r\n  isRateCommentChanged: changeRateCommentReducer,\r\n  turnOffRecipeButtons: turnOffRecipeButtonsReducer,\r\n  recipeButtonTurnedOn: recipeButtonTurnedOnReducer,\r\n  myRecipes: retrieveMyRecipesReducer,\r\n  isNewRecipeFormShown: showNewRecipeFormReducer,\r\n  toEditMyRecipe: toEditMyRecipeReducer,\r\n  myRecipePreview: myRecipePreviewReducer,\r\n  updateMyProfile: updateMyProfileReducer,\r\n  isUserLogged: userLoggedReducer,\r\n  isMyPasswordFormShown: showMyPasswordReducer,\r\n  isUserPasswordChanged: changePasswordReducer,\r\n  isMyRecipeChanged: changeMyRecipesReducer,\r\n  isAccountRemoved: removeAccountReducer,\r\n  eventCategorySelected: eventCategorySelectedReducer,\r\n  isNewEventFormShown: showNewEventFormReducer,\r\n  addressSuggestions: getAddressReducer,\r\n  selectedEventAddress: selectEventAddressReducer,\r\n  isEventAddressChosen: chooseEventAddressReducer,\r\n  locationDetails: getLocationDetailsReducer,\r\n  events: retrieveEventsReducer,\r\n  isEventChanged: changeEventReducer,\r\n  eventPreview: eventPreviewReducer,\r\n  toEditEvent: toEditEventReducer,\r\n  isSearchEventFormFilled: searchEventFilledReducer,\r\n  socketData: ioConnectReducer,\r\n  isNewMessageFormShown: showNewMessageFormReducer,\r\n  isRecipientChosen: chooseRecipientReducer,\r\n  isNewMessageSelected: newMessageSelectedReducer,\r\n  userConversations: setConversationReducer,\r\n  userMessages: setMessagesReducer,\r\n  isMessageId: setMessageIdReducer,\r\n  isConversationWindowOpen: conversationWindowOpenReducer,\r\n  isMailsComponentActive: mailsComponentActiveReducer,\r\n  hasMailError: mailErrorReducer,\r\n  isCalendarShown: showCalendarReducer,\r\n  eventDateSelected: selectEventDateReducer,\r\n  isEmojiShown: showEmojisReducer,\r\n  emojis: getEmojisReducer,\r\n  selectedEmoji: selectEmojiReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport encryptor from \"./Encryptor\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport allReducers from \"./combineReducers/Index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst persistConfig = {\r\n  key: \"qm\",\r\n  storage,\r\n  transforms: [encryptor],\r\n};\r\n\r\nconst persistedReducers = persistReducer(persistConfig, allReducers);\r\n\r\nexport default () => {\r\n  let myStore = createStore(persistedReducers, applyMiddleware(thunk));\r\n  let persistor = persistStore(myStore);\r\n  return { myStore, persistor };\r\n};\r\n","export const strings = Object.freeze({\r\n  path: {\r\n    HOME: \"/\",\r\n    GRAPHQL: \"https://localhost:4000/graphql\",\r\n    LOGIN: \"/logowanie\",\r\n    SIGNUP: \"/rejestracja\",\r\n    SIGNOUT: \"/wylogowanie\",\r\n    RECIPE_BOOK: \"/przepisy\",\r\n    MY_RECIPES: \"/mojeprzepisy\",\r\n    MAILS: \"/wiadomosci\",\r\n    MY_EVENTS: \"/wydarzenia\",\r\n    MY_PROFILE: \"/mojprofil\",\r\n    LINKEDIN: \"https://www.linkedin.com/in/pawe%C5%82-del-priore-b55bbb1a8\",\r\n    SERVER_REQUEST: \"https://localhost:4000/graphql\",\r\n    USER_PHOTO: \"#\",\r\n    IMAGE_REQUEST: \"https://localhost:4000\",\r\n    SERVER_PATH: \"https://localhost:4000\",\r\n    MAP_REQUEST: \"https://localhost:4000/heremaprender\",\r\n    GET_ADDRESSES: \"https://localhost:4000/heremaprequest\",\r\n    GET_LOCATION: \"https://localhost:4000/heremaplocation\",\r\n    GET_EMOJIS: \"https://localhost:4000/emojis\",\r\n    GET_EMOJI_CAT: \"https://localhost:4000/emojicategories\",\r\n  },\r\n  navbar: {\r\n    navType: {\r\n      LOGO: \"logo\",\r\n      LOGO_GET_STARTED: \"logoGetStarted\",\r\n      LOGO_USER_LOGGED: \"logoUserLogged\",\r\n      HOME_MENU: \"homeMenu\",\r\n      GET_STARTED_MENU: \"getStartedMenu\",\r\n      USER_LOGGED_MENU: \"userLoggedMenu\",\r\n    },\r\n    navHomeItems: {\r\n      LOGO: \"co jemy ?\",\r\n      MAIN: \"główna\",\r\n      ABOUT: \"zalety aplikacji\",\r\n      CONTACT: \"kontakt\",\r\n    },\r\n    navGetStartedItems: {\r\n      LOGIN: \"zaloguj się\",\r\n      SIGNUP: \"załóż konto\",\r\n    },\r\n    navUserLoggedItems: {\r\n      RECIPE_BOOK: \"przepisy\",\r\n      MY_RECIPES: \"moje przepisy\",\r\n      MAILS: \"wiadomości\",\r\n      MY_EVENTS: \"wydarzenia kulinarne\",\r\n      MY_PROFILE: \"mój profil\",\r\n      USER_PHOTO: \"userPhoto\",\r\n      SIGNOUT: \"wyloguj się\",\r\n    },\r\n  },\r\n  main: {\r\n    MAIN_TEXT: \"znasz fajny przepis ?\",\r\n    MAIN_SUB_TEXT: \"podziel się nim\",\r\n    BUTTON_TEXT: \"rozpocznij\",\r\n  },\r\n  about: {\r\n    FIRST_AREA: \"wyszukuj przepisy\",\r\n    SECOND_AREA: \"dziel się przepisami\",\r\n    THIRD_AREA: \"nawiązuj kontakty z użytkownikami\",\r\n    FOURTH_AREA: \"organizuj wydarzenia kulinarne\",\r\n  },\r\n  contact: {\r\n    FIRST_SECTION: \"pytania ?\",\r\n    BUTTON_TEXT: \"wyślij\",\r\n    BUTTON_TEXT_LOADING: \"wysyłam ...\",\r\n    FOOTER: \"Paweł Del Priore\",\r\n    SUBJECT: \"temat *\",\r\n    SUBJECT_PLACEHOLDER: \"temat\",\r\n    EMAIL: \"twój email *\",\r\n    EMAIL_PLACEHOLDER: \"email\",\r\n    MESSAGE: \"wiadomość *\",\r\n    MESSAGE_PLACEHOLDER: \"wiadomość\",\r\n  },\r\n  login: {\r\n    EMAIL: \"twój email *\",\r\n    EMAIL_PLACEHOLDER: \"email\",\r\n    PASSWORD: \"hasło *\",\r\n    PASSWORD_PLACEHOLDER: \"hasło\",\r\n    BUTTON_TEXT: \"zaloguj się !\",\r\n    BUTTON_TEXT_LOADING: \"loguję ...\",\r\n    FORGOT_PASSWORD: \"zapomniałeś hasła ?\",\r\n  },\r\n  signup: {\r\n    USER_NAME: \"nazwa użytkownika (min. 5 znaków) *\",\r\n    USER_NAME_PLACEHOLDER: \"nazwa użytkownika\",\r\n    EMAIL: \"twój email *\",\r\n    EMAIL_PLACEHOLDER: \"email\",\r\n    CONFIRM_EMAIL: \"potwierdź swój email *\",\r\n    CONFIRM_EMAIL_PLACEHOLDER: \"potwierdź swój email\",\r\n    PASSWORD: \"hasło (min. 8 znaków) *\",\r\n    PASSWORD_PLACEHOLDER: \"hasło\",\r\n    BUTTON_TEXT: \"załóż konto !\",\r\n    BUTTON_TEXT_LOADING: \"rejestruję ...\",\r\n    CHECK_EMAIL:\r\n      \"Sprawdź swoją skrzynkę mailową i potwierdź że jesteś właścicielem wcześniej podanego adresu\",\r\n  },\r\n  signupGoogle: {\r\n    BUTTON_TEXT: \"załóż konto !\",\r\n    GOOGLE_USER_CREATED: \"konto założone\",\r\n  },\r\n  remindPass: {\r\n    EMAIL: \"twój email *\",\r\n    EMAIL_PLACEHOLDER: \"email\",\r\n    BUTTON_TEXT: \"wyślij\",\r\n    BUTTON_TEXT_LOADING: \"wysyłam ...\",\r\n    BUTTON_TEXT_CANCEL: \"anuluj\",\r\n  },\r\n  searchRecipe: {\r\n    SEARCH: \"znajdź przepis ...\",\r\n  },\r\n  logout: {\r\n    LOGOUT: \"wylogowywuję ...\",\r\n  },\r\n  recipeBook: {\r\n    BUTTON_NEW: \"nowości\",\r\n    CAT_NEWS: \"news\",\r\n    BUTTON_FAST_FOOD: \"fast food\",\r\n    CAT_FAST_FOOD: \"fast food\",\r\n    BUTTON_LUNCH: \"lunch\",\r\n    CAT_LUNCH: \"lunch\",\r\n    BUTTON_DESSERT: \"desery\",\r\n    CAT_DESSERT: \"desserts\",\r\n    BUTTON_DRINKS: \"drinki\",\r\n    CAT_DRINKS: \"drinks\",\r\n    BUTTON_EVENING: \"podwieczorek\",\r\n    CAT_EVENING: \"evening\",\r\n    BUTTON_SALADES: \"sałatki\",\r\n    CAT_SALADES: \"salades\",\r\n  },\r\n  recipeBookDetails: {\r\n    DESCRIBE: \"opis przygotowania:\",\r\n    INGREDIENTS: \"składniki:\",\r\n    FOLLOW: \"obserwuj autora przepisu\",\r\n    FOLLOW_LOADING: \"proszę czekać ...\",\r\n    UNFOLLOW: \"wyłącz obserwowanie\",\r\n  },\r\n  rating: {\r\n    DETAILS: \"details\",\r\n    LIST: \"list\",\r\n    COMMENT_RATE: \"commentRate\",\r\n    RATE_AND_COMMENT: \"rateAndComment\",\r\n    RATING_STARS: \"ratingStars\",\r\n    COMMENT: \"twój komentarz\",\r\n    BUTTON_TEXT: \"dodaj\",\r\n    BUTTON_TEXT_LOADING: \"dodaję ...\",\r\n    NOTE: \"ocena\",\r\n    BUTTON_EDIT_TEXT: \"popraw\",\r\n    BUTTON_EDIT_TEXT_LOADING: \"poprawiam ...\",\r\n    BUTTON_CANCEL_TEXT: \"anuluj\",\r\n  },\r\n  myRecipes: {\r\n    BUTTON_NEW_RECIPE: \"nowy przepis\",\r\n    BUTTON_CORRECTION: \"popraw\",\r\n    BUTTON_REMOVE: \"usuń\",\r\n    BUTTON_REMOVE_LOADING: \"usuwam ...\",\r\n    TITLE: \"nazwa (max 21 znaków) *\",\r\n    TITLE_PLACEHOLDER: \"nazwa\",\r\n    PICTURE: \"obrazek\",\r\n    VIDEO: \"nagranie wideo\",\r\n    VIDEO_PLACEHOLDER: \"https://www.youtube.com/watch?v=xd\",\r\n    CATEGORY: \"kategoria *\",\r\n    COOK_TIME: \"czas przygotowania *\",\r\n    COOK_TIME_PLACEHOLDER: \"w minutach\",\r\n    LOADING_IMAGE: \"kompresuję ...\",\r\n    INGREDIENTS: \"składniki *\",\r\n    INGREDIENTS_EX: \"50ml oliwy,sól,pieprz, ...\",\r\n    DESCRIPTION: \"opis przygotowania *\",\r\n    DESCRIPTION_PLACEHOLDER: \"opis przygotowania\",\r\n    CHOOSE_PICTURE: \"wybierz obrazek\",\r\n    CHOOSE_CATEGORY: \"wybierz kategorię ...\",\r\n    MAX_PICTURE_SIZE: \"max 9 MB\",\r\n    category: {\r\n      LUNCH: \"lunch\",\r\n      DESSERTS: \"desery\",\r\n      DRINKS: \"drinki\",\r\n      EVENING: \"podwieczorek\",\r\n      SALADES: \"sałatki\",\r\n      FAST_FOOD: \"fast food\",\r\n    },\r\n    inputName: {\r\n      TITLE: \"title\",\r\n      COOK_TIME: \"cookTime\",\r\n      INGREDIENTS: \"ingredients\",\r\n      DESCRIPTION: \"description\",\r\n    },\r\n    error: {\r\n      VIDEO_URL_ERROR: \"nieprawidłowy adres nagrania\",\r\n      IMAGE_SIZE_ERROR: \"rozmiar obrazka przekracza 9 MB\",\r\n      IMAGE_UNACCEPTABLE: \"obrazek niewłaściwy\",\r\n      IMAGE_FORMAT: \"nieprawidłowy format obrazka\",\r\n      VIDEO_UNACCEPTABLE: \"nagranie niewłaściwe\",\r\n    },\r\n  },\r\n  myProfile: {\r\n    USER_NAME: \"nazwa użytkownika (min. 5 znaków) *\",\r\n    USER_NAME_PLACEHOLDER: \"nazwa użytkownika\",\r\n    BUTTON_TEXT_EDIT: \"modyfikujemy ?\",\r\n    BUTTON_TEXT: \"modyfikuj\",\r\n    BUTTON_TEXT_LOADING: \"modyfikuję ...\",\r\n    BUTTON_EDIT_PASS: \"zmieniamy hasło ?\",\r\n    CURRENT_PASS: \"aktualne hasło *\",\r\n    CURRENT_PASS_PLACEHOLDER: \"aktualne hasło\",\r\n    NEW_PASS: \"nowe hasło *\",\r\n    NEW_PASS_PLACEHOLDER: \"nowe hasło\",\r\n    CONFIRM_PASS: \"potwierdź nowe hasło *\",\r\n    CONFIRME_PASS_PLACEHOLDER: \"potwierdź nowe hasło\",\r\n    PASSWORD_CHANGED: \"twoje hasło zostało zmienione\",\r\n    REMOVE_ACCOUNT: \"na pewno chcesz usunąć konto ?\",\r\n    PHOTO: \"zdjęcie\",\r\n    PICKER: \"wybierz zdjęcie\",\r\n  },\r\n  myEvents: {\r\n    BUTTON_ALL: \"lista wydarzeń\",\r\n    CAT_ALL: \"all\",\r\n    BUTTON_MY_EVENTS: \"moje wydarzenia\",\r\n    CAT_MY_EVENTS: \"myEvents\",\r\n    BUTTON_EVENTS_JOINED: \"uczestniczę\",\r\n    CAT_EVENTS_JOINED: \"eventsJoined\",\r\n    BUTTON_NEW_EVENT: \"nowe wydarzenie\",\r\n    TITLE: \"nazwa (max 21 znaków) *\",\r\n    TITLE_PLACEHOLDER: \"nazwa\",\r\n    PHOTO: \"zdjęcie wydarzenia\",\r\n    ADDRESS: \"miejsce *\",\r\n    ADDRESS_PREVIEW: \"miejsce:\",\r\n    ADDRESS_PLACEHOLDER: \"Plac Defilad 1, Warszawa\",\r\n    DESCRIPTION: \"opis wydarzenia *\",\r\n    DESCRIPTION_PLACEHOLDER: \"opis wydarzenia\",\r\n    AVAILABLE_PLACES: \"ilość wolnych miejsc *\",\r\n    AVAILABLE_PLACES_PLACEHOLDER: \"ilość wolnych miejsc\",\r\n    AVAILABLE_PLACES_PREVIEW: \"wolne miejsca:\",\r\n    EVENT_DATE: \"data wydarzenia *\",\r\n    EVENT_DATE_PLACEHOLDER: \"data wydarzenia\",\r\n    TEL: \"telefon kontaktowy *\",\r\n    TEL_PLACEHOLDER: \"601100200\",\r\n    PARTICIPANTS_PREVIEW: \"uczestnicy:\",\r\n    SEARCH_CITY: \"miasto\",\r\n    SEARCH_DATE: \"data wydarzenia\",\r\n    DATE_PLACEHOLDER: \"01/12/2020, 10:00\",\r\n    SEARCH_DATE_PLACEHOLDER: \"01/12/2020\",\r\n    BUTTON_JOIN: \"weź udział\",\r\n    BUTTON_JOIN_LOADING: \"zapisuję ...\",\r\n    BUTTON_UNJOIN: \"zrezygnuj\",\r\n    BUTTON_UNJOIN_LOADING: \"wypisuję ...\",\r\n    PICKER: \"wybierz zdjęcie\",\r\n    FOLLOW: \"obserwuj autora wydarzenia\",\r\n    error: {\r\n      NO_SUGGESTIONS: \"brak wydarzeń\",\r\n      NO_PARTICIPANTS: \"narazie nikt się nie zapisał :(\",\r\n    },\r\n    inputName: {\r\n      TITLE: \"title\",\r\n      DESCRIPTION: \"description\",\r\n      AVAILABLE_PLACES: \"availablePlaces\",\r\n      CITY: \"city\",\r\n    },\r\n    calendar: {\r\n      days: {\r\n        MON: \"pon\",\r\n        TUE: \"wt\",\r\n        WED: \"sr\",\r\n        THU: \"czw\",\r\n        FRI: \"pia\",\r\n        SAT: \"sob\",\r\n        SUN: \"ndz\",\r\n      },\r\n      months: {\r\n        JAN: \"styczeń\",\r\n        FEB: \"luty\",\r\n        MAR: \"marzec\",\r\n        APR: \"kwiecień\",\r\n        MAY: \"maj\",\r\n        JUN: \"czerwiec\",\r\n        JUL: \"lipiec\",\r\n        AUG: \"sierpień\",\r\n        SEP: \"wrzesień\",\r\n        OCT: \"październik\",\r\n        NOV: \"listopad\",\r\n        DEC: \"grudzień\",\r\n      },\r\n      HOUR: \"godzina\",\r\n      error: {\r\n        TIME_BEFORE: \"wydarzenie może się rozpocząć najwcześniej o \",\r\n      },\r\n      button: {\r\n        SAVE: \"wybierz\",\r\n        EDIT: \"zmień\",\r\n        CANCEL: \"anuluj\",\r\n      },\r\n    },\r\n  },\r\n  emojis: {\r\n    categories: {\r\n      EMOTIONS: \"emocje\",\r\n      BODY: \"gesty\",\r\n      ANIMALS: \"przyroda\",\r\n      FOOD: \"jedzenie\",\r\n      TRAVEL: \"podróże\",\r\n      ACTIVITIES: \"aktywność\",\r\n      OBJECTS: \"obiekty\",\r\n      SYMBOLS: \"symbole\",\r\n      FLAGS: \"flagi\",\r\n    },\r\n    categories_eng: {\r\n      EMOTIONS: \"smileys-emotion\",\r\n      BODY: \"people-body\",\r\n      ANIMALS: \"animals-nature\",\r\n      FOOD: \"food-drink\",\r\n      TRAVEL: \"travel-places\",\r\n      ACTIVITIES: \"activities\",\r\n      OBJECTS: \"objects\",\r\n      SYMBOLS: \"symbols\",\r\n      FLAGS: \"flags\",\r\n    },\r\n  },\r\n  mails: {\r\n    BUTTON_NEW_MESSAGE: \"nowa wiadomość\",\r\n    TO_PLACEHOLDER: \"do kogo ?\",\r\n    CONTENT_PLACEHOLDER: \"treść wiadomości\",\r\n    BUTTON_SEND: \"wyślij\",\r\n    BUTTON_SEND_LOADING: \"wysyłam ...\",\r\n    CLEAN_MESSAGE_INFO:\r\n      \"* Wiadomości będą usuwane automatycznie po około 3-ch dniach\",\r\n    error: {\r\n      CONNECTION_ERROR: \"problem z połączeniem sieciowym\",\r\n    },\r\n  },\r\n  error: {\r\n    FETCH_ERROR: \"problem z połączeniem sieciowym\",\r\n  },\r\n});\r\n","export const logoutQuery = (userId, email) => {\r\n  return {\r\n    query: `\r\n            mutation($userId: ID!, $email: String!) {\r\n                logout(userId: $userId, email: $email)\r\n            }\r\n            `,\r\n    variables: { userId, email },\r\n  };\r\n};\r\n","export const capitalize = (text) => {\r\n  return text\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n\r\nexport const capitalizeFirst = (text) => {\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n};\r\n\r\nexport const createDate = (date) => {\r\n  return new Date(date).toUTCString();\r\n};\r\n","import { logoutCases } from \"../../config/cases/Cases\";\r\nimport { logoutQuery } from \"../query/logoutQuery\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nexport const logoutUser = (userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: logoutCases.LOADING, payload: true });\r\n    const bodyRequest = logoutQuery(userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data.logout) {\r\n        dispatch({ type: logoutCases.SIGNOUT, payload: data.logout });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: logoutCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearLogoutState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: logoutCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const loginQuery = (email, password) => {\r\n  return {\r\n    query: `\r\n          mutation($email: String!, $password: String!) {\r\n              login(email: $email, password: $password) {\r\n                  _id\r\n                  name\r\n                  photo\r\n                  email\r\n                  isGoogleUser\r\n              }\r\n          }\r\n          `,\r\n    variables: { email, password },\r\n  };\r\n};\r\n","export const googleLoginQuery = (email) => {\r\n  return {\r\n    query: `\r\n            mutation($email: String!) {\r\n                loginGoogleUser(email: $email) {\r\n                    _id\r\n                    name\r\n                    photo\r\n                    email\r\n                    isGoogleUser\r\n                }\r\n            }\r\n            `,\r\n    variables: { email },\r\n  };\r\n};\r\n","export const updateUserProfileQuery = (name, profileImage, userId, email) => {\r\n  return {\r\n    query: `\r\n            mutation($name: String!, $profileImage: ProfileImage, $userId: ID!, $email: String!) {\r\n                updateUserProfile(name: $name, profileImage: $profileImage, userId: $userId, email: $email) {\r\n                    _id\r\n                    name\r\n                    photo\r\n                    email\r\n                    isGoogleUser\r\n                }\r\n            }\r\n            `,\r\n    variables: { name, profileImage, userId, email },\r\n  };\r\n};\r\n","export const retrieveMyRecipesQuery = (userId, email) => {\r\n  return {\r\n    query: `\r\n                query($userId: ID!, $email: String!) {\r\n                  retrieveMyRecipes(userId: $userId, email: $email) {\r\n                      _id\r\n                      title\r\n                      picture\r\n                      video\r\n                      date\r\n                      category\r\n                      cookTime\r\n                      ingredients\r\n                      description\r\n                      author {\r\n                          name\r\n                          photo\r\n                          email\r\n                      }\r\n                      comments {\r\n                        _id\r\n                        commentator {\r\n                          _id\r\n                          name\r\n                          email\r\n                          photo\r\n                        }\r\n                        comment {\r\n                          _id\r\n                          content\r\n                          date\r\n                        }\r\n                        rate {\r\n                          _id\r\n                          value\r\n                        }\r\n                      }\r\n                  }\r\n                }\r\n                `,\r\n    variables: { userId, email },\r\n  };\r\n};\r\n","export const addRateAndCommentQuery = (\r\n  recipeId,\r\n  rateValue,\r\n  commentContent,\r\n  userId,\r\n  email,\r\n  date\r\n) => {\r\n  return {\r\n    query: `\r\n                mutation($recipeId: ID!, $rateValue: Int!, $commentContent: String!, $userId: ID!, $email: String!, $date: Date!) {\r\n                  addRecipeRateComment(recipeId: $recipeId, rateValue: $rateValue, commentContent: $commentContent, userId: $userId, email: $email, date: $date) {\r\n                      _id\r\n                      title\r\n                      picture\r\n                      video\r\n                      date\r\n                      category\r\n                      cookTime\r\n                      ingredients\r\n                      description\r\n                      author {\r\n                        _id\r\n                          name\r\n                          photo\r\n                          email\r\n                          followers {\r\n                            email\r\n                          }\r\n                      }\r\n                      comments {\r\n                        _id\r\n                        commentator {\r\n                          _id\r\n                          name\r\n                          email\r\n                          photo\r\n                        }\r\n                        comment {\r\n                          _id\r\n                          content\r\n                          date\r\n                        }\r\n                        rate {\r\n                          _id\r\n                          value\r\n                        }\r\n                      }\r\n                  }\r\n                }\r\n                `,\r\n    variables: { recipeId, rateValue, commentContent, userId, email, date },\r\n  };\r\n};\r\n","export const editRateAndCommentQuery = (\r\n  recipeId,\r\n  rateId,\r\n  rateValue,\r\n  commentId,\r\n  commentContent,\r\n  userId,\r\n  email\r\n) => {\r\n  return {\r\n    query: `\r\n                  mutation($recipeId: ID!, $rateId: ID!, $rateValue: Int!, $commentId: ID!, $commentContent: String!, $userId: ID!, $email: String!) {\r\n                    editRecipeRateComment(recipeId: $recipeId, rateId: $rateId, rateValue: $rateValue, commentId: $commentId, commentContent: $commentContent, userId: $userId, email: $email) {\r\n                        _id\r\n                        title\r\n                        picture\r\n                        video\r\n                        date\r\n                        category\r\n                        cookTime\r\n                        ingredients\r\n                        description\r\n                        author {\r\n                          _id\r\n                            name\r\n                            photo\r\n                            email\r\n                            followers {\r\n                              email\r\n                            }\r\n                        }\r\n                        comments {\r\n                          _id\r\n                          commentator {\r\n                            _id\r\n                            name\r\n                            email\r\n                            photo\r\n                          }\r\n                          comment {\r\n                            _id\r\n                            content\r\n                            date\r\n                          }\r\n                          rate {\r\n                            _id\r\n                            value\r\n                          }\r\n                        }\r\n                    }\r\n                  }\r\n                  `,\r\n    variables: {\r\n      recipeId,\r\n      rateId,\r\n      rateValue,\r\n      commentId,\r\n      commentContent,\r\n      userId,\r\n      email,\r\n    },\r\n  };\r\n};\r\n","export const removeRateAndCommentQuery = (\r\n  rateId,\r\n  commentId,\r\n  recipeId,\r\n  commentItemId,\r\n  userId,\r\n  email\r\n) => {\r\n  return {\r\n    query: `\r\n                    mutation($rateId: ID!, $commentId: ID!, $recipeId: ID!, $commentItemId: ID!, $userId: ID!, $email: String!) {\r\n                      removeRecipeRateComment(rateId: $rateId, commentId: $commentId, recipeId: $recipeId, commentItemId: $commentItemId, userId: $userId, email: $email) {\r\n                          _id\r\n                          title\r\n                          picture\r\n                          video\r\n                          date\r\n                          category\r\n                          cookTime\r\n                          ingredients\r\n                          description\r\n                          author {\r\n                            _id\r\n                              name\r\n                              photo\r\n                              email\r\n                              followers {\r\n                                email\r\n                              }\r\n                          }\r\n                          comments {\r\n                            _id\r\n                            commentator {\r\n                              _id\r\n                              name\r\n                              email\r\n                              photo\r\n                            }\r\n                            comment {\r\n                              _id\r\n                              content\r\n                              date\r\n                            }\r\n                            rate {\r\n                              _id\r\n                              value\r\n                            }\r\n                          }\r\n                      }\r\n                    }\r\n                    `,\r\n    variables: {\r\n      rateId,\r\n      commentId,\r\n      recipeId,\r\n      commentItemId,\r\n      userId,\r\n      email,\r\n    },\r\n  };\r\n};\r\n","export const followAuthorQuery = (authorId, recipeId, userId, email) => {\r\n  return {\r\n    query: `\r\n                      mutation($authorId: ID!, $recipeId: ID!, $userId: ID!, $email: String!) {\r\n                        followAuthorRecipe(authorId: $authorId, recipeId: $recipeId, userId: $userId, email: $email) {\r\n                            _id\r\n                            title\r\n                            picture\r\n                            video\r\n                            date\r\n                            category\r\n                            cookTime\r\n                            ingredients\r\n                            description\r\n                            author {\r\n                                _id\r\n                                name\r\n                                photo\r\n                                email\r\n                                followers {\r\n                                    email\r\n                                }\r\n                            }\r\n                            comments {\r\n                              _id\r\n                              commentator {\r\n                                _id\r\n                                name\r\n                                email\r\n                                photo\r\n                              }\r\n                              comment {\r\n                                _id\r\n                                content\r\n                                date\r\n                              }\r\n                              rate {\r\n                                _id\r\n                                value\r\n                              }\r\n                            }\r\n                        }\r\n                      }\r\n                      `,\r\n    variables: { authorId, recipeId, userId, email },\r\n  };\r\n};\r\n","export const unfollowAuthorQuery = (authorId, recipeId, userId, email) => {\r\n  return {\r\n    query: `\r\n                        mutation($authorId: ID!, $recipeId: ID!, $userId: ID!, $email: String!) {\r\n                          unfollowAuthorRecipe(authorId: $authorId, recipeId: $recipeId, userId: $userId, email: $email) {\r\n                              _id\r\n                              title\r\n                              picture\r\n                              video\r\n                              date\r\n                              category\r\n                              cookTime\r\n                              ingredients\r\n                              description\r\n                              author {\r\n                                  _id\r\n                                  name\r\n                                  photo\r\n                                  email\r\n                                  followers {\r\n                                      email\r\n                                  }\r\n                              }\r\n                              comments {\r\n                                _id\r\n                                commentator {\r\n                                  _id\r\n                                  name\r\n                                  email\r\n                                  photo\r\n                                }\r\n                                comment {\r\n                                  _id\r\n                                  content\r\n                                  date\r\n                                }\r\n                                rate {\r\n                                  _id\r\n                                  value\r\n                                }\r\n                              }\r\n                          }\r\n                        }\r\n                        `,\r\n    variables: { authorId, recipeId, userId, email },\r\n  };\r\n};\r\n","export const sortCommentsByDate = (data) => {\r\n  return data.comments.sort((a, b) =>\r\n    a.comment.date > b.comment.date ? -1 : 1\r\n  );\r\n};\r\n","import {\r\n  showRecipeDetailsCases,\r\n  changeRateCommentCases,\r\n} from \"../../../config/cases/Cases\";\r\nimport { addRateAndCommentQuery } from \"../query/addRateAndCommentQuery\";\r\nimport { editRateAndCommentQuery } from \"../query/editRateAndCommentQuery\";\r\nimport { removeRateAndCommentQuery } from \"../query/removeRateAndCommentQuery\";\r\nimport { followAuthorQuery } from \"../query/followAuthorQuery\";\r\nimport { unfollowAuthorQuery } from \"../query/unfollowAuthorQuery\";\r\nimport { sortCommentsByDate } from \"../../../../shared/sortCommentsByDate\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const showRecipeDetailsComponent = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.SHOWN, payload: bool });\r\n  };\r\n};\r\n\r\nexport const retrieveRecipeDetails = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: showRecipeDetailsCases.DETAILS_RETRIVED,\r\n      payload: { ...data, comments: sortCommentsByDate(data) },\r\n    });\r\n    dispatch({ type: showRecipeDetailsCases.SHOWN, payload: true });\r\n  };\r\n};\r\n\r\nexport const recipeDetailsClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.CLEAR_STATE });\r\n  };\r\n};\r\n\r\nexport const addRateAndComment = (recipeId, rate, comment, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.LOADING, payload: true });\r\n    const bodyRequest = addRateAndCommentQuery(\r\n      recipeId,\r\n      rate,\r\n      comment,\r\n      userId,\r\n      email,\r\n      new Date()\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: showRecipeDetailsCases.DETAILS_RETRIVED,\r\n          payload: {\r\n            ...data.addRecipeRateComment,\r\n            comments: sortCommentsByDate(data.addRecipeRateComment),\r\n          },\r\n        });\r\n        dispatch({\r\n          type: changeRateCommentCases.RATE_COMMENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showRecipeDetailsCases.SHOWN, payload: false });\r\n        dispatch({\r\n          type: showRecipeDetailsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const editRecipeRateAndComment = (\r\n  recipeId,\r\n  rateId,\r\n  rateValue,\r\n  commentId,\r\n  commentContent,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.LOADING, payload: true });\r\n    const bodyRequest = editRateAndCommentQuery(\r\n      recipeId,\r\n      rateId,\r\n      rateValue,\r\n      commentId,\r\n      commentContent,\r\n      userId,\r\n      email\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: showRecipeDetailsCases.DETAILS_RETRIVED,\r\n          payload: {\r\n            ...data.editRecipeRateComment,\r\n            comments: sortCommentsByDate(data.editRecipeRateComment),\r\n          },\r\n        });\r\n        dispatch({\r\n          type: changeRateCommentCases.RATE_COMMENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showRecipeDetailsCases.SHOWN, payload: false });\r\n        dispatch({\r\n          type: showRecipeDetailsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeRecipeRateAndComment = (\r\n  rateId,\r\n  commentId,\r\n  recipeId,\r\n  commentItemId,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.LOADING, payload: true });\r\n    const bodyRequest = removeRateAndCommentQuery(\r\n      rateId,\r\n      commentId,\r\n      recipeId,\r\n      commentItemId,\r\n      userId,\r\n      email\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: showRecipeDetailsCases.DETAILS_RETRIVED,\r\n          payload: {\r\n            ...data.removeRecipeRateComment,\r\n            comments: sortCommentsByDate(data.removeRecipeRateComment),\r\n          },\r\n        });\r\n        dispatch({\r\n          type: changeRateCommentCases.RATE_COMMENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showRecipeDetailsCases.SHOWN, payload: false });\r\n        dispatch({\r\n          type: showRecipeDetailsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const followAuthor = (authorId, recipeId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.LOADING, payload: true });\r\n    const bodyRequest = followAuthorQuery(authorId, recipeId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: showRecipeDetailsCases.DETAILS_RETRIVED,\r\n          payload: {\r\n            ...data.followAuthorRecipe,\r\n            comments: sortCommentsByDate(data.followAuthorRecipe),\r\n          },\r\n        });\r\n        dispatch({\r\n          type: changeRateCommentCases.RATE_COMMENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showRecipeDetailsCases.SHOWN, payload: false });\r\n        dispatch({\r\n          type: showRecipeDetailsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const unfollowAuthor = (authorId, recipeId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.LOADING, payload: true });\r\n    const bodyRequest = unfollowAuthorQuery(authorId, recipeId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: showRecipeDetailsCases.DETAILS_RETRIVED,\r\n          payload: {\r\n            ...data.unfollowAuthorRecipe,\r\n            comments: sortCommentsByDate(data.unfollowAuthorRecipe),\r\n          },\r\n        });\r\n        dispatch({\r\n          type: changeRateCommentCases.RATE_COMMENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showRecipeDetailsCases.SHOWN, payload: false });\r\n        dispatch({\r\n          type: showRecipeDetailsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const recipeDetailsClearErrorState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showRecipeDetailsCases.CLEAR_ERROR_STATE });\r\n  };\r\n};\r\n","export const retrieveRecipeQuery = (category, userId, email, skip, limit) => {\r\n  return {\r\n    query: `\r\n              query($category: String!, $userId: ID!, $email: String!, $skip: Int!, $limit: Int!) {\r\n                retrieveRecipes(category: $category, userId: $userId, email: $email, skip: $skip, limit: $limit) {\r\n                    _id\r\n                    title\r\n                    picture\r\n                    video\r\n                    date\r\n                    category\r\n                    cookTime\r\n                    ingredients\r\n                    description\r\n                    author {\r\n                      _id\r\n                        name\r\n                        photo\r\n                        email\r\n                        followers {\r\n                          email\r\n                        }\r\n                    }\r\n                    comments {\r\n                      _id\r\n                      commentator {\r\n                        _id\r\n                        name\r\n                        email\r\n                        photo\r\n                      }\r\n                      comment {\r\n                        _id\r\n                        content\r\n                        date\r\n                      }\r\n                      rate {\r\n                        _id\r\n                        value\r\n                      }\r\n                    }\r\n                }\r\n              }\r\n              `,\r\n    variables: { category, userId, email, skip, limit },\r\n  };\r\n};\r\n","export const searchRecipeQuery = (recipeTitle, userId, email) => {\r\n  return {\r\n    query: `\r\n                query($recipeTitle: String!, $userId: ID!, $email: String!) {\r\n                  searchRecipe(recipeTitle: $recipeTitle, userId: $userId, email: $email) {\r\n                      _id\r\n                      title\r\n                      picture\r\n                      video\r\n                      date\r\n                      category\r\n                      cookTime\r\n                      ingredients\r\n                      description\r\n                      author {\r\n                        _id\r\n                          name\r\n                          photo\r\n                          email\r\n                          followers {\r\n                            email\r\n                          }\r\n                      }\r\n                      comments {\r\n                        _id\r\n                        commentator {\r\n                          _id\r\n                          name\r\n                          email\r\n                          photo\r\n                        }\r\n                        comment {\r\n                          _id\r\n                          content\r\n                          date\r\n                        }\r\n                        rate {\r\n                          _id\r\n                          value\r\n                        }\r\n                      }\r\n                  }\r\n                }\r\n                `,\r\n    variables: { recipeTitle, userId, email },\r\n  };\r\n};\r\n","import { retrieveRecipesCases } from \"../../../config/cases/Cases\";\r\nimport { retrieveRecipeQuery } from \"../query/retrieveRecipeQuery\";\r\nimport { searchRecipeQuery } from \"../query/searchRecipeQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const getRecipe = (category, userId, email, skip, limit) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: retrieveRecipesCases.LOADING, payload: true });\r\n    const bodyRequest = retrieveRecipeQuery(\r\n      category,\r\n      userId,\r\n      email,\r\n      skip,\r\n      limit\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: retrieveRecipesCases.RECIPE_RETRIVED,\r\n          payload: data.retrieveRecipes,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: retrieveRecipesCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: retrieveRecipesCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const searchRecipe = (recipeTitle, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: retrieveRecipesCases.LOADING, payload: true });\r\n    const bodyRequest = searchRecipeQuery(recipeTitle, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: retrieveRecipesCases.RECIPE_RETRIVED,\r\n          payload: data.searchRecipe,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: retrieveRecipesCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: retrieveRecipesCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const recipeBookClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: retrieveRecipesCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { changeRecipeListItemCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const changeRecipeListItem = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: changeRecipeListItemCases.RECIPE_LIST_ITEM_CHANGED,\r\n      payload: bool,\r\n    });\r\n  };\r\n};\r\n","import { toEditRecipeRateCommentCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const toEditRateComment = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: toEditRecipeRateCommentCases.RATE_COMMENT_RETRIEVED,\r\n      payload: data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const toEditRateCommentClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: toEditRecipeRateCommentCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import {\r\n  toEditMyRecipeCases,\r\n  showNewRecipeFormCases,\r\n  myRecipePreviewCases,\r\n} from \"../../../config/cases/Cases\";\r\n\r\nexport const toEditMyRecipe = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: toEditMyRecipeCases.MY_RECIPE_TO_EDIT, payload: data });\r\n    dispatch({ type: myRecipePreviewCases.PREVIEW_SHOWN, payload: false });\r\n    dispatch({ type: showNewRecipeFormCases.FORM_SHOWN, payload: true });\r\n  };\r\n};\r\n\r\nexport const toEditMyRecipeClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: toEditMyRecipeCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import {\r\n  myRecipePreviewCases,\r\n  showNewRecipeFormCases,\r\n} from \"../../../config/cases/Cases\";\r\n\r\nexport const showMyRecipePreview = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: myRecipePreviewCases.PREVIEW_SHOWN, payload: bool });\r\n  };\r\n};\r\n\r\nexport const myRecipeData = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: myRecipePreviewCases.PREVIEW_DATA_RECEIVED,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: showNewRecipeFormCases.FORM_SHOWN, payload: false });\r\n    dispatch({ type: myRecipePreviewCases.PREVIEW_SHOWN, payload: true });\r\n  };\r\n};\r\n\r\nexport const myRecipePreviewClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: myRecipePreviewCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { getAddressCases } from \"../../../config/cases/Cases\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\n\r\nexport const getAddress = (addressValue) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: getAddressCases.LOADING, payload: true });\r\n    try {\r\n      const response = await fetch(strings.path.GET_ADDRESSES, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          addressValue: addressValue,\r\n        }),\r\n      });\r\n      const responseData = await response.json();\r\n      if (responseData) {\r\n        dispatch({\r\n          type: getAddressCases.ADDRESSES_RETRIEVED,\r\n          payload: responseData.suggestions,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: getAddressCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAddressClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: getAddressCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import {\r\n  selectEventAddressCases,\r\n  chooseEventAddressCases,\r\n} from \"../../../config/cases/Cases\";\r\n\r\nexport const selectEventAddress = (addressObj) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: selectEventAddressCases.ADDRESS_SELECTED,\r\n      payload: addressObj,\r\n    });\r\n    dispatch({ type: chooseEventAddressCases.ADDRESS_CHOSEN, payload: true });\r\n  };\r\n};\r\n\r\nexport const selectEventAddressClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: selectEventAddressCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { getLocationDetailsCases } from \"../../../config/cases/Cases\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\n\r\nexport const getLocationDetails = (locationId) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: getLocationDetailsCases.LOADING, payload: true });\r\n    try {\r\n      const response = await fetch(strings.path.GET_LOCATION, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          locationId: locationId,\r\n        }),\r\n      });\r\n      const responseData = await response.json();\r\n      if (responseData) {\r\n        dispatch({\r\n          type: getLocationDetailsCases.LOCATION_DETAILS_RETRIEVED,\r\n          payload: {\r\n            displayPosition: {\r\n              latitude:\r\n                responseData.response.view[0].result[0].location.displayPosition\r\n                  .latitude,\r\n              longitude:\r\n                responseData.response.view[0].result[0].location.displayPosition\r\n                  .longitude,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: getLocationDetailsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getLocationDetailsClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: getLocationDetailsCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const retrieveEventsQuery = (\r\n  category,\r\n  userId,\r\n  email,\r\n  skip,\r\n  limit,\r\n  date\r\n) => {\r\n  return {\r\n    query: `\r\n                  query($category: String!, $userId: ID!, $email: String!, $skip: Int, $limit: Int, $date: Date!) {\r\n                    retrieveEvents(category: $category, userId: $userId, email: $email, skip: $skip, limit: $limit, date: $date) {\r\n                        _id\r\n                        title\r\n                        eventImage\r\n                        eventAddress {\r\n                            _id\r\n                            label\r\n                            streetNumber\r\n                            streetName\r\n                            postCode\r\n                            city\r\n                            country\r\n                            latitude\r\n                            longitude\r\n                            zoom\r\n                        }\r\n                        description\r\n                        availablePlaces\r\n                        author {\r\n                            _id\r\n                            name\r\n                            photo\r\n                            email\r\n                            followers {\r\n                              email\r\n                            }\r\n                        }\r\n                        participants {\r\n                            _id\r\n                            name\r\n                            photo\r\n                            email\r\n                        }\r\n                        eventDate\r\n                        tel\r\n                        creationDate\r\n                    }\r\n                  }\r\n                  `,\r\n    variables: { category, userId, email, skip, limit, date },\r\n  };\r\n};\r\n","export const searchEventsQuery = (date, city, userId, email) => {\r\n  return {\r\n    query: `\r\n                    query($date: Date, $city: String, $userId: ID!, $email: String!) {\r\n                      searchEvents(date: $date, city: $city, userId: $userId, email: $email) {\r\n                          _id\r\n                          title\r\n                          eventImage\r\n                          eventAddress {\r\n                              _id\r\n                              label\r\n                              streetNumber\r\n                              streetName\r\n                              postCode\r\n                              city\r\n                              country\r\n                              latitude\r\n                              longitude\r\n                              zoom\r\n                          }\r\n                          description\r\n                          availablePlaces\r\n                          author {\r\n                              _id\r\n                              name\r\n                              photo\r\n                              email\r\n                              followers {\r\n                                email\r\n                              }\r\n                          }\r\n                          participants {\r\n                              _id\r\n                              name\r\n                              photo\r\n                              email\r\n                          }\r\n                          eventDate\r\n                          tel\r\n                          creationDate\r\n                      }\r\n                    }\r\n                    `,\r\n    variables: { date, city, userId, email },\r\n  };\r\n};\r\n","import { retrieveEventsCases } from \"../../../config/cases/Cases\";\r\nimport { retrieveEventsQuery } from \"../query/retrieveEventsQuery\";\r\nimport { searchEventsQuery } from \"../query/searchEventsQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const getEvents = (category, userId, email, skip, limit) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: retrieveEventsCases.LOADING, payload: true });\r\n    const bodyRequest = retrieveEventsQuery(\r\n      category,\r\n      userId,\r\n      email,\r\n      skip,\r\n      limit,\r\n      new Date()\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: retrieveEventsCases.EVENTS_RETRIEVED,\r\n          payload: data.retrieveEvents,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: retrieveEventsCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: retrieveEventsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const searchEvents = (date, city, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: retrieveEventsCases.LOADING, payload: true });\r\n    const bodyRequest = searchEventsQuery(date, city, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: retrieveEventsCases.EVENTS_RETRIEVED,\r\n          payload: data.searchEvents,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: retrieveEventsCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: retrieveEventsCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getEventsClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: retrieveEventsCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const joinEventQuery = (eventId, userId, email) => {\r\n  return {\r\n    query: `\r\n                    mutation($eventId: ID!, $userId: ID!, $email: String!) {\r\n                      joinEvent(eventId: $eventId, userId: $userId, email: $email) {\r\n                          _id\r\n                          title\r\n                          eventImage\r\n                          eventAddress {\r\n                              _id\r\n                              label\r\n                              streetNumber\r\n                              streetName\r\n                              postCode\r\n                              city\r\n                              country\r\n                              latitude\r\n                              longitude\r\n                              zoom\r\n                          }\r\n                          description\r\n                          availablePlaces\r\n                          author {\r\n                              _id\r\n                              name\r\n                              photo\r\n                              email\r\n                              followers {\r\n                                email\r\n                              }\r\n                          }\r\n                          participants {\r\n                              _id\r\n                              name\r\n                              photo\r\n                              email\r\n                          }\r\n                          eventDate\r\n                          tel\r\n                          creationDate\r\n                      }\r\n                    }\r\n                    `,\r\n    variables: { eventId, userId, email },\r\n  };\r\n};\r\n","export const unjoinEventQuery = (eventId, userId, email) => {\r\n  return {\r\n    query: `\r\n                      mutation($eventId: ID!, $userId: ID!, $email: String!) {\r\n                        unjoinEvent(eventId: $eventId, userId: $userId, email: $email) {\r\n                            _id\r\n                            title\r\n                            eventImage\r\n                            eventAddress {\r\n                                _id\r\n                                label\r\n                                streetNumber\r\n                                streetName\r\n                                postCode\r\n                                city\r\n                                country\r\n                                latitude\r\n                                longitude\r\n                                zoom\r\n                            }\r\n                            description\r\n                            availablePlaces\r\n                            author {\r\n                                _id\r\n                                name\r\n                                photo\r\n                                email\r\n                                followers {\r\n                                  email\r\n                                }\r\n                            }\r\n                            participants {\r\n                                _id\r\n                                name\r\n                                photo\r\n                                email\r\n                            }\r\n                            eventDate\r\n                            tel\r\n                            creationDate\r\n                        }\r\n                      }\r\n                      `,\r\n    variables: { eventId, userId, email },\r\n  };\r\n};\r\n","export const followAuthorQuery = (authorId, eventId, userId, email) => {\r\n  return {\r\n    query: `\r\n                      mutation($authorId: ID!, $eventId: ID!, $userId: ID!, $email: String!) {\r\n                        followAuthorEvent(authorId: $authorId, eventId: $eventId, userId: $userId, email: $email) {\r\n                            _id\r\n                            title\r\n                            eventImage\r\n                            eventAddress {\r\n                                _id\r\n                                label\r\n                                streetNumber\r\n                                streetName\r\n                                postCode\r\n                                city\r\n                                country\r\n                                latitude\r\n                                longitude\r\n                                zoom\r\n                            }\r\n                            description\r\n                            availablePlaces\r\n                            author {\r\n                                _id\r\n                                name\r\n                                photo\r\n                                email\r\n                                followers {\r\n                                  email\r\n                                }\r\n                            }\r\n                            participants {\r\n                                _id\r\n                                name\r\n                                photo\r\n                                email\r\n                            }\r\n                            eventDate\r\n                            tel\r\n                            creationDate\r\n                        }\r\n                      }\r\n                      `,\r\n    variables: { authorId, eventId, userId, email },\r\n  };\r\n};\r\n","export const unfollowAuthorQuery = (authorId, eventId, userId, email) => {\r\n  return {\r\n    query: `\r\n                        mutation($authorId: ID!, $eventId: ID!, $userId: ID!, $email: String!) {\r\n                          unfollowAuthorEvent(authorId: $authorId, eventId: $eventId, userId: $userId, email: $email) {\r\n                              _id\r\n                              title\r\n                              eventImage\r\n                              eventAddress {\r\n                                  _id\r\n                                  label\r\n                                  streetNumber\r\n                                  streetName\r\n                                  postCode\r\n                                  city\r\n                                  country\r\n                                  latitude\r\n                                  longitude\r\n                                  zoom\r\n                              }\r\n                              description\r\n                              availablePlaces\r\n                              author {\r\n                                  _id\r\n                                  name\r\n                                  photo\r\n                                  email\r\n                                  followers {\r\n                                    email\r\n                                  }\r\n                              }\r\n                              participants {\r\n                                  _id\r\n                                  name\r\n                                  photo\r\n                                  email\r\n                              }\r\n                              eventDate\r\n                              tel\r\n                              creationDate\r\n                          }\r\n                        }\r\n                        `,\r\n    variables: { authorId, eventId, userId, email },\r\n  };\r\n};\r\n","import {\r\n  myEventPreviewCases,\r\n  showNewEventFormCases,\r\n  changeEventCases,\r\n} from \"../../../config/cases/Cases\";\r\nimport { joinEventQuery } from \"../query/joinEventQuery\";\r\nimport { unjoinEventQuery } from \"../query/unjoinEventQuery\";\r\nimport { followAuthorQuery } from \"../query/followAuthorQuery\";\r\nimport { unfollowAuthorQuery } from \"../query/unfollowAuthorQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const showEventPreview = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: bool });\r\n  };\r\n};\r\n\r\nexport const eventData = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: myEventPreviewCases.PREVIEW_DATA_RECEIVED,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: showNewEventFormCases.FORM_SHOWN, payload: false });\r\n    dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: true });\r\n  };\r\n};\r\n\r\nexport const joinEvent = (eventId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.LOADING, payload: true });\r\n    const bodyRequest = joinEventQuery(eventId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: myEventPreviewCases.PREVIEW_DATA_RECEIVED,\r\n          payload: data.joinEvent,\r\n        });\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: false });\r\n        dispatch({\r\n          type: myEventPreviewCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const unjoinEvent = (eventId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.LOADING, payload: true });\r\n    const bodyRequest = unjoinEventQuery(eventId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: myEventPreviewCases.PREVIEW_DATA_RECEIVED,\r\n          payload: data.unjoinEvent,\r\n        });\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: false });\r\n        dispatch({\r\n          type: myEventPreviewCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const followAuthor = (authorId, eventId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.LOADING, payload: true });\r\n    const bodyRequest = followAuthorQuery(authorId, eventId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: myEventPreviewCases.PREVIEW_DATA_RECEIVED,\r\n          payload: data.followAuthorEvent,\r\n        });\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: false });\r\n        dispatch({\r\n          type: myEventPreviewCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const unfollowAuthor = (authorId, eventId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.LOADING, payload: true });\r\n    const bodyRequest = unfollowAuthorQuery(authorId, eventId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: myEventPreviewCases.PREVIEW_DATA_RECEIVED,\r\n          payload: data.unfollowAuthorEvent,\r\n        });\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: false });\r\n        dispatch({\r\n          type: myEventPreviewCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const eventPreviewClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.CLEAR_STATE });\r\n  };\r\n};\r\n\r\nexport const eventPreviewClearErrorState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: myEventPreviewCases.CLEAR_ERROR_STATE });\r\n  };\r\n};\r\n","import {\r\n  toEditEventCases,\r\n  showNewEventFormCases,\r\n  myEventPreviewCases,\r\n} from \"../../../config/cases/Cases\";\r\n\r\nexport const toEditEvent = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: toEditEventCases.EVENT_TO_EDIT, payload: data });\r\n    dispatch({ type: myEventPreviewCases.PREVIEW_SHOWN, payload: false });\r\n    dispatch({ type: showNewEventFormCases.FORM_SHOWN, payload: true });\r\n  };\r\n};\r\n\r\nexport const toEditEventClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: toEditEventCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { setConversationCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const setConversation = (conversation) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: setConversationCases.CONVERSATION_RETRIEVED,\r\n      payload: conversation,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setConversationClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: setConversationCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { setMessagesCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const setMessages = (messages) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: setMessagesCases.MESSAGES_RETRIEVED,\r\n      payload: messages,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setMessagesClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: setMessagesCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { setMessageIdCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const setMessageId = (id) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: setMessageIdCases.ID_RETRIEVED, payload: id });\r\n  };\r\n};\r\n\r\nexport const setMessageIdClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: setMessageIdCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { getEmojisCases, showEmojisCases } from \"../../../config/cases/Cases\";\r\nimport { isEmojiSupported } from \"is-emoji-supported\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const getEmojis = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await fetch(strings.path.GET_EMOJIS, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const responseData = await response.json();\r\n      if (responseData.length > 0) {\r\n        dispatch({\r\n          type: getEmojisCases.EMOJIS_RETRIEVED,\r\n          payload: responseData.filter((emoji) =>\r\n            isEmojiSupported(emoji.character)\r\n          ),\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showEmojisCases.EMOJIS_SHOWN, payload: false });\r\n        dispatch({\r\n          type: getEmojisCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const getEmojiCategories = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await fetch(strings.path.GET_EMOJI_CAT, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const responseData = await response.json();\r\n      if (responseData) {\r\n        dispatch({\r\n          type: getEmojisCases.CATEGORIES_RETRIEVED,\r\n          payload: responseData,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        dispatch({ type: showEmojisCases.EMOJIS_SHOWN, payload: false });\r\n        dispatch({\r\n          type: getEmojisCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const getEmojisClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: getEmojisCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { searchEventFilledCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const searchEventFilled = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: searchEventFilledCases.FORM_FILLED, payload: bool });\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearLoginState } from \"../../../redux/login/loginUser/thunk/loginThunk\";\r\nimport { clearLogoutState } from \"../../../redux/logout/thunk/logoutThunk\";\r\nimport { myRecipesClearState } from \"../../../redux/myRecipes/retrieveMyRecipes/thunk/retrieveMyRecipesThunk\";\r\nimport { recipeDetailsClearState } from \"../../../redux/recipeBook/showRecipeDetails/thunk/showRecipeDetailsThunk\";\r\nimport { categorySelectedClearState } from \"../../../redux/recipeBook/recipeCategorySelected/thunk/recipeCategorySelectedThunk\";\r\nimport { recipeBookClearState } from \"../../../redux/recipeBook/retrieveRecipe/thunk/retrieveRecipesThunk\";\r\nimport { changeRecipeListItem } from \"../../../redux/recipeBook/changeRecipeListItem/thunk/changeRecipeListItemThunk\";\r\nimport { toEditRateCommentClearState } from \"../../../redux/recipeBook/toEditRecipeRateComment/thunk/toEditRateCommentThunk\";\r\nimport { toEditMyRecipeClearState } from \"../../../redux/myRecipes/toEditMyRecipe/thunk/toEditMyRecipeThunk\";\r\nimport { myRecipePreviewClearState } from \"../../../redux/myRecipes/myRecipePreview/thunk/myRecipePreviewThunk\";\r\nimport { getAddressClearState } from \"../../../redux/myEvents/getAddress/thunk/getAddressThunk\";\r\nimport { selectEventAddressClearState } from \"../../../redux/myEvents/selectEventAddress/thunk/selectEventAddressThunk\";\r\nimport { getLocationDetailsClearState } from \"../../../redux/myEvents/getLocationDetails/thunk/getLocationDetailsThunk\";\r\nimport { getEventsClearState } from \"../../../redux/myEvents/retrieveEvents/thunk/retrieveEventsThunk\";\r\nimport { eventPreviewClearState } from \"../../../redux/myEvents/eventPreview/thunk/eventPreviewThunk\";\r\nimport { toEditEventClearState } from \"../../../redux/myEvents/toEditEvent/thunk/toEditEventThunk\";\r\nimport { eventCategorySelectedClearState } from \"../../../redux/myEvents/eventCategorySelected/thunk/eventCategorySelectedThunk\";\r\nimport { ioConnectClearState } from \"../../../redux/mails/socketData/thunk/ioConnectThunk\";\r\nimport { setConversationClearState } from \"../../../redux/mails/setConversation/thunk/setConversationThunk\";\r\nimport { setMessagesClearState } from \"../../../redux/mails/setMessages/thunk/setMessagesThunk\";\r\nimport { setMessageIdClearState } from \"../../../redux/mails/setMessageId/thunk/setMessageIdThunk\";\r\nimport { getEmojisClearState } from \"../../../redux/emoji/getEmojis/thunk/getEmojisThunk\";\r\nimport { searchEventFilled } from \"../../../redux/myEvents/searchEventFilled/thunk/searchEventFilledThunk\";\r\nimport { loginUser } from \"../../../redux/login/userLogged/thunk/userLoggedThunk\";\r\nimport { countUnreadMessages } from \"./countUnreadMessages\";\r\n\r\nconst useNavMenu = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { loading, userLoggedOut } = useSelector((state) => state.logout);\r\n  const { socket } = useSelector((state) => state.socketData);\r\n  const { messages } = useSelector((state) => state.userMessages);\r\n  const unreadMessages = countUnreadMessages(messages, userData);\r\n\r\n  useEffect(() => {\r\n    setIsActive(true);\r\n    return () => setIsActive(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket.disconnected && isActive && userLoggedOut) {\r\n      dispatch(clearLoginState());\r\n      dispatch(loginUser(false));\r\n      dispatch(recipeDetailsClearState());\r\n      dispatch(myRecipePreviewClearState());\r\n      dispatch(categorySelectedClearState());\r\n      dispatch(myRecipesClearState());\r\n      dispatch(recipeBookClearState());\r\n      dispatch(toEditRateCommentClearState());\r\n      dispatch(toEditMyRecipeClearState());\r\n      dispatch(changeRecipeListItem(true));\r\n      dispatch(getAddressClearState());\r\n      dispatch(selectEventAddressClearState());\r\n      dispatch(getLocationDetailsClearState());\r\n      dispatch(getEventsClearState());\r\n      dispatch(eventPreviewClearState());\r\n      dispatch(toEditEventClearState());\r\n      dispatch(eventCategorySelectedClearState());\r\n      dispatch(searchEventFilled(false));\r\n      dispatch(ioConnectClearState());\r\n      dispatch(setConversationClearState());\r\n      dispatch(setMessagesClearState());\r\n      dispatch(setMessageIdClearState());\r\n      dispatch(getEmojisClearState());\r\n    }\r\n  }, [userLoggedOut, socket, isActive, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (userData.email === undefined && isActive) dispatch(clearLogoutState());\r\n  }, [userData.email, isActive, dispatch]);\r\n\r\n  return { loading, unreadMessages };\r\n};\r\n\r\nexport default useNavMenu;\r\n","export const countUnreadMessages = (messages, userData) => {\r\n  return messages.filter(\r\n    (message) =>\r\n      !message.isRead &&\r\n      ((userData._id === message.recipient._id &&\r\n        userData._id !==\r\n          message.conversations[message.conversations.length - 1].author._id) ||\r\n        (userData._id === message.sender._id &&\r\n          userData._id !==\r\n            message.conversations[message.conversations.length - 1].author._id))\r\n  ).length;\r\n};\r\n","import { userLoggedCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const loginUser = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: userLoggedCases.USER_LOGGED,\r\n      payload: bool,\r\n    });\r\n  };\r\n};\r\n","import {\r\n  loginCases,\r\n  updateMyProfileCases,\r\n  userLoggedCases,\r\n} from \"../../../config/cases/Cases\";\r\nimport { loginQuery } from \"../query/loginQuery\";\r\nimport { googleLoginQuery } from \"../query/googleLoginQuery\";\r\nimport { updateUserProfileQuery } from \"../query/updateUserProfileQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const loginUser = (email, password) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: loginCases.LOADING, payload: true });\r\n    const bodyRequest = loginQuery(email, password);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({ type: loginCases.USER_DATA, payload: data.login });\r\n        dispatch({ type: userLoggedCases.USER_LOGGED, payload: true });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: loginCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: loginCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginUserGoogle = (email, tokenId) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: loginCases.LOADING_GOOGLE, payload: true });\r\n    const bodyRequest = googleLoginQuery(email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"x-auth\": tokenId,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: loginCases.USER_DATA,\r\n          payload: data.loginGoogleUser,\r\n        });\r\n        dispatch({ type: userLoggedCases.USER_LOGGED, payload: true });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: loginCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: loginCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserProfile = (name, profileImage, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: loginCases.LOADING, payload: true });\r\n    const bodyRequest = updateUserProfileQuery(\r\n      name,\r\n      profileImage,\r\n      userId,\r\n      email\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: loginCases.USER_DATA,\r\n          payload: data.updateUserProfile,\r\n        });\r\n        dispatch({ type: updateMyProfileCases.PROFILE_UPDATED, payload: true });\r\n      } else if (errors) {\r\n        dispatch({ type: loginCases.ERROR, payload: errors[0].message });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: loginCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearLoginErrorState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: loginCases.CLEAR_ERROR_STATE });\r\n  };\r\n};\r\n\r\nexport const clearLoginState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: loginCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { recipeCategorySelectedCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const categorySelected = (buttonId) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: recipeCategorySelectedCases.BUTTON_ID_RETRIEVED,\r\n      payload: buttonId,\r\n    });\r\n  };\r\n};\r\n\r\nexport const categorySelectedClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: recipeCategorySelectedCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { retrieveMyRecipesCases } from \"../../../config/cases/Cases\";\r\nimport { retrieveMyRecipesQuery } from \"../query/retrieveMyRecipesQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const getMyRecipes = (userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: retrieveMyRecipesCases.LOADING, payload: true });\r\n    const bodyRequest = retrieveMyRecipesQuery(userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: retrieveMyRecipesCases.MY_RECIPES_RETRIEVED,\r\n          payload: data.retrieveMyRecipes,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: retrieveMyRecipesCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: retrieveMyRecipesCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const myRecipesClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: retrieveMyRecipesCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { eventCategorySelectedCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const eventCategorySelected = (buttonId) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: eventCategorySelectedCases.BUTTON_ID_RETRIEVED,\r\n      payload: buttonId,\r\n    });\r\n  };\r\n};\r\n\r\nexport const eventCategorySelectedClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: eventCategorySelectedCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { ioConnectCases } from \"../../../config/cases/Cases\";\r\nimport socketClient from \"socket.io-client\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\n\r\nexport const ioConnect = (userId, userEmail) => {\r\n  return (dispatch, getState) => {\r\n    const socket = socketClient(strings.path.SERVER_PATH, {\r\n      query: { userId: userId, userEmail: userEmail },\r\n    });\r\n    dispatch({ type: ioConnectCases.iO_CONNECTED, payload: socket });\r\n    socket.on(\"id\", (id) => {\r\n      socket.emit(\"userData\", {\r\n        userId: userId,\r\n        userSocketId: id,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const ioConnectClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: ioConnectCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const unacceptableWordsArray = [\r\n  \"xxx\",\r\n  \"porn\",\r\n  \"teen\",\r\n  \"milf\",\r\n  \"tits\",\r\n  \"pussy\",\r\n  \"cock\",\r\n  \"sex\",\r\n  \"penis\",\r\n  \"cum\",\r\n  \"sperme\",\r\n  \"redtube\",\r\n  \"xnxx\",\r\n  \"xhamster\",\r\n  \"fellation\",\r\n  \"baise\",\r\n  \"enculé\",\r\n  \"deepthroat\",\r\n  \"anal\",\r\n  \"sodomie\",\r\n  \"bite\",\r\n];\r\n\r\nexport const userGooglePhoto = [\"googleusercontent.com\"];\r\n","export const disconnectIOSocket = (socket, userId) => {\r\n  return new Promise((resolve) => {\r\n    socket.emit(\"disconnected\", {\r\n      userId: userId,\r\n    });\r\n    socket.on(\"userDisconnected\", (response) => {\r\n      if (response) {\r\n        socket.disconnect();\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/logout/thunk/logoutThunk\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport useNavMenu from \"../../hooks/screen/nav/useNavMenu\";\r\nimport { Nav, Spinner } from \"react-bootstrap\";\r\nimport Img from \"react-image\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Link } from \"react-scroll\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport { disconnectIOSocket } from \"./disconnectIOSocket\";\r\nimport \"./navbar.css\";\r\n\r\nconst MakeNavMenu = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { socket } = useSelector((state) => state.socketData);\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { loading, unreadMessages } = useNavMenu();\r\n\r\n  const navHomeItems = [\r\n    { name: strings.navbar.navHomeItems.LOGO, path: strings.path.HOME },\r\n    { name: strings.navbar.navHomeItems.MAIN },\r\n    { name: strings.navbar.navHomeItems.ABOUT },\r\n    { name: strings.navbar.navHomeItems.CONTACT },\r\n  ];\r\n\r\n  const navGetStartedItems = [\r\n    { name: strings.navbar.navGetStartedItems.LOGIN, path: strings.path.LOGIN },\r\n    {\r\n      name: strings.navbar.navGetStartedItems.SIGNUP,\r\n      path: strings.path.SIGNUP,\r\n    },\r\n  ];\r\n\r\n  const navUserLoggedItems = [\r\n    { name: strings.navbar.navHomeItems.LOGO, path: strings.path.RECIPE_BOOK },\r\n    {\r\n      name: strings.navbar.navUserLoggedItems.RECIPE_BOOK,\r\n      path: strings.path.RECIPE_BOOK,\r\n    },\r\n    {\r\n      name: strings.navbar.navUserLoggedItems.MY_RECIPES,\r\n      path: strings.path.MY_RECIPES,\r\n    },\r\n    { name: strings.navbar.navUserLoggedItems.MAILS, path: strings.path.MAILS },\r\n    {\r\n      name: strings.navbar.navUserLoggedItems.MY_EVENTS,\r\n      path: strings.path.MY_EVENTS,\r\n    },\r\n    {\r\n      name: strings.navbar.navUserLoggedItems.MY_PROFILE,\r\n      path: strings.path.MY_PROFILE,\r\n    },\r\n    {\r\n      name: strings.navbar.navUserLoggedItems.USER_PHOTO,\r\n      path: strings.path.USER_PHOTO,\r\n    },\r\n    {\r\n      name: strings.navbar.navUserLoggedItems.SIGNOUT,\r\n      path: strings.path.SIGNOUT,\r\n    },\r\n  ];\r\n\r\n  return type === strings.navbar.navType.LOGO\r\n    ? navHomeItems.map(\r\n        (item, index) =>\r\n          item.name === strings.navbar.navHomeItems.LOGO && (\r\n            <Nav.Item as=\"li\" className=\"logo\" key={index}>\r\n              <Link\r\n                activeClass=\"active\"\r\n                to={item.name}\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                {capitalize(item.name)}\r\n              </Link>\r\n            </Nav.Item>\r\n          )\r\n      )\r\n    : type === strings.navbar.navType.LOGO_GET_STARTED\r\n    ? navHomeItems.map(\r\n        (item, index) =>\r\n          item.name === strings.navbar.navHomeItems.LOGO && (\r\n            <Nav.Item as=\"li\" className=\"logo\" key={index}>\r\n              <NavLink activeClassName=\"active\" to={item.path} exact>\r\n                {capitalize(item.name)}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          )\r\n      )\r\n    : type === strings.navbar.navType.LOGO_USER_LOGGED\r\n    ? navUserLoggedItems.map(\r\n        (item, index) =>\r\n          item.name === strings.navbar.navHomeItems.LOGO && (\r\n            <Nav.Item as=\"li\" className=\"logo\" key={index}>\r\n              <NavLink activeClassName=\"active\" to={item.path} exact>\r\n                {capitalize(item.name)}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          )\r\n      )\r\n    : type === strings.navbar.navType.HOME_MENU\r\n    ? navHomeItems.slice(1).map((item, index) => (\r\n        <Nav.Item as=\"li\" key={index}>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to={item.name}\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={500}\r\n          >\r\n            {capitalize(item.name)}\r\n          </Link>\r\n        </Nav.Item>\r\n      ))\r\n    : type === strings.navbar.navType.GET_STARTED_MENU\r\n    ? navGetStartedItems.map((item, index) => (\r\n        <Nav.Item as=\"li\" key={index}>\r\n          <NavLink activeClassName=\"active\" to={item.path} exact>\r\n            {capitalize(item.name)}\r\n          </NavLink>\r\n        </Nav.Item>\r\n      ))\r\n    : type === strings.navbar.navType.USER_LOGGED_MENU\r\n    ? navUserLoggedItems.slice(1).map((item, index) =>\r\n        item.name === strings.navbar.navUserLoggedItems.SIGNOUT ? (\r\n          !loading ? (\r\n            <Nav.Item as=\"li\" key={index}>\r\n              <NavLink\r\n                onClick={async (e) => {\r\n                  e.preventDefault();\r\n                  if (userData.email !== undefined) {\r\n                    if (socket.connected)\r\n                      await disconnectIOSocket(socket, userData._id);\r\n                    dispatch(logoutUser(userData._id, userData.email));\r\n                  }\r\n                }}\r\n                to={item.path}\r\n                exact\r\n              >\r\n                {capitalize(item.name)}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ) : (\r\n            <div className=\"signout-loading\" key={index}>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n              <Nav.Item as=\"li\">\r\n                <NavLink className=\"signout-loading-text\" to={item.path} exact>\r\n                  {capitalizeFirst(strings.logout.LOGOUT)}\r\n                </NavLink>\r\n              </Nav.Item>\r\n            </div>\r\n          )\r\n        ) : item.name === strings.navbar.navUserLoggedItems.MAILS ? (\r\n          <div className=\"navbar-mails-box\" key={index}>\r\n            <div className=\"navbar-mails-counter-box\">\r\n              {unreadMessages > 0 && (\r\n                <div className=\"navbar-mails-counter\">{unreadMessages}</div>\r\n              )}\r\n            </div>\r\n            <Nav.Item as=\"li\">\r\n              <NavLink to={item.path} exact>\r\n                {capitalizeFirst(item.name)}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          </div>\r\n        ) : item.name === strings.navbar.navUserLoggedItems.USER_PHOTO ? (\r\n          userData.photo ? (\r\n            <Img\r\n              key={index}\r\n              className=\"navbar-user-photo\"\r\n              src={\r\n                userGooglePhoto.some(\r\n                  (element) =>\r\n                    userData.photo && userData.photo.includes(element)\r\n                )\r\n                  ? userData.photo\r\n                  : strings.path.IMAGE_REQUEST + userData.photo\r\n              }\r\n              loader={<Spinner animation=\"border\" size=\"sm\" variant=\"dark\" />}\r\n            />\r\n          ) : (\r\n            <FontAwesomeIcon\r\n              key={index}\r\n              className=\"navbar-user-icon\"\r\n              icon={faUserCircle}\r\n            />\r\n          )\r\n        ) : (\r\n          <Nav.Item as=\"li\" key={index}>\r\n            <NavLink activeClassName=\"active\" to={item.path} exact>\r\n              {capitalize(item.name)}\r\n            </NavLink>\r\n          </Nav.Item>\r\n        )\r\n      )\r\n    : null;\r\n};\r\n\r\nexport default MakeNavMenu;\r\n","import React from \"react\";\r\nimport { Nav, Row, Col } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport MakeNavMenu from \"./makeNavMenu\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = ({ path, url, isExact }) => {\r\n  return (\r\n    <Row className=\"navbar\">\r\n      <Col xs={6}>\r\n        <Nav fill as=\"ul\">\r\n          {path === strings.path.HOME &&\r\n          url === strings.path.HOME &&\r\n          isExact ? (\r\n            <MakeNavMenu type={strings.navbar.navType.LOGO} />\r\n          ) : (path === strings.path.LOGIN &&\r\n              url === strings.path.LOGIN &&\r\n              isExact) ||\r\n            (path === strings.path.SIGNUP &&\r\n              url === strings.path.SIGNUP &&\r\n              isExact) ? (\r\n            <MakeNavMenu type={strings.navbar.navType.LOGO_GET_STARTED} />\r\n          ) : (path === strings.path.RECIPE_BOOK &&\r\n              url === strings.path.RECIPE_BOOK &&\r\n              isExact) ||\r\n            (path === strings.path.MY_RECIPES &&\r\n              url === strings.path.MY_RECIPES &&\r\n              isExact) ||\r\n            (path === strings.path.MAILS &&\r\n              url === strings.path.MAILS &&\r\n              isExact) ||\r\n            (path === strings.path.MY_EVENTS &&\r\n              url === strings.path.MY_EVENTS &&\r\n              isExact) ||\r\n            (path === strings.path.MY_PROFILE &&\r\n              url === strings.path.MY_PROFILE &&\r\n              isExact) ? (\r\n            <MakeNavMenu type={strings.navbar.navType.LOGO_USER_LOGGED} />\r\n          ) : null}\r\n        </Nav>\r\n      </Col>\r\n      <Col xs={6}>\r\n        <Nav fill as=\"ul\">\r\n          {path === strings.path.HOME &&\r\n          url === strings.path.HOME &&\r\n          isExact ? (\r\n            <MakeNavMenu type={strings.navbar.navType.HOME_MENU} />\r\n          ) : (path === strings.path.LOGIN &&\r\n              url === strings.path.LOGIN &&\r\n              isExact) ||\r\n            (path === strings.path.SIGNUP &&\r\n              url === strings.path.SIGNUP &&\r\n              isExact) ? (\r\n            <MakeNavMenu type={strings.navbar.navType.GET_STARTED_MENU} />\r\n          ) : (path === strings.path.RECIPE_BOOK &&\r\n              url === strings.path.RECIPE_BOOK &&\r\n              isExact) ||\r\n            (path === strings.path.MY_RECIPES &&\r\n              url === strings.path.MY_RECIPES &&\r\n              isExact) ||\r\n            (path === strings.path.MAILS &&\r\n              url === strings.path.MAILS &&\r\n              isExact) ||\r\n            (path === strings.path.MY_EVENTS &&\r\n              url === strings.path.MY_EVENTS &&\r\n              isExact) ||\r\n            (path === strings.path.MY_PROFILE &&\r\n              url === strings.path.MY_PROFILE &&\r\n              isExact) ? (\r\n            <MakeNavMenu type={strings.navbar.navType.USER_LOGGED_MENU} />\r\n          ) : null}\r\n        </Nav>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Image, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport \"./main.css\";\r\n\r\nconst Main = () => {\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n  });\r\n  return (\r\n    <animated.div\r\n      style={props}\r\n      className=\"main-section\"\r\n      id={strings.navbar.navHomeItems.MAIN}\r\n    >\r\n      <Row>\r\n        <Col xs={2}>\r\n          <div className=\"shape-top-left\"></div>\r\n        </Col>\r\n        <Col xs={8} />\r\n        <Col xs={2}>\r\n          <div className=\"shape-top-right\"></div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={1} />\r\n        <Col xs={5}>\r\n          <div className=\"box\">\r\n            <div>\r\n              <Row className=\"mb-5\" />\r\n              <Row className=\"mb-5\" />\r\n              <Row className=\"mb-5\" />\r\n              <h1 className=\"main-text\">\r\n                {capitalizeFirst(strings.main.MAIN_TEXT)}\r\n              </h1>\r\n              <h3 className=\"main-sub-text\">\r\n                {capitalizeFirst(strings.main.MAIN_SUB_TEXT)}\r\n              </h3>\r\n              <NavLink to={strings.path.LOGIN} exact>\r\n                <Button className=\"button\" variant=\"outline-danger\">\r\n                  {capitalizeFirst(strings.main.BUTTON_TEXT)}\r\n                </Button>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Image\r\n            className=\"image\"\r\n            src={require(\"../../assets/imgs/womancookingbackg.jpg\")}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport \"./about.css\";\r\n\r\nconst Area = ({ image, text }) => {\r\n  return (\r\n    <div className=\"about-area\">\r\n      <Image\r\n        className=\"image-area\"\r\n        src={require(`../../assets/imgs/${image}.jpg`)}\r\n        roundedCircle\r\n      />\r\n      <h1 className=\"text-area\">{capitalizeFirst(text)}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Area;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Area from \"./Area\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport \"./about.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about-section\" id={strings.navbar.navHomeItems.ABOUT}>\r\n      <Row className=\"mb-5\" />\r\n      <Row className=\"mb-5\" />\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={7}>\r\n          <Area image=\"reciperet\" text={strings.about.FIRST_AREA} />\r\n        </Col>\r\n        <Col xs={3} />\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={7}>\r\n          <Area image=\"cookbookret\" text={strings.about.SECOND_AREA} />\r\n        </Col>\r\n        <Col xs={3} />\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={7}>\r\n          <Area image=\"contactret\" text={strings.about.THIRD_AREA} />\r\n        </Col>\r\n        <Col xs={3} />\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={7}>\r\n          <Area image=\"tastingret\" text={strings.about.FOURTH_AREA} />\r\n        </Col>\r\n        <Col xs={3} />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export const customerContactQuery = (subject, email, content) => {\r\n  return {\r\n    query: `\r\n          mutation($subject: String!, $email: String!, $content: String!) {\r\n              customerContact(subject: $subject, email: $email, content: $content)\r\n          }\r\n          `,\r\n    variables: {\r\n      subject,\r\n      email,\r\n      content,\r\n    },\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\nimport { customerContact } from \"../../../redux/customerContact/thunk/customerContactThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useContactForm = () => {\r\n  const [inputs, setInputs] = useState({});\r\n  const dispatch = useDispatch();\r\n  const { emailSent } = useSelector((state) => state.customerContact);\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]:\r\n        e.target.name === \"email\"\r\n          ? e.target.value\r\n          : capitalizeFirst(e.target.value),\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(customerContact(inputs.subject, inputs.email, inputs.message));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputs({});\r\n  }, [emailSent]);\r\n\r\n  return { inputs, handleInputChange, handleSubmit };\r\n};\r\n\r\nexport default useContactForm;\r\n","import { customerContactCases } from \"../../config/cases/Cases\";\r\nimport { customerContactQuery } from \"../query/customerContactQuery\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nexport const customerContact = (subject, email, content) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: customerContactCases.LOADING, payload: true });\r\n    const bodyRequest = customerContactQuery(subject, email, content);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: customerContactCases.EMAIL_SENT,\r\n          payload: data.customerContact,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: customerContactCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearCustomerContactState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: customerContactCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport useContactForm from \"../../hooks/form/contact/useContactForm\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./contactForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst ContactForm = () => {\r\n  const { loading } = useSelector((state) => state.customerContact);\r\n  const { inputs, handleInputChange, handleSubmit } = useContactForm();\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicSubject\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.contact.SUBJECT)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"contact-form-control\"\r\n              onChange={handleInputChange}\r\n              value={inputs.subject || \"\"}\r\n              size=\"lg\"\r\n              name=\"subject\"\r\n              type=\"text\"\r\n              placeholder={strings.contact.SUBJECT_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.contact.EMAIL)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"contact-form-control\"\r\n              onChange={handleInputChange}\r\n              value={inputs.email || \"\"}\r\n              size=\"lg\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder={strings.contact.EMAIL_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicMessage\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.contact.MESSAGE)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"contact-form-control\"\r\n              as=\"textarea\"\r\n              rows=\"4\"\r\n              onChange={handleInputChange}\r\n              value={inputs.message || \"\"}\r\n              size=\"lg\"\r\n              name=\"message\"\r\n              type=\"text\"\r\n              placeholder={strings.contact.MESSAGE_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Button\r\n            disabled={\r\n              loading ||\r\n              inputs.subject === undefined ||\r\n              inputs.subject === \"\" ||\r\n              inputs.message === undefined ||\r\n              inputs.message === \"\" ||\r\n              inputs.email === undefined ||\r\n              inputs.email === \"\"\r\n            }\r\n            type=\"submit\"\r\n            className=\"global-button-label\"\r\n            variant=\"outline-dark\"\r\n          >\r\n            <div className=\"contact-spinner\">\r\n              {loading && (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n            </div>\r\n            {loading ? (\r\n              <div className=\"contact-button-loading\">\r\n                {capitalizeFirst(strings.contact.BUTTON_TEXT_LOADING)}\r\n              </div>\r\n            ) : (\r\n              <div>{capitalizeFirst(strings.contact.BUTTON_TEXT)}</div>\r\n            )}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","export const signupQuery = (name, email, confirmEmail, password, date) => {\r\n  return {\r\n    query: `\r\n        mutation($name: String!, $email: String!, $confirmEmail: String!, $password: String!, $date: Date!) {\r\n            signUp(name: $name, email: $email, confirmEmail: $confirmEmail, password: $password, date: $date) {\r\n                email\r\n            }\r\n        }\r\n        `,\r\n    variables: { name, email, confirmEmail, password, date },\r\n  };\r\n};\r\n","export const remindPasswordQuery = (email) => {\r\n  return {\r\n    query: `\r\n            mutation($email: String!) {\r\n                remindPassword(email: $email)\r\n            }\r\n            `,\r\n    variables: { email },\r\n  };\r\n};\r\n","export const googleSignupQuery = (name, email, photo, date) => {\r\n  return {\r\n    query: `\r\n          mutation($name: String!, $email: String!, $photo: String, $date: Date!) {\r\n            signUpGoogleUser(name: $name, email: $email, photo: $photo, date: $date) {\r\n                email\r\n              }\r\n          }\r\n          `,\r\n    variables: {\r\n      name,\r\n      email,\r\n      photo,\r\n      date,\r\n    },\r\n  };\r\n};\r\n","export const changePasswordQuery = (\r\n  currentPass,\r\n  newPass,\r\n  confirmPass,\r\n  userId,\r\n  email\r\n) => {\r\n  return {\r\n    query: `\r\n              mutation($currentPass: String!, $newPass: String!, $confirmPass: String!, $userId: ID!, $email: String!) {\r\n                  changeUserPassword(currentPass: $currentPass, newPass: $newPass, confirmPass: $confirmPass, userId: $userId, email: $email)\r\n              }\r\n              `,\r\n    variables: { currentPass, newPass, confirmPass, userId, email },\r\n  };\r\n};\r\n","export const addMyRecipeQuery = (\r\n  title,\r\n  recipeImage,\r\n  video,\r\n  category,\r\n  cookTime,\r\n  ingredients,\r\n  description,\r\n  userId,\r\n  email,\r\n  date\r\n) => {\r\n  return {\r\n    query: `mutation($title: String!, $recipeImage: RecipeImage, $video: String, $category: String!, $cookTime: Int!, $ingredients: [String!]!, $description: String!, $userId: ID!, $email: String!, $date: Date!) {\r\n    addMyRecipe(title: $title, recipeImage: $recipeImage, video: $video, category: $category, cookTime: $cookTime, ingredients: $ingredients, description: $description, userId: $userId, email: $email, date: $date)\r\n  }`,\r\n    variables: {\r\n      title,\r\n      recipeImage,\r\n      video,\r\n      category,\r\n      cookTime,\r\n      ingredients,\r\n      description,\r\n      userId,\r\n      email,\r\n      date,\r\n    },\r\n  };\r\n};\r\n","export const editMyRecipeQuery = (\r\n  recipeId,\r\n  title,\r\n  recipeImage,\r\n  video,\r\n  category,\r\n  cookTime,\r\n  ingredients,\r\n  description,\r\n  userId,\r\n  email\r\n) => {\r\n  return {\r\n    query: `mutation($recipeId: ID!, $title: String!, $recipeImage: RecipeImage, $video: String, $category: String!, $cookTime: Int!, $ingredients: [String!]!, $description: String!, $userId: ID!, $email: String!) {\r\n      editMyRecipe(recipeId: $recipeId, title: $title, recipeImage: $recipeImage, video: $video, category: $category, cookTime: $cookTime, ingredients: $ingredients, description: $description, userId: $userId, email: $email)\r\n    }`,\r\n    variables: {\r\n      recipeId,\r\n      title,\r\n      recipeImage,\r\n      video,\r\n      category,\r\n      cookTime,\r\n      ingredients,\r\n      description,\r\n      userId,\r\n      email,\r\n    },\r\n  };\r\n};\r\n","export const removeMyRecipeQuery = (recipeId, userId, email) => {\r\n  return {\r\n    query: `mutation($recipeId: ID!, $userId: ID!, $email: String!) {\r\n      removeMyRecipe(recipeId: $recipeId, userId: $userId, email: $email)\r\n    }`,\r\n    variables: {\r\n      recipeId,\r\n      userId,\r\n      email,\r\n    },\r\n  };\r\n};\r\n","import { changeMyRecipesCases } from \"../../../config/cases/Cases\";\r\nimport { addMyRecipeQuery } from \"../query/addMyRecipeQuery\";\r\nimport { editMyRecipeQuery } from \"../query/editMyRecipeQuery\";\r\nimport { removeMyRecipeQuery } from \"../query/removeMyRecipeQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const addMyRecipe = (\r\n  title,\r\n  image,\r\n  video,\r\n  category,\r\n  cookTime,\r\n  ingredients,\r\n  description,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changeMyRecipesCases.LOADING, payload: true });\r\n    const bodyRequest = addMyRecipeQuery(\r\n      title,\r\n      image,\r\n      video,\r\n      category,\r\n      cookTime,\r\n      ingredients,\r\n      description,\r\n      userId,\r\n      email,\r\n      new Date()\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.addMyRecipe !== null) {\r\n        dispatch({\r\n          type: changeMyRecipesCases.RECIPE_UPDATED,\r\n          payload: data.addMyRecipe,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changeMyRecipesCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changeMyRecipesCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMyRecipe = (\r\n  recipeId,\r\n  title,\r\n  recipeImage,\r\n  video,\r\n  category,\r\n  cookTime,\r\n  ingredients,\r\n  description,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changeMyRecipesCases.LOADING, payload: true });\r\n    const bodyRequest = editMyRecipeQuery(\r\n      recipeId,\r\n      title,\r\n      recipeImage,\r\n      video,\r\n      category,\r\n      cookTime,\r\n      ingredients,\r\n      description,\r\n      userId,\r\n      email\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.editMyRecipe !== null) {\r\n        dispatch({\r\n          type: changeMyRecipesCases.RECIPE_UPDATED,\r\n          payload: data.editMyRecipe,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changeMyRecipesCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changeMyRecipesCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeMyRecipe = (recipeId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changeMyRecipesCases.LOADING, payload: true });\r\n    const bodyRequest = removeMyRecipeQuery(recipeId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.removeMyRecipe !== null) {\r\n        dispatch({\r\n          type: changeMyRecipesCases.RECIPE_UPDATED,\r\n          payload: data.removeMyRecipe,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changeMyRecipesCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changeMyRecipesCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeMyRecipesClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: changeMyRecipesCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const addNewEventQuery = (\r\n  title,\r\n  eventImage,\r\n  addressObj,\r\n  description,\r\n  availablePlaces,\r\n  eventDate,\r\n  tel,\r\n  userId,\r\n  email,\r\n  date\r\n) => {\r\n  return {\r\n    query: `mutation($title: String!, $eventImage: EventImage, $addressObj: EventAddress!, $description: String!, $availablePlaces: Int!, $eventDate: Date!, $tel: Int!, $userId: ID!, $email: String!, $date: Date!) {\r\n        addMyEvent(title: $title, eventImage: $eventImage, addressObj: $addressObj, description: $description, availablePlaces: $availablePlaces, eventDate: $eventDate, tel: $tel, userId: $userId, email: $email, date: $date)\r\n    }`,\r\n    variables: {\r\n      title,\r\n      eventImage,\r\n      addressObj,\r\n      description,\r\n      availablePlaces,\r\n      eventDate,\r\n      tel,\r\n      userId,\r\n      email,\r\n      date,\r\n    },\r\n  };\r\n};\r\n","export const editEventQuery = (\r\n  title,\r\n  eventImage,\r\n  addressObj,\r\n  description,\r\n  availablePlaces,\r\n  eventDate,\r\n  tel,\r\n  eventId,\r\n  addressId,\r\n  userId,\r\n  email\r\n) => {\r\n  return {\r\n    query: `mutation($title: String!, $eventImage: EventImage, $addressObj: EventAddress!, $description: String!, $availablePlaces: Int!, $eventDate: Date!, $tel: Int!, $eventId: ID!, $addressId: ID!, $userId: ID!, $email: String!) {\r\n          editEvent(title: $title, eventImage: $eventImage, addressObj: $addressObj, description: $description, availablePlaces: $availablePlaces, eventDate: $eventDate, tel: $tel, eventId: $eventId, addressId: $addressId, userId: $userId, email: $email)\r\n      }`,\r\n    variables: {\r\n      title,\r\n      eventImage,\r\n      addressObj,\r\n      description,\r\n      availablePlaces,\r\n      eventDate,\r\n      tel,\r\n      eventId,\r\n      addressId,\r\n      userId,\r\n      email,\r\n    },\r\n  };\r\n};\r\n","export const removeEventQuery = (eventId, addressId, userId, email) => {\r\n  return {\r\n    query: `mutation($eventId: ID!, $addressId: ID!, $userId: ID!, $email: String!) {\r\n            removeEvent(eventId: $eventId, addressId: $addressId, userId: $userId, email: $email)\r\n        }`,\r\n    variables: {\r\n      eventId,\r\n      addressId,\r\n      userId,\r\n      email,\r\n    },\r\n  };\r\n};\r\n","import { changeEventCases } from \"../../../config/cases/Cases\";\r\nimport { addNewEventQuery } from \"../query/addNewEventQuery\";\r\nimport { editEventQuery } from \"../query/editEventQuery\";\r\nimport { removeEventQuery } from \"../query/removeEventQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const addNewEvent = (\r\n  title,\r\n  eventImage,\r\n  addressObj,\r\n  description,\r\n  availablePlaces,\r\n  eventDate,\r\n  tel,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changeEventCases.LOADING, payload: true });\r\n    const bodyRequest = addNewEventQuery(\r\n      title,\r\n      eventImage,\r\n      addressObj,\r\n      description,\r\n      availablePlaces,\r\n      eventDate,\r\n      tel,\r\n      userId,\r\n      email,\r\n      new Date()\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.addMyEvent !== null) {\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: data.addMyEvent,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changeEventCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changeEventCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const editEvent = (\r\n  title,\r\n  eventImage,\r\n  addressObj,\r\n  description,\r\n  availablePlaces,\r\n  eventDate,\r\n  tel,\r\n  eventId,\r\n  addressId,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changeEventCases.LOADING, payload: true });\r\n    const bodyRequest = editEventQuery(\r\n      title,\r\n      eventImage,\r\n      addressObj,\r\n      description,\r\n      availablePlaces,\r\n      eventDate,\r\n      tel,\r\n      eventId,\r\n      addressId,\r\n      userId,\r\n      email\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.editEvent !== null) {\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: data.editEvent,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changeEventCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changeEventCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeEvent = (eventId, addressId, userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changeEventCases.LOADING, payload: true });\r\n    const bodyRequest = removeEventQuery(eventId, addressId, userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.removeEvent !== null) {\r\n        dispatch({\r\n          type: changeEventCases.EVENT_CHANGED,\r\n          payload: data.removeEvent,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changeEventCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changeEventCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeEventClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: changeEventCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const removeAccountQuery = (userId, email) => {\r\n  return {\r\n    query: `\r\n                mutation($userId: ID!, $email: String!) {\r\n                    removeAccount(userId: $userId, email: $email)\r\n                }\r\n                `,\r\n    variables: { userId, email },\r\n  };\r\n};\r\n","import { removeAccountCases } from \"../../../config/cases/Cases\";\r\nimport { removeAccountQuery } from \"../query/removeAccountQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const removeAccount = (userId, email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: removeAccountCases.LOADING, payload: true });\r\n    const bodyRequest = removeAccountQuery(userId, email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { data } = responseData;\r\n      if (data.removeAccount !== null) {\r\n        dispatch({\r\n          type: removeAccountCases.ACCOUNT_REMOVED,\r\n          payload: data.removeAccount,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: removeAccountCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeAccountClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: removeAccountCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearSignUpState } from \"../../redux/signup/thunk/SignupThunk\";\r\nimport { clearCustomerContactState } from \"../../redux/customerContact/thunk/customerContactThunk\";\r\nimport { clearRemindPasswordState } from \"../../redux/remindPassword/remindUserPassword/thunk/remindPasswordThunk\";\r\nimport { clearLoginErrorState } from \"../../redux/login/loginUser/thunk/loginThunk\";\r\nimport { clearLogoutState } from \"../../redux/logout/thunk/logoutThunk\";\r\nimport { clearSignUpGoogleUserState } from \"../../redux/googleSignup/thunk/googleSignupThunk\";\r\nimport { changeUserPasswordClearState } from \"../../redux/updateMyProfile/changePassword/thunk/changePasswordThunk\";\r\nimport { changeMyRecipesClearState } from \"../../redux/myRecipes/changeMyRecipes/thunk/changeMyRecipesThunk\";\r\nimport { changeEventClearState } from \"../../redux/myEvents/changeEvent/thunk/changeEventThunk\";\r\nimport { eventPreviewClearErrorState } from \"../../redux/myEvents/eventPreview/thunk/eventPreviewThunk\";\r\nimport { getAddressClearState } from \"../../redux/myEvents/getAddress/thunk/getAddressThunk\";\r\nimport { getLocationDetailsClearState } from \"../../redux/myEvents/getLocationDetails/thunk/getLocationDetailsThunk\";\r\nimport { recipeDetailsClearErrorState } from \"../../redux/recipeBook/showRecipeDetails/thunk/showRecipeDetailsThunk\";\r\nimport { removeAccountClearState } from \"../../redux/updateMyProfile/removeAccount/thunk/removeAccountThunk\";\r\nimport { getEmojisClearState } from \"../../redux/emoji/getEmojis/thunk/getEmojisThunk\";\r\n\r\nconst useNotification = (notificationMessage) => {\r\n  const [notifications, setNotification] = useState({});\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNotification((notifications) => ({\r\n      ...notifications,\r\n      notification: notificationMessage,\r\n    }));\r\n  }, [notificationMessage]);\r\n\r\n  let { notification } = notifications;\r\n  const { userSignedup, error } = useSelector((state) => state.signup);\r\n  const { passwordSent, remindPassError } = useSelector(\r\n    (state) => state.remindPass\r\n  );\r\n  const { loginError } = useSelector((state) => state.login);\r\n  const { logoutError } = useSelector((state) => state.logout);\r\n  const { emojiError } = useSelector((state) => state.emojis);\r\n  const { userPasswordChanged, changeUserPasswordError } = useSelector(\r\n    (state) => state.isUserPasswordChanged\r\n  );\r\n  const { userGoogleSignedup, errorGoogleSignup } = useSelector(\r\n    (state) => state.signGoogle\r\n  );\r\n  const { emailSent, emailSentError } = useSelector(\r\n    (state) => state.customerContact\r\n  );\r\n  const { myRecipeChangeError } = useSelector(\r\n    (state) => state.isMyRecipeChanged\r\n  );\r\n  const { eventChangeError } = useSelector((state) => state.isEventChanged);\r\n  const { eventPreviewError } = useSelector((state) => state.eventPreview);\r\n  const { addressesRetrievedError } = useSelector(\r\n    (state) => state.addressSuggestions\r\n  );\r\n  const { locationDetailsError } = useSelector(\r\n    (state) => state.locationDetails\r\n  );\r\n  const { detailsDataError } = useSelector(\r\n    (state) => state.isRecipeDetailsShown\r\n  );\r\n  const { removingAccountError } = useSelector(\r\n    (state) => state.isAccountRemoved\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setShow(true);\r\n    const timer = setTimeout(() => {\r\n      if (error || userSignedup) {\r\n        dispatch(clearSignUpState());\r\n      } else if (emailSent || emailSentError) {\r\n        dispatch(clearCustomerContactState());\r\n      } else if (passwordSent || remindPassError) {\r\n        dispatch(clearRemindPasswordState());\r\n      } else if (loginError) {\r\n        dispatch(clearLoginErrorState());\r\n      } else if (logoutError) {\r\n        dispatch(clearLogoutState());\r\n      } else if (errorGoogleSignup || userGoogleSignedup) {\r\n        dispatch(clearSignUpGoogleUserState());\r\n      } else if (myRecipeChangeError) {\r\n        dispatch(changeMyRecipesClearState());\r\n      } else if (userPasswordChanged || changeUserPasswordError) {\r\n        dispatch(changeUserPasswordClearState());\r\n      } else if (eventChangeError) {\r\n        dispatch(changeEventClearState());\r\n      } else if (eventPreviewError) {\r\n        dispatch(eventPreviewClearErrorState());\r\n      } else if (addressesRetrievedError) {\r\n        dispatch(getAddressClearState());\r\n      } else if (locationDetailsError) {\r\n        dispatch(getLocationDetailsClearState());\r\n      } else if (detailsDataError) {\r\n        dispatch(recipeDetailsClearErrorState());\r\n      } else if (removingAccountError) {\r\n        dispatch(removeAccountClearState());\r\n      } else if (emojiError) {\r\n        dispatch(getEmojisClearState());\r\n      }\r\n      setShow(false);\r\n      setNotification({});\r\n    }, 3500);\r\n    return () => clearTimeout(timer);\r\n  }, [\r\n    notification,\r\n    error,\r\n    userSignedup,\r\n    emailSent,\r\n    emailSentError,\r\n    passwordSent,\r\n    remindPassError,\r\n    loginError,\r\n    logoutError,\r\n    emojiError,\r\n    userGoogleSignedup,\r\n    errorGoogleSignup,\r\n    myRecipeChangeError,\r\n    userPasswordChanged,\r\n    changeUserPasswordError,\r\n    eventChangeError,\r\n    eventPreviewError,\r\n    addressesRetrievedError,\r\n    locationDetailsError,\r\n    detailsDataError,\r\n    removingAccountError,\r\n    dispatch,\r\n  ]);\r\n\r\n  return {\r\n    notification,\r\n    show,\r\n  };\r\n};\r\n\r\nexport default useNotification;\r\n","import { strings } from \"../../../strings/Strings\";\r\nimport { signupCases } from \"../../config/cases/Cases\";\r\nimport { signupQuery } from \"../query/signupQuery\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nexport const signupUser = (name, email, confirmEmail, password) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: signupCases.LOADING, payload: true });\r\n    const bodyRequest = signupQuery(\r\n      name,\r\n      email,\r\n      confirmEmail,\r\n      password,\r\n      new Date()\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: signupCases.USER_SIGNEDUP,\r\n          payload: data.signUp.email,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({ type: signupCases.ERROR, payload: errors[0].message });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: signupCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearSignUpState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: signupCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { remindPassCases } from \"../../../config/cases/Cases\";\r\nimport { remindPasswordQuery } from \"../query/remindPasswordQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const remindMePassword = (email) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: remindPassCases.LOADING, payload: true });\r\n    const bodyRequest = remindPasswordQuery(email);\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.remindPassword !== null) {\r\n        dispatch({\r\n          type: remindPassCases.PASSWORD_SENT,\r\n          payload: data.remindPassword,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: remindPassCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: remindPassCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearRemindPasswordState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: remindPassCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { signupGoogleUserCases } from \"../../config/cases/Cases\";\r\nimport { googleSignupQuery } from \"../query/googleSignupQuery\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nexport const signupGoogleUser = (name, email, photo, tokenId) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: signupGoogleUserCases.LOADING, payload: true });\r\n    const bodyRequest = googleSignupQuery(name, email, photo, new Date());\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"x-auth\": tokenId,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data) {\r\n        dispatch({\r\n          type: signupGoogleUserCases.USER_GOOGLE_SIGNEDUP,\r\n          payload: data.signUpGoogleUser.email,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: signupGoogleUserCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: signupGoogleUserCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearSignUpGoogleUserState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: signupGoogleUserCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { changePasswordCases } from \"../../../config/cases/Cases\";\r\nimport { changePasswordQuery } from \"../query/changePasswordQuery\";\r\nimport { strings } from \"../../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../../util/Util\";\r\n\r\nexport const changeUserPassword = (\r\n  currentPass,\r\n  newPass,\r\n  confirmPass,\r\n  userId,\r\n  email\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: changePasswordCases.LOADING, payload: true });\r\n    const bodyRequest = changePasswordQuery(\r\n      currentPass,\r\n      newPass,\r\n      confirmPass,\r\n      userId,\r\n      email\r\n    );\r\n    try {\r\n      const response = await fetch(strings.path.SERVER_REQUEST, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n        body: JSON.stringify(bodyRequest),\r\n      });\r\n      const responseData = await response.json();\r\n      const { errors, data } = responseData;\r\n      if (data.changeUserPassword !== null) {\r\n        dispatch({\r\n          type: changePasswordCases.PASSWORD_CHANGED,\r\n          payload: data.changeUserPassword,\r\n        });\r\n      } else if (errors) {\r\n        dispatch({\r\n          type: changePasswordCases.ERROR,\r\n          payload: errors[0].message,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err)\r\n        dispatch({\r\n          type: changePasswordCases.ERROR,\r\n          payload: capitalizeFirst(strings.error.FETCH_ERROR),\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeUserPasswordClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: changePasswordCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport useNotification from \"../../hooks/notifications/useNotification\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport \"./notification.css\";\r\n\r\nconst Notification = ({ notificationMessage }) => {\r\n  const { notification, show } = useNotification(notificationMessage);\r\n  const { error } = useSelector((state) => state.signup);\r\n  const { emailSentError } = useSelector((state) => state.customerContact);\r\n  const { remindPassError } = useSelector((state) => state.remindPass);\r\n  const { loginError } = useSelector((state) => state.login);\r\n  const { logoutError } = useSelector((state) => state.logout);\r\n  const { emojiError } = useSelector((state) => state.emojis);\r\n  const { changeUserPasswordError } = useSelector(\r\n    (state) => state.isUserPasswordChanged\r\n  );\r\n  const { errorGoogleSignup } = useSelector((state) => state.signGoogle);\r\n  const { myRecipeChangeError } = useSelector(\r\n    (state) => state.isMyRecipeChanged\r\n  );\r\n  const { eventChangeError } = useSelector((state) => state.isEventChanged);\r\n  const { eventPreviewError } = useSelector((state) => state.eventPreview);\r\n  const { addressesRetrievedError } = useSelector(\r\n    (state) => state.addressSuggestions\r\n  );\r\n  const { locationDetailsError } = useSelector(\r\n    (state) => state.locationDetails\r\n  );\r\n  const { detailsDataError } = useSelector(\r\n    (state) => state.isRecipeDetailsShown\r\n  );\r\n  const { removingAccountError } = useSelector(\r\n    (state) => state.isAccountRemoved\r\n  );\r\n\r\n  return (\r\n    show &&\r\n    notification !== null &&\r\n    notification !== undefined && (\r\n      <div className=\"notification\">\r\n        {notification === error ||\r\n        notification === emailSentError ||\r\n        notification === remindPassError ||\r\n        notification === loginError ||\r\n        notification === logoutError ||\r\n        notification === emojiError ||\r\n        notification === errorGoogleSignup ||\r\n        notification === myRecipeChangeError ||\r\n        notification === changeUserPasswordError ||\r\n        notification === eventChangeError ||\r\n        notification === addressesRetrievedError ||\r\n        notification === locationDetailsError ||\r\n        notification === detailsDataError ||\r\n        notification === removingAccountError ||\r\n        notification === eventPreviewError ? (\r\n          <div className=\"notification-icon-error\">\r\n            <FontAwesomeIcon icon={faTimesCircle} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"notification-icon-success\">\r\n            <FontAwesomeIcon icon={faCheckCircle} />\r\n          </div>\r\n        )}\r\n        {notification === error ||\r\n        notification === emailSentError ||\r\n        notification === remindPassError ||\r\n        notification === loginError ||\r\n        notification === logoutError ||\r\n        notification === emojiError ||\r\n        notification === errorGoogleSignup ||\r\n        notification === myRecipeChangeError ||\r\n        notification === changeUserPasswordError ||\r\n        notification === eventChangeError ||\r\n        notification === addressesRetrievedError ||\r\n        notification === locationDetailsError ||\r\n        notification === detailsDataError ||\r\n        notification === removingAccountError ||\r\n        notification === eventPreviewError ? (\r\n          <div className=\"notification-message\">\r\n            {capitalizeFirst(notification)}\r\n          </div>\r\n        ) : (\r\n          <div className=\"notification-message-success\">\r\n            {capitalizeFirst(notification)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { Row, Col, Nav, Image } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport ContactForm from \"../../forms/contact/ContactForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./contact.css\";\r\n\r\nconst Contact = () => {\r\n  const { emailSent, emailSentError } = useSelector(\r\n    (state) => state.customerContact\r\n  );\r\n  return (\r\n    <div className=\"contact-section\" id={strings.navbar.navHomeItems.CONTACT}>\r\n      <Row className=\"mb-5\" />\r\n      <Row className=\"mb-5\" />\r\n      <Row className=\"mb-4\" />\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"first-section\">\r\n            <Row>\r\n              <Col xs={2} />\r\n              <Col xs={5}>\r\n                <h1 className=\"contact-text\">\r\n                  {capitalizeFirst(strings.contact.FIRST_SECTION)}\r\n                </h1>\r\n              </Col>\r\n              <Col xs={5}>\r\n                <div className=\"form-section\">\r\n                  <ContactForm />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={3} />\r\n              <Col xs={3}>\r\n                <Notification\r\n                  notificationMessage={emailSent || emailSentError}\r\n                />\r\n              </Col>\r\n              <Col xs={6} />\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"second-section\">\r\n            <footer>\r\n              <Row className=\"mb-3\" />\r\n              <Row>\r\n                <Col xs={2} />\r\n                <Col xs={8}>\r\n                  <div className=\"social-area\">\r\n                    <Image\r\n                      className=\"social-icon\"\r\n                      src={require(\"../../assets/imgs/facebook2ret.jpg\")}\r\n                      roundedCircle\r\n                    />\r\n                    <Image\r\n                      className=\"social-icon\"\r\n                      src={require(\"../../assets/imgs/instagramret.jpg\")}\r\n                      roundedCircle\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs={2} />\r\n              </Row>\r\n              <Row>\r\n                <Col xs={9} />\r\n                <Col xs={3}>\r\n                  <div className=\"footer-author\">\r\n                    <p className=\"footer-paragraph\">\r\n                      &#169; {new Date().getFullYear()} {strings.contact.FOOTER}\r\n                    </p>\r\n                    <Nav.Link href={strings.path.LINKEDIN} target=\"_blank\">\r\n                      <FontAwesomeIcon\r\n                        className=\"linkedin-icon\"\r\n                        icon={faLinkedin}\r\n                      />\r\n                    </Nav.Link>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </footer>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport Main from \"../../views/main/Main\";\r\nimport About from \"../../views/about/About\";\r\nimport Contact from \"../../views/contact/Contact\";\r\n\r\nconst Home = ({ match: { path, url, isExact } }) => {\r\n  return (\r\n    <>\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <Main />\r\n      <About />\r\n      <Contact />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { showRemindPassCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showRemindPassComponent = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showRemindPassCases.FORM_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { loginUser } from \"../../../redux/login/loginUser/thunk/loginThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useLoginForm = () => {\r\n  const [inputs, setInputs] = useState({});\r\n  const dispatch = useDispatch();\r\n  const { userData } = useSelector((state) => state.login);\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(inputs.email, inputs.password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputs({});\r\n  }, [userData]);\r\n\r\n  return { inputs, handleInputChange, handleSubmit };\r\n};\r\n\r\nexport default useLoginForm;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { loginUserGoogle } from \"../../../redux/login/loginUser/thunk/loginThunk\";\r\n\r\nconst useGoogleLogin = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGoogleSuccessResponse = (response) => {\r\n    dispatch(loginUserGoogle(response.profileObj.email, response.tokenId));\r\n  };\r\n  const handleGoogleFailureResponse = (response) => {\r\n    console.log(response);\r\n  };\r\n  return { handleGoogleSuccessResponse, handleGoogleFailureResponse };\r\n};\r\n\r\nexport default useGoogleLogin;\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport useLoginForm from \"../../hooks/form/login/useLoginForm\";\r\nimport useGoogleLogin from \"../../hooks/googleButton/login/useGoogleLogin\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport \"./loginForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst LoginForm = () => {\r\n  const { inputs, handleInputChange, handleSubmit } = useLoginForm();\r\n  const { loading, loadingGoogle } = useSelector((state) => state.login);\r\n  const {\r\n    handleGoogleSuccessResponse,\r\n    handleGoogleFailureResponse,\r\n  } = useGoogleLogin();\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.login.EMAIL)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={handleInputChange}\r\n              value={inputs.email || \"\"}\r\n              className=\"login-form-control\"\r\n              size=\"lg\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder={strings.login.EMAIL_PLACEHOLDER}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.login.PASSWORD)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={handleInputChange}\r\n              value={inputs.password || \"\"}\r\n              className=\"login-form-control\"\r\n              size=\"lg\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder={strings.login.PASSWORD_PLACEHOLDER}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"login-button\">\r\n            <Button\r\n              className=\"global-button-label\"\r\n              disabled={\r\n                loading ||\r\n                inputs.email === undefined ||\r\n                inputs.email === \"\" ||\r\n                inputs.password === undefined ||\r\n                inputs.password === \"\"\r\n              }\r\n              type=\"submit\"\r\n              variant=\"outline-dark\"\r\n            >\r\n              <div className=\"login-spinner\">\r\n                {loading && (\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n                {loading ? (\r\n                  <div className=\"login-loading-text\">\r\n                    {capitalizeFirst(strings.login.BUTTON_TEXT_LOADING)}\r\n                  </div>\r\n                ) : (\r\n                  <div>{capitalizeFirst(strings.login.BUTTON_TEXT)}</div>\r\n                )}\r\n              </div>\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\" />\r\n      <Row>\r\n        <Col xs={12}>\r\n          <GoogleLogin\r\n            render={(renderProps) => (\r\n              <Button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled || loadingGoogle}\r\n                variant=\"outline-dark\"\r\n                className=\"google-login-button\"\r\n              >\r\n                {!loadingGoogle ? (\r\n                  <div className=\"google-login-icon\" />\r\n                ) : (\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n                {!loadingGoogle ? (\r\n                  <div className=\"google-login-text\">\r\n                    {capitalizeFirst(strings.login.BUTTON_TEXT)}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"google-login-loading\">\r\n                    {capitalizeFirst(strings.login.BUTTON_TEXT_LOADING)}\r\n                  </div>\r\n                )}\r\n              </Button>\r\n            )}\r\n            clientId={process.env.REACT_APP_ID_CLIENT}\r\n            onSuccess={handleGoogleSuccessResponse}\r\n            onFailure={handleGoogleFailureResponse}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { remindMePassword } from \"../../../redux/remindPassword/remindUserPassword/thunk/remindPasswordThunk\";\r\nimport { showRemindPassComponent } from \"../../../redux/remindPassword/showRemindPass/thunk/showRemindPassThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useRemindPassForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { passwordSent } = useSelector((state) => state.remindPass);\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(remindMePassword(inputs.email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputs({});\r\n    if (passwordSent) dispatch(showRemindPassComponent(false));\r\n  }, [passwordSent, dispatch]);\r\n\r\n  return {\r\n    inputs,\r\n    handleInputChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport default useRemindPassForm;\r\n","import React from \"react\";\r\nimport { Row, Col, Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport useRemindPassForm from \"../../hooks/form/remindPass/useRemindPassForm\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { showRemindPassComponent } from \"../../redux/remindPassword/showRemindPass/thunk/showRemindPassThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport \"./remindPassword.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst RemindPasswordForm = () => {\r\n  const { inputs, handleInputChange, handleSubmit } = useRemindPassForm();\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n  });\r\n  const { loading } = useSelector((state) => state.remindPass);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <animated.div style={props}>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicRemindPasswordEmail\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.remindPass.EMAIL)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                onChange={handleInputChange}\r\n                value={inputs.email || \"\"}\r\n                className=\"remindPass-form-control\"\r\n                size=\"lg\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder={strings.remindPass.EMAIL_PLACEHOLDER}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div className=\"remindPass-button\">\r\n              <Button\r\n                className=\"global-button-label\"\r\n                disabled={\r\n                  loading || inputs.email === undefined || inputs.email === \"\"\r\n                }\r\n                type=\"submit\"\r\n                variant=\"outline-dark\"\r\n              >\r\n                <div className=\"remindPass-spinner\">\r\n                  {loading && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                  {loading ? (\r\n                    <div className=\"remindPass-loading-text\">\r\n                      {capitalizeFirst(strings.remindPass.BUTTON_TEXT_LOADING)}\r\n                    </div>\r\n                  ) : (\r\n                    <div>{capitalizeFirst(strings.remindPass.BUTTON_TEXT)}</div>\r\n                  )}\r\n                </div>\r\n              </Button>\r\n              <Button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showRemindPassComponent(false));\r\n                }}\r\n                className=\"global-button-label\"\r\n                variant=\"outline-danger\"\r\n              >\r\n                {capitalizeFirst(strings.remindPass.BUTTON_TEXT_CANCEL)}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default RemindPasswordForm;\r\n","import React, { useEffect } from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showRemindPassComponent } from \"../../redux/remindPassword/showRemindPass/thunk/showRemindPassThunk\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport { useSpring, useTransition, animated } from \"react-spring\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoginForm from \"../../forms/login/LoginForm\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport RemindPasswordForm from \"../../forms/remindPassword/RemindPasswordForm\";\r\nimport \"./login.css\";\r\n\r\nconst Login = ({ match: { path, url, isExact } }) => {\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n  });\r\n  const loginForm = [<LoginForm />];\r\n  const transition = useTransition(loginForm, (loginForm) => loginForm.id, {\r\n    from: { opacity: 0, marginLeft: -100, marginRight: 100 },\r\n    enter: { opacity: 1, marginLeft: 0, marginRight: 0 },\r\n  });\r\n  const { userSignedup } = useSelector((state) => state.signup);\r\n  const { userGoogleSignedup } = useSelector((state) => state.signGoogle);\r\n  const { show } = useSelector((state) => state.isRemindPassFormShown);\r\n  const { passwordSent, remindPassError } = useSelector(\r\n    (state) => state.remindPass\r\n  );\r\n  const { userData, loginError } = useSelector((state) => state.login);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (userData.email !== undefined) history.push(strings.path.RECIPE_BOOK);\r\n  }, [userData, history]);\r\n\r\n  return (\r\n    <animated.div style={props} className=\"login-area\">\r\n      <div className=\"login-first-section\">\r\n        <Navbar path={path} url={url} isExact={isExact} />\r\n        <Row className=\"mb-5\" />\r\n        <Row>\r\n          <Col xs={2} />\r\n          <Col xs={8}>\r\n            <Image\r\n              className=\"login-image\"\r\n              src={require(\"../../assets/imgs/loginret.jpg\")}\r\n            />\r\n          </Col>\r\n          <Col xs={2} />\r\n        </Row>\r\n      </div>\r\n      <div className=\"login-second-section\">\r\n        <Row className=\"mb-4\" />\r\n        <Row>\r\n          <Col xs={6} />\r\n          <Col xs={3}>\r\n            {!show ? (\r\n              <div>\r\n                {transition.map(({ item, key, props }) => (\r\n                  <animated.div key={key} style={props}>\r\n                    {item}\r\n                  </animated.div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Row className=\"mb-5\" />\r\n                <RemindPasswordForm />\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col xs={2}>\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-4\" />\r\n            {!show && (\r\n              <p\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showRemindPassComponent(true));\r\n                }}\r\n                className=\"forgot-password\"\r\n              >\r\n                {capitalizeFirst(strings.login.FORGOT_PASSWORD)}\r\n              </p>\r\n            )}\r\n          </Col>\r\n          <Col xs={1} />\r\n        </Row>\r\n      </div>\r\n      <div className=\"login-third-section\">\r\n        <Row className=\"mb-3\" />\r\n        <Row>\r\n          <Col xs={1} />\r\n          <Col xs={3}>\r\n            <Notification\r\n              notificationMessage={\r\n                userSignedup !== null\r\n                  ? strings.signup.CHECK_EMAIL\r\n                  : remindPassError\r\n                  ? remindPassError\r\n                  : passwordSent\r\n                  ? passwordSent\r\n                  : loginError\r\n                  ? loginError\r\n                  : userGoogleSignedup !== null\r\n                  ? capitalizeFirst(strings.signupGoogle.GOOGLE_USER_CREATED)\r\n                  : null\r\n              }\r\n            />\r\n          </Col>\r\n          <Col xs={8} />\r\n        </Row>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\nimport { signupUser } from \"../../../redux/signup/thunk/SignupThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useSignupForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { userSignedup } = useSelector((state) => state.signup);\r\n\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      signupUser(\r\n        inputs.name,\r\n        inputs.email,\r\n        inputs.confirmEmail,\r\n        inputs.password\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputs({});\r\n  }, [userSignedup]);\r\n\r\n  return { inputs, handleInputChange, handleSubmit };\r\n};\r\n\r\nexport default useSignupForm;\r\n","import { signupGoogleUser } from \"../../../redux/googleSignup/thunk/googleSignupThunk\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useGoogleSignup = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGoogleSuccessResponse = (response) => {\r\n    dispatch(\r\n      signupGoogleUser(\r\n        response.profileObj.name,\r\n        response.profileObj.email,\r\n        response.profileObj.imageUrl,\r\n        response.tokenId\r\n      )\r\n    );\r\n  };\r\n  const handleGoogleFailureResponse = (response) => {\r\n    console.log(response);\r\n  };\r\n  return { handleGoogleSuccessResponse, handleGoogleFailureResponse };\r\n};\r\n\r\nexport default useGoogleSignup;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form, Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport useSignupForm from \"../../hooks/form/signup/useSignupForm\";\r\nimport useGoogleSignup from \"../../hooks/googleButton/signup/useGoogleSignup\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport \"./signupForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst SignupForm = () => {\r\n  const { loading } = useSelector((state) => state.signup);\r\n  const { loadingSignGoogle } = useSelector((state) => state.signGoogle);\r\n  const { inputs, handleInputChange, handleSubmit } = useSignupForm();\r\n  const {\r\n    handleGoogleSuccessResponse,\r\n    handleGoogleFailureResponse,\r\n  } = useGoogleSignup();\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicUserName\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.signup.USER_NAME)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={handleInputChange}\r\n              value={inputs.name || \"\"}\r\n              className=\"signup-form-control\"\r\n              size=\"lg\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder={strings.signup.USER_NAME_PLACEHOLDER}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.signup.EMAIL)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={handleInputChange}\r\n              value={inputs.email || \"\"}\r\n              className=\"signup-form-control\"\r\n              size=\"lg\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"off\"\r\n              placeholder={strings.signup.EMAIL_PLACEHOLDER}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicConfirmEmail\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.signup.CONFIRM_EMAIL)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={handleInputChange}\r\n              value={inputs.confirmEmail || \"\"}\r\n              className=\"signup-form-control\"\r\n              size=\"lg\"\r\n              name=\"confirmEmail\"\r\n              type=\"email\"\r\n              autoComplete=\"off\"\r\n              placeholder={strings.signup.CONFIRM_EMAIL_PLACEHOLDER}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.signup.PASSWORD)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={handleInputChange}\r\n              value={inputs.password || \"\"}\r\n              className=\"signup-form-control\"\r\n              size=\"lg\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder={strings.signup.PASSWORD_PLACEHOLDER}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Button\r\n            disabled={\r\n              loading ||\r\n              inputs.name === undefined ||\r\n              inputs.name === \"\" ||\r\n              inputs.email === undefined ||\r\n              inputs.email === \"\" ||\r\n              inputs.confirmEmail === undefined ||\r\n              inputs.confirmEmail === \"\" ||\r\n              inputs.password === undefined ||\r\n              inputs.password === \"\"\r\n            }\r\n            className=\"global-button-label\"\r\n            type=\"submit\"\r\n            variant=\"outline-dark\"\r\n          >\r\n            <div className=\"signup-spinner\">\r\n              {loading && (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n              {loading ? (\r\n                <div className=\"signup-loading-text\">\r\n                  {capitalizeFirst(strings.signup.BUTTON_TEXT_LOADING)}\r\n                </div>\r\n              ) : (\r\n                <div>{capitalizeFirst(strings.signup.BUTTON_TEXT)}</div>\r\n              )}\r\n            </div>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\" />\r\n      <Row>\r\n        <Col xs={12}>\r\n          <GoogleLogin\r\n            render={(renderProps) => (\r\n              <Button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled || loadingSignGoogle}\r\n                variant=\"outline-dark\"\r\n                className=\"google-signup-button\"\r\n              >\r\n                {!loadingSignGoogle ? (\r\n                  <div className=\"google-signup-icon\" />\r\n                ) : (\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n                {!loadingSignGoogle ? (\r\n                  <div className=\"google-signup-text\">\r\n                    {capitalizeFirst(strings.signupGoogle.BUTTON_TEXT)}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"google-signup-loading\">\r\n                    {capitalizeFirst(strings.signup.BUTTON_TEXT_LOADING)}\r\n                  </div>\r\n                )}\r\n              </Button>\r\n            )}\r\n            clientId={process.env.REACT_APP_ID_CLIENT}\r\n            onSuccess={handleGoogleSuccessResponse}\r\n            onFailure={handleGoogleFailureResponse}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport { useSpring, useTransition, animated } from \"react-spring\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport SignupForm from \"../../forms/signup/SignupForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport \"./signup.css\";\r\nimport { strings } from \"../../strings/Strings\";\r\n\r\nconst Signup = ({ match: { path, url, isExact } }) => {\r\n  const { userSignedup, error } = useSelector((state) => state.signup);\r\n  const { userGoogleSignedup, errorGoogleSignup } = useSelector(\r\n    (state) => state.signGoogle\r\n  );\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n  });\r\n  const signupForm = [<SignupForm />];\r\n  const transition = useTransition(signupForm, (signupForm) => signupForm.id, {\r\n    from: { opacity: 0, marginLeft: -100, marginRight: 100 },\r\n    enter: { opacity: 1, marginLeft: 0, marginRight: 0 },\r\n  });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (userSignedup !== null || userGoogleSignedup !== null)\r\n      history.push(strings.path.LOGIN);\r\n  }, [userSignedup, userGoogleSignedup, history]);\r\n\r\n  return (\r\n    <animated.div style={props} className=\"signup-area\">\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <div className=\"signup-first-section\">\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row>\r\n          <Col xs={10}>\r\n            <Image\r\n              className=\"signup-image\"\r\n              src={require(\"../../assets/imgs/signupret.png\")}\r\n            />\r\n          </Col>\r\n          <Col xs={2} />\r\n        </Row>\r\n      </div>\r\n      <div className=\"signup-second-section\">\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row>\r\n          <Col xs={2} />\r\n          <Col xs={6}>\r\n            {transition.map(({ item, key, props }) => (\r\n              <animated.div key={key} style={props}>\r\n                {item}\r\n              </animated.div>\r\n            ))}\r\n          </Col>\r\n          <Col xs={4} />\r\n        </Row>\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row>\r\n          <Col xs={2} />\r\n          <Col xs={6}>\r\n            <Notification notificationMessage={error || errorGoogleSignup} />\r\n          </Col>\r\n          <Col xs={4} />\r\n        </Row>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { changeRateCommentCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const changeRateComment = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: changeRateCommentCases.RATE_COMMENT_CHANGED,\r\n      payload: bool,\r\n    });\r\n  };\r\n};\r\n","import { strings } from \"../strings/Strings\";\r\n\r\nexport const recipeButtonItemsArray = [\r\n  {\r\n    id: 0,\r\n    name: strings.recipeBook.BUTTON_NEW,\r\n    category: strings.recipeBook.CAT_NEWS,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: strings.recipeBook.BUTTON_LUNCH,\r\n    category: strings.recipeBook.CAT_LUNCH,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: strings.recipeBook.BUTTON_DESSERT,\r\n    category: strings.recipeBook.CAT_DESSERT,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: strings.recipeBook.BUTTON_DRINKS,\r\n    category: strings.recipeBook.CAT_DRINKS,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: strings.recipeBook.BUTTON_EVENING,\r\n    category: strings.recipeBook.CAT_EVENING,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: strings.recipeBook.BUTTON_SALADES,\r\n    category: strings.recipeBook.CAT_SALADES,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: strings.recipeBook.BUTTON_FAST_FOOD,\r\n    category: strings.recipeBook.CAT_FAST_FOOD,\r\n  },\r\n];\r\n\r\nexport const eventButtonItemsArray = [\r\n  {\r\n    id: 0,\r\n    name: strings.myEvents.BUTTON_ALL,\r\n    category: strings.myEvents.CAT_ALL,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: strings.myEvents.BUTTON_MY_EVENTS,\r\n    category: strings.myEvents.CAT_MY_EVENTS,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: strings.myEvents.BUTTON_EVENTS_JOINED,\r\n    category: strings.myEvents.CAT_EVENTS_JOINED,\r\n  },\r\n];\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getRecipe } from \"../../../redux/recipeBook/retrieveRecipe/thunk/retrieveRecipesThunk\";\r\nimport { recipeButtonTurnedOn } from \"../../../redux/recipeBook/recipeButtonTurnedOn/thunk/recipeButtonTurnedOnThunk\";\r\nimport { categorySelected } from \"../../../redux/recipeBook/recipeCategorySelected/thunk/recipeCategorySelectedThunk\";\r\nimport { changeRateComment } from \"../../../redux/recipeBook/changeRateComment/thunk/changeRateCommentThunk\";\r\nimport { recipeButtonItemsArray } from \"../../../shared/buttonItemsArray\";\r\n\r\nconst useRecipeButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialState = () => {\r\n    let buttonInitialStates = [];\r\n    for (let i = 0; i < recipeButtonItemsArray.length; i++) {\r\n      buttonInitialStates.push(false);\r\n    }\r\n    return buttonInitialStates;\r\n  };\r\n\r\n  const [activesClasses, setActive] = useState(initialState());\r\n  const [buttonPressedCount, setButtonPressedCount] = useState(0);\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { recipeButtonId } = useSelector(\r\n    (state) => state.recipeCategorySelected\r\n  );\r\n  const { rateCommentChanged } = useSelector(\r\n    (state) => state.isRateCommentChanged\r\n  );\r\n  const { detailsDataRetrieved } = useSelector(\r\n    (state) => state.isRecipeDetailsShown\r\n  );\r\n  const { searchInputFilled } = useSelector(\r\n    (state) => state.turnOffRecipeButtons\r\n  );\r\n\r\n  const toggleActiveClass = (id, category) => {\r\n    const skip = 1;\r\n    const limit = 30;\r\n    if (id === null && category === null) {\r\n      setActive(initialState());\r\n    } else {\r\n      dispatch(categorySelected(id));\r\n      setActive(\r\n        initialState().map((bool, index) => (index === id ? !bool : bool))\r\n      );\r\n      if (userData.email) {\r\n        dispatch(\r\n          getRecipe(category, userData._id, userData.email, skip, limit)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonPressedCount(0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(recipeButtonTurnedOn(buttonPressedCount));\r\n  }, [buttonPressedCount, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!detailsDataRetrieved.title && !searchInputFilled)\r\n      toggleActiveClass(\r\n        recipeButtonItemsArray[recipeButtonId].id,\r\n        recipeButtonItemsArray[recipeButtonId].category\r\n      );\r\n  }, [detailsDataRetrieved, recipeButtonId, searchInputFilled]);\r\n\r\n  useEffect(() => {\r\n    if (searchInputFilled) {\r\n      toggleActiveClass(null, null);\r\n    } else {\r\n      toggleActiveClass(\r\n        recipeButtonItemsArray[recipeButtonId].id,\r\n        recipeButtonItemsArray[recipeButtonId].category\r\n      );\r\n    }\r\n    return () => {\r\n      dispatch(changeRateComment(false));\r\n    };\r\n  }, [searchInputFilled, recipeButtonId, rateCommentChanged, dispatch]);\r\n\r\n  return {\r\n    activesClasses,\r\n    toggleActiveClass,\r\n    buttonPressedCount,\r\n    setButtonPressedCount,\r\n  };\r\n};\r\n\r\nexport default useRecipeButton;\r\n","import { recipeButtonTurnedOnCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const recipeButtonTurnedOn = (count) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: recipeButtonTurnedOnCases.BUTTON_PRESSES,\r\n      payload: count,\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport useRecipeButton from \"../../hooks/screen/recipeBook/useRecipeButton\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport { recipeButtonItemsArray } from \"../../shared/buttonItemsArray\";\r\nimport \"./recipeBook.css\";\r\n\r\nconst MakeRecipeButton = () => {\r\n  const {\r\n    activesClasses,\r\n    toggleActiveClass,\r\n    buttonPressedCount,\r\n    setButtonPressedCount,\r\n  } = useRecipeButton();\r\n\r\n  return recipeButtonItemsArray.map((buttonItem) => (\r\n    <div key={buttonItem.id}>\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={10}>\r\n          <Button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setButtonPressedCount(buttonPressedCount + 1);\r\n              toggleActiveClass(buttonItem.id, buttonItem.category);\r\n            }}\r\n            variant=\"dark\"\r\n            className={\r\n              activesClasses[buttonItem.id]\r\n                ? \"recipe-button-active\"\r\n                : \"recipebook-knob-button\"\r\n            }\r\n          >\r\n            <div className=\"recipe-button-icon\" />\r\n            <div className=\"recipe-button-text\">\r\n              {capitalize(buttonItem.name)}\r\n            </div>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\" />\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default MakeRecipeButton;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { strings } from \"../strings/Strings\";\r\nimport \"../views/recipeBook/recipeBook.css\";\r\nimport \"../forms/recipeBook/RateAndComment/rateAndComment.css\";\r\n\r\nexport const initializeStarRating = (place) => {\r\n  const stars = [];\r\n  for (let i = 0; i < 5; i++)\r\n    stars.push(\r\n      <FontAwesomeIcon\r\n        className={\r\n          place === strings.rating.COMMENT_RATE\r\n            ? \"recipeDetails-comments-stars-detail\"\r\n            : place === strings.rating.RATE_AND_COMMENT\r\n            ? \"rate-comment-stars\"\r\n            : place === strings.rating.RATING_STARS\r\n            ? \"recipeDetails-comments-stars\"\r\n            : place === strings.rating.LIST\r\n            ? \"recipeDetails-comments-stars-active-list\"\r\n            : place === strings.rating.DETAILS\r\n            ? \"recipeDetails-comments-stars-active-details\"\r\n            : null\r\n        }\r\n        icon={faStar}\r\n      />\r\n    );\r\n  return stars;\r\n};\r\n","import React from \"react\";\r\nimport { initializeStarRating } from \"./initializeStarRating\";\r\nimport { strings } from \"../strings/Strings\";\r\nimport \"../views/recipeBook/recipeBook.css\";\r\n\r\nconst RatingStars = () => {\r\n  const stars = initializeStarRating(strings.rating.RATING_STARS);\r\n\r\n  return stars.map((star, index) => <div key={index}>{star}</div>);\r\n};\r\n\r\nexport default RatingStars;\r\n","import React from \"react\";\r\nimport { initializeStarRating } from \"./initializeStarRating\";\r\nimport \"../views/recipeBook/recipeBook.css\";\r\n\r\nconst RatingActiveStars = ({ place }) => {\r\n  const stars = initializeStarRating(place);\r\n\r\n  return stars.map((star, index) => <div key={index}>{star}</div>);\r\n};\r\n\r\nexport default RatingActiveStars;\r\n","export const getAverageRating = (data) => {\r\n  const rates = data.map((item) => item.rate.value);\r\n  const average =\r\n    rates.length > 0 &&\r\n    (rates.reduce((a, b) => a + b) / rates.length).toFixed(2);\r\n\r\n  return `${((average * 100) / 5).toFixed()}%`;\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport Img from \"react-image\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faClock } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createDate } from \"../../util/Util\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport * as timeago from \"timeago.js\";\r\nimport pl from \"timeago.js/lib/lang/pl\";\r\nimport RatingStars from \"../../shared/RatingStars\";\r\nimport RatingActiveStars from \"../../shared/RatingActiveStars\";\r\nimport { getAverageRating } from \"../../shared/getAverageRating\";\r\nimport { retrieveRecipeDetails } from \"../../redux/recipeBook/showRecipeDetails/thunk/showRecipeDetailsThunk\";\r\nimport { changeRecipeListItem } from \"../../redux/recipeBook/changeRecipeListItem/thunk/changeRecipeListItemThunk\";\r\nimport \"./recipeBook.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst RecipesList = () => {\r\n  const dispatch = useDispatch();\r\n  const { loadingRecipes, recipesRetrieved, recipesError } = useSelector(\r\n    (state) => state.recipeBook\r\n  );\r\n  timeago.register(\"pl\", pl);\r\n  return loadingRecipes ? (\r\n    <div className=\"recipesList-loading-area\">\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"light\" />\r\n    </div>\r\n  ) : recipesError ? (\r\n    <div className=\"recipesList-item-norecipes\">{recipesError}</div>\r\n  ) : (\r\n    <div className=\"recipesList-main-area\">\r\n      {recipesRetrieved !== null &&\r\n        recipesRetrieved.map((recipeRetrieved, index) => (\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(changeRecipeListItem(true));\r\n              dispatch(retrieveRecipeDetails(recipeRetrieved));\r\n            }}\r\n            className=\"recipesList-item\"\r\n            key={index}\r\n          >\r\n            <Row>\r\n              <Col xs={3}>\r\n                <Img\r\n                  className=\"recipesList-item-picture\"\r\n                  src={\r\n                    recipeRetrieved.picture\r\n                      ? strings.path.IMAGE_REQUEST + recipeRetrieved.picture\r\n                      : require(\"../../assets/imgs/panret.jpg\")\r\n                  }\r\n                  loader={\r\n                    <div className=\"global-list-picture-loading-box\">\r\n                      <Spinner animation=\"border\" variant=\"info\" />\r\n                    </div>\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col xs={9}>\r\n                <Row>\r\n                  <Col xs={7} />\r\n                  <Col xs={5}>\r\n                    <div>\r\n                      <TimeAgo\r\n                        className=\"recipesList-item-timeago\"\r\n                        datetime={createDate(recipeRetrieved.date)}\r\n                        locale=\"pl\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"recipesList-item-title\">\r\n                  {recipeRetrieved.title}\r\n                </div>\r\n                <div className=\"recipesList-item-rate-outter\">\r\n                  <RatingStars />\r\n                  <div\r\n                    style={{\r\n                      width: getAverageRating(recipeRetrieved.comments),\r\n                    }}\r\n                    className=\"recipesList-item-rate-inner\"\r\n                  >\r\n                    <RatingActiveStars place={strings.rating.LIST} />\r\n                  </div>\r\n                </div>\r\n                <div style={{ height: 5 }} />\r\n                <div className=\"recipesList-item-author\">\r\n                  <div className=\"recipesList-item-icon\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                  </div>\r\n                  <div>{recipeRetrieved.author.name}</div>\r\n                </div>\r\n                <div className=\"recipesList-item-time\">\r\n                  <div className=\"recipesList-item-icon\">\r\n                    <FontAwesomeIcon icon={faClock} />\r\n                  </div>\r\n                  <div>{recipeRetrieved.cookTime} min.</div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipesList;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { initializeStarRating } from \"../../shared/initializeStarRating\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport \"./recipeBook.css\";\r\n\r\nconst CommentRate = ({ rate }) => {\r\n  const stars = initializeStarRating(strings.rating.COMMENT_RATE);\r\n\r\n  for (let i = 0; i < rate; i++) {\r\n    stars[i] = (\r\n      <FontAwesomeIcon\r\n        className=\"recipeDetails-comments-stars-active-details\"\r\n        icon={faStar}\r\n      />\r\n    );\r\n  }\r\n\r\n  return stars.map((star, index) => <div key={index}>{star}</div>);\r\n};\r\n\r\nexport default CommentRate;\r\n","import { showEmojisCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showEmojis = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showEmojisCases.EMOJIS_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\nimport {\r\n  addRateAndComment,\r\n  editRecipeRateAndComment,\r\n} from \"../../../redux/recipeBook/showRecipeDetails/thunk/showRecipeDetailsThunk\";\r\nimport { showEmojis } from \"../../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { toEditRateCommentClearState } from \"../../../redux/recipeBook/toEditRecipeRateComment/thunk/toEditRateCommentThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useRateAndComment = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [rate, setRate] = useState(\"\");\r\n  const [rateHover, setRateHover] = useState(\"\");\r\n  const [inputs, setInputs] = useState({});\r\n  const [inputHasFocus, setInputHasFocus] = useState(\"\");\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { rateAndComment } = useSelector((state) => state.toEditRateComment);\r\n  const { recipeListItemChanged } = useSelector(\r\n    (state) => state.isRecipeListItemChanged\r\n  );\r\n  const { rateCommentChanged } = useSelector(\r\n    (state) => state.isRateCommentChanged\r\n  );\r\n  const { emojiCharacter } = useSelector((state) => state.selectedEmoji);\r\n\r\n  const handleMouseEnter = (e) => {\r\n    setRateHover(e.currentTarget.dataset.value);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setRateHover(\"\");\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setRate(e.currentTarget.dataset.value);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: capitalizeFirst(e.target.value),\r\n    }));\r\n  };\r\n  const handleFocus = (e) => {\r\n    setInputHasFocus(e.target.name);\r\n  };\r\n  const handleBlur = (e) => {\r\n    if (\r\n      (e.relatedTarget &&\r\n        e.relatedTarget.className &&\r\n        !e.relatedTarget.className.includes(\"btn\")) ||\r\n      e.relatedTarget === null\r\n    ) {\r\n      setInputHasFocus(\"\");\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = (recipeId) => {\r\n    if (rateAndComment.commentValue) {\r\n      dispatch(\r\n        editRecipeRateAndComment(\r\n          recipeId,\r\n          rateAndComment.rateId,\r\n          parseInt(rate),\r\n          rateAndComment.commentId,\r\n          inputs.comment,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addRateAndComment(\r\n          recipeId,\r\n          parseInt(rate),\r\n          inputs.comment,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emojiCharacter) {\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        [inputHasFocus]: inputs[inputHasFocus].concat(emojiCharacter),\r\n      }));\r\n      dispatch(showEmojis(false));\r\n    }\r\n  }, [emojiCharacter, inputHasFocus, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (rateCommentChanged) {\r\n      setRate(\"\");\r\n      setInputs({});\r\n      dispatch(toEditRateCommentClearState());\r\n    }\r\n  }, [rateCommentChanged, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (rateAndComment.rateValue) setRate(rateAndComment.rateValue);\r\n    if (rateAndComment.commentValue)\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        comment: rateAndComment.commentValue,\r\n      }));\r\n    if (recipeListItemChanged) {\r\n      dispatch(toEditRateCommentClearState());\r\n      setRate(\"\");\r\n      setInputs({});\r\n    }\r\n  }, [\r\n    rateAndComment.rateValue,\r\n    rateAndComment.commentValue,\r\n    recipeListItemChanged,\r\n    dispatch,\r\n  ]);\r\n\r\n  return {\r\n    rate,\r\n    rateHover,\r\n    inputs,\r\n    inputHasFocus,\r\n    handleClick,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleInputChange,\r\n    handleOnSubmit,\r\n    handleFocus,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useRateAndComment;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport useRateAndComment from \"../../../hooks/form/rateAndComment/useRateAndComment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGrin } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { initializeStarRating } from \"../../../shared/initializeStarRating\";\r\nimport { showEmojis } from \"../../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { toEditRateCommentClearState } from \"../../../redux/recipeBook/toEditRecipeRateComment/thunk/toEditRateCommentThunk\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\nimport \"./rateAndComment.css\";\r\nimport \"../../../shared/global.css\";\r\n\r\nconst RateAndComment = ({ recipeId }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    rate,\r\n    rateHover,\r\n    inputs,\r\n    inputHasFocus,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleClick,\r\n    handleInputChange,\r\n    handleOnSubmit,\r\n    handleFocus,\r\n    handleBlur,\r\n  } = useRateAndComment();\r\n\r\n  const { detailsLoading } = useSelector((state) => state.isRecipeDetailsShown);\r\n  const { rateAndComment } = useSelector((state) => state.toEditRateComment);\r\n  const stars = initializeStarRating(strings.rating.RATE_AND_COMMENT);\r\n  for (let i = 0; i < rate; i++) {\r\n    stars[i] = (\r\n      <FontAwesomeIcon className=\"rate-comment-stars-active\" icon={faStar} />\r\n    );\r\n  }\r\n  for (let i = 0; i < rateHover; i++) {\r\n    stars[i] = (\r\n      <FontAwesomeIcon className=\"rate-comment-stars-active\" icon={faStar} />\r\n    );\r\n    for (let i = rateHover; i < stars.length; i++) {\r\n      stars[i] = (\r\n        <FontAwesomeIcon className=\"rate-comment-stars\" icon={faStar} />\r\n      );\r\n    }\r\n  }\r\n  const ratingStars = stars.map((ratingStar, index) => (\r\n    <div\r\n      className=\"star\"\r\n      onClick={handleClick}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      key={index}\r\n      data-value={index + 1}\r\n    >\r\n      {ratingStar}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={1} />\r\n        <Col className=\"rate-note-center\" xs={1}>\r\n          <div className=\"rate-note-text\">\r\n            {capitalizeFirst(strings.rating.NOTE)}\r\n          </div>\r\n        </Col>\r\n        <Col xs={2} />\r\n        <Col xs={4}>\r\n          <div className=\"rate-stars-box\">{ratingStars}</div>\r\n        </Col>\r\n        <Col xs={4} />\r\n      </Row>\r\n      <Row className=\"mb-4\" />\r\n      <Row>\r\n        <Col xs={1} />\r\n        <Col xs={10}>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleOnSubmit(recipeId);\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Form.Group controlId=\"formBasicRateComment\">\r\n                  <Form.Label className=\"rate-form-label\">\r\n                    {capitalizeFirst(strings.rating.COMMENT)}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    onChange={handleInputChange}\r\n                    value={inputs.comment || \"\"}\r\n                    onFocus={handleFocus}\r\n                    onBlur={handleBlur}\r\n                    className=\"rate-form-control\"\r\n                    as=\"textarea\"\r\n                    rows=\"4\"\r\n                    size=\"lg\"\r\n                    name=\"comment\"\r\n                    type=\"text\"\r\n                    placeholder={strings.rating.COMMENT}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\" />\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={10}>\r\n                {!rateAndComment.commentValue ? (\r\n                  <div className=\"rate-button\">\r\n                    <div className=\"global-emoji-wrapper\">\r\n                      <Button\r\n                        className=\"rate-button-send\"\r\n                        disabled={\r\n                          detailsLoading ||\r\n                          inputs.comment === undefined ||\r\n                          inputs.comment === \"\" ||\r\n                          rate === \"\"\r\n                        }\r\n                        type=\"submit\"\r\n                        variant=\"outline-dark\"\r\n                      >\r\n                        <div className=\"rate-spinner\">\r\n                          {detailsLoading && (\r\n                            <Spinner\r\n                              as=\"span\"\r\n                              animation=\"border\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                            />\r\n                          )}\r\n                          {detailsLoading ? (\r\n                            <div className=\"rate-loading-text\">\r\n                              {capitalizeFirst(\r\n                                strings.rating.BUTTON_TEXT_LOADING\r\n                              )}\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              {capitalizeFirst(strings.rating.BUTTON_TEXT)}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"global-emoji-button\"\r\n                        disabled={\r\n                          inputHasFocus !== \"comment\" ||\r\n                          inputs.comment === \"\" ||\r\n                          inputs.comment === undefined\r\n                        }\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(showEmojis(true));\r\n                        }}\r\n                        size=\"sm\"\r\n                        variant=\"light\"\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          className=\"global-emoji-button-icon\"\r\n                          icon={faGrin}\r\n                        />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"rate-button\">\r\n                    <div className=\"global-emoji-wrapper\">\r\n                      <Button\r\n                        className=\"rate-button-send\"\r\n                        disabled={\r\n                          detailsLoading ||\r\n                          inputs.comment === undefined ||\r\n                          inputs.comment === \"\" ||\r\n                          rate === \"\"\r\n                        }\r\n                        type=\"submit\"\r\n                        variant=\"outline-dark\"\r\n                      >\r\n                        <div className=\"rate-spinner\">\r\n                          {detailsLoading && (\r\n                            <Spinner\r\n                              as=\"span\"\r\n                              animation=\"border\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                            />\r\n                          )}\r\n                          {detailsLoading ? (\r\n                            <div className=\"rate-loading-text\">\r\n                              {capitalizeFirst(\r\n                                strings.rating.BUTTON_EDIT_TEXT_LOADING\r\n                              )}\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              {capitalizeFirst(strings.rating.BUTTON_EDIT_TEXT)}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"global-emoji-button\"\r\n                        disabled={\r\n                          inputHasFocus !== \"comment\" ||\r\n                          inputs.comment === \"\" ||\r\n                          inputs.comment === undefined\r\n                        }\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(showEmojis(true));\r\n                        }}\r\n                        size=\"sm\"\r\n                        variant=\"light\"\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          className=\"global-emoji-button-icon\"\r\n                          icon={faGrin}\r\n                        />\r\n                      </Button>\r\n                    </div>\r\n                    <Button\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(toEditRateCommentClearState());\r\n                      }}\r\n                      className=\"rate-button-send\"\r\n                      variant=\"outline-secondary\"\r\n                    >\r\n                      {capitalizeFirst(strings.rating.BUTTON_CANCEL_TEXT)}\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n        <Col xs={1} />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RateAndComment;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toEditRateComment } from \"../../../redux/recipeBook/toEditRecipeRateComment/thunk/toEditRateCommentThunk\";\r\nimport { changeRecipeListItem } from \"../../../redux/recipeBook/changeRecipeListItem/thunk/changeRecipeListItemThunk\";\r\nimport {\r\n  recipeDetailsClearState,\r\n  removeRecipeRateAndComment,\r\n  followAuthor,\r\n  unfollowAuthor,\r\n} from \"../../../redux/recipeBook/showRecipeDetails/thunk/showRecipeDetailsThunk\";\r\n\r\nconst useRecipeDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const [editShow, setEditShow] = useState(false);\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n\r\n  const handleMouseEnter = () => {\r\n    setEditShow(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setEditShow(false);\r\n  };\r\n\r\n  const handleEditClick = (data) => {\r\n    dispatch(changeRecipeListItem(false));\r\n    dispatch(toEditRateComment(data));\r\n  };\r\n\r\n  const handleTrashClick = (rateId, commentId, recipeId, commentItemId) => {\r\n    if (userData.email) {\r\n      dispatch(\r\n        removeRecipeRateAndComment(\r\n          rateId,\r\n          commentId,\r\n          recipeId,\r\n          commentItemId,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleFollowRecipeAuthor = (authorId, recipeId) => {\r\n    dispatch(followAuthor(authorId, recipeId, userData._id, userData.email));\r\n  };\r\n\r\n  const handleUnfollowRecipeAuthor = (authorId, recipeId) => {\r\n    dispatch(unfollowAuthor(authorId, recipeId, userData._id, userData.email));\r\n  };\r\n\r\n  const handleClearDetailsState = () => {\r\n    dispatch(recipeDetailsClearState());\r\n  };\r\n  return {\r\n    editShow,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleEditClick,\r\n    handleTrashClick,\r\n    handleClearDetailsState,\r\n    handleFollowRecipeAuthor,\r\n    handleUnfollowRecipeAuthor,\r\n  };\r\n};\r\n\r\nexport default useRecipeDetails;\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner, Button } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faUserCircle,\r\n  faUserPlus,\r\n  faUserMinus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport Img from \"react-image\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport * as timeago from \"timeago.js\";\r\nimport pl from \"timeago.js/lib/lang/pl\";\r\nimport { createDate } from \"../../util/Util\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CommentRate from \"./CommentRate\";\r\nimport RatingStars from \"../../shared/RatingStars\";\r\nimport RatingActiveStars from \"../../shared/RatingActiveStars\";\r\nimport RateAndComment from \"../../forms/recipeBook/RateAndComment/RateAndComment\";\r\nimport { getAverageRating } from \"../../shared/getAverageRating\";\r\nimport useRecipeDetails from \"../../hooks/screen/recipeDetails/useRecipeDetails\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport \"./recipeBook.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst RecipeDetails = () => {\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 300 },\r\n    from: { opacity: 0 },\r\n  });\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { rateAndComment } = useSelector((state) => state.toEditRateComment);\r\n  const { detailsLoading, detailsDataRetrieved } = useSelector(\r\n    (state) => state.isRecipeDetailsShown\r\n  );\r\n\r\n  const recipeCommented =\r\n    detailsDataRetrieved.comments.length > 0 &&\r\n    detailsDataRetrieved.comments.map((comment) => comment.commentator.email);\r\n  const recipeFollowed =\r\n    detailsDataRetrieved.author.followers.length > 0 &&\r\n    detailsDataRetrieved.author.followers.map(\r\n      (follower) => follower && follower.email\r\n    );\r\n\r\n  const {\r\n    editShow,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleEditClick,\r\n    handleTrashClick,\r\n    handleClearDetailsState,\r\n    handleFollowRecipeAuthor,\r\n    handleUnfollowRecipeAuthor,\r\n  } = useRecipeDetails();\r\n\r\n  timeago.register(\"pl\", pl);\r\n\r\n  return (\r\n    <animated.div style={props}>\r\n      <Row>\r\n        <Col xs={1} />\r\n        <Col xs={6}>\r\n          <h1 className=\"recipeDetails-title\">{detailsDataRetrieved.title}</h1>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <Img\r\n            className=\"recipeDetails-author-photo\"\r\n            src={\r\n              userGooglePhoto.some(\r\n                (element) =>\r\n                  detailsDataRetrieved.author.photo &&\r\n                  detailsDataRetrieved.author.photo.includes(element)\r\n              )\r\n                ? detailsDataRetrieved.author.photo\r\n                : !userGooglePhoto.some(\r\n                    (element) =>\r\n                      detailsDataRetrieved.author.photo &&\r\n                      detailsDataRetrieved.author.photo.includes(element)\r\n                  ) && detailsDataRetrieved.author.photo\r\n                ? strings.path.IMAGE_REQUEST + detailsDataRetrieved.author.photo\r\n                : require(\"../../assets/imgs/cookerret.png\")\r\n            }\r\n            loader={<Spinner animation=\"border\" variant=\"dark\" />}\r\n          />\r\n        </Col>\r\n        <Col xs={2}>\r\n          <div className=\"recipeDetails-rate-outter\">\r\n            <RatingStars />\r\n            <div\r\n              style={{ width: getAverageRating(detailsDataRetrieved.comments) }}\r\n              className=\"recipeDetails-rate-inner\"\r\n            >\r\n              <RatingActiveStars place={strings.rating.DETAILS} />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleClearDetailsState();\r\n            }}\r\n            className=\"recipeDetails-close-icon\"\r\n          >\r\n            <FontAwesomeIcon icon={faTimesCircle} />\r\n          </div>\r\n        </Col>\r\n        <Col xs={1} />\r\n      </Row>\r\n      <Row className=\"mb-2\" />\r\n      <ScrollArea smoothScrolling={true} className=\"recipeDetails-main\">\r\n        <div>\r\n          <Row className=\"mb-1\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={3}>\r\n              <Button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  (recipeFollowed &&\r\n                    !recipeFollowed.some((email) =>\r\n                      userData.email.includes(email)\r\n                    )) ||\r\n                  !recipeFollowed\r\n                    ? handleFollowRecipeAuthor(\r\n                        detailsDataRetrieved.author._id,\r\n                        detailsDataRetrieved._id\r\n                      )\r\n                    : handleUnfollowRecipeAuthor(\r\n                        detailsDataRetrieved.author._id,\r\n                        detailsDataRetrieved._id\r\n                      );\r\n                }}\r\n                disabled={userData.email === detailsDataRetrieved.author.email}\r\n                className=\"recipeDetails-follow-button\"\r\n                variant=\"dark\"\r\n              >\r\n                <div className=\"myrecipes-form-spinner\">\r\n                  {detailsLoading && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                {detailsLoading ? (\r\n                  <div className=\"myrecipes-form-button-loading\">\r\n                    {capitalizeFirst(strings.recipeBookDetails.FOLLOW_LOADING)}\r\n                  </div>\r\n                ) : (recipeFollowed &&\r\n                    !recipeFollowed.some((email) =>\r\n                      userData.email.includes(email)\r\n                    )) ||\r\n                  !recipeFollowed ? (\r\n                  <>\r\n                    <FontAwesomeIcon\r\n                      className=\"myrecipes-preview-button-icon\"\r\n                      icon={faUserPlus}\r\n                    />\r\n                    <div className=\"myrecipes-button-text\">\r\n                      {capitalizeFirst(strings.recipeBookDetails.FOLLOW)}\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FontAwesomeIcon\r\n                      className=\"myrecipes-preview-button-icon\"\r\n                      icon={faUserMinus}\r\n                    />\r\n                    <div className=\"myrecipes-button-text\">\r\n                      {capitalizeFirst(strings.recipeBookDetails.UNFOLLOW)}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </Col>\r\n            <Col xs={8} />\r\n          </Row>\r\n          <Row className=\"mb-3\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={5}>\r\n              <Img\r\n                className=\"recipeDetails-picture\"\r\n                src={\r\n                  detailsDataRetrieved.picture\r\n                    ? strings.path.IMAGE_REQUEST + detailsDataRetrieved.picture\r\n                    : require(\"../../assets/imgs/panret.jpg\")\r\n                }\r\n                loader={\r\n                  <div className=\"global-preview-picture-loading-box\">\r\n                    <Spinner animation=\"border\" variant=\"dark\" />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n            <Col xs={5}>\r\n              <div className=\"recipeDetails-ingredients-text\">\r\n                {capitalizeFirst(strings.recipeBookDetails.INGREDIENTS)}\r\n              </div>\r\n              <div style={{ height: 5 }} />\r\n              {detailsDataRetrieved.ingredients.map((ingredient, index) => (\r\n                <div className=\"recipeDetails-ingredients-item\" key={index}>\r\n                  - {ingredient}\r\n                </div>\r\n              ))}\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-3\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              <div className=\"recipeDetails-ingredients-text\">\r\n                {capitalizeFirst(strings.recipeBookDetails.DESCRIBE)}\r\n              </div>\r\n              <div style={{ height: 10 }} />\r\n              <div className=\"recipeDetails-ingredients-description\">\r\n                {detailsDataRetrieved.description}\r\n              </div>\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              {detailsDataRetrieved.video && (\r\n                <div className=\"recipeDetails-player-wrapper\">\r\n                  <ReactPlayer\r\n                    className=\"recipeDetails-player\"\r\n                    url={detailsDataRetrieved.video}\r\n                    controls={true}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              {((recipeCommented &&\r\n                !recipeCommented.some((email) =>\r\n                  userData.email.includes(email)\r\n                ) &&\r\n                detailsDataRetrieved.author.email !== userData.email) ||\r\n                (!recipeCommented &&\r\n                  detailsDataRetrieved.author.email !== userData.email) ||\r\n                rateAndComment.commentValue) && (\r\n                <RateAndComment recipeId={detailsDataRetrieved._id} />\r\n              )}\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              {detailsDataRetrieved.comments.map((item, index) => (\r\n                <div className=\"recipeDetails-comments-area\" key={index}>\r\n                  {item.commentator.photo ? (\r\n                    <Img\r\n                      className=\"recipeDetails-comments-photo\"\r\n                      src={\r\n                        userGooglePhoto.some(\r\n                          (element) =>\r\n                            item.commentator.photo &&\r\n                            item.commentator.photo.includes(element)\r\n                        )\r\n                          ? item.commentator.photo\r\n                          : !userGooglePhoto.some(\r\n                              (element) =>\r\n                                item.commentator.photo &&\r\n                                item.commentator.photo.includes(element)\r\n                            ) && item.commentator.photo\r\n                          ? strings.path.IMAGE_REQUEST + item.commentator.photo\r\n                          : null\r\n                      }\r\n                      loader={\r\n                        <Spinner animation=\"border\" size=\"sm\" variant=\"dark\" />\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <FontAwesomeIcon\r\n                      className=\"recipeDetails-comments-icon\"\r\n                      icon={faUserCircle}\r\n                    />\r\n                  )}\r\n                  <div\r\n                    onMouseEnter={\r\n                      item.commentator.email === userData.email\r\n                        ? handleMouseEnter\r\n                        : null\r\n                    }\r\n                    onMouseLeave={\r\n                      item.commentator.email === userData.email\r\n                        ? handleMouseLeave\r\n                        : null\r\n                    }\r\n                    className=\"recipeDetails-comments-content-area\"\r\n                  >\r\n                    <div className=\"recipeDetails-comments-author\">\r\n                      {item.commentator.name}\r\n                      <TimeAgo\r\n                        className=\"recipeDetails-comments-timeago\"\r\n                        datetime={createDate(item.comment.date)}\r\n                        locale=\"pl\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"recipeDetails-comments-rate\">\r\n                      <CommentRate rate={item.rate.value} />\r\n                    </div>\r\n                    <div style={{ height: 5 }} />\r\n                    <div className=\"recipeDetails-comments-content\">\r\n                      {item.comment.content}\r\n                    </div>\r\n                  </div>\r\n                  {editShow && (\r\n                    <div\r\n                      className=\"recipeDetails-comments-edit-box\"\r\n                      onMouseEnter={handleMouseEnter}\r\n                      onMouseLeave={handleMouseLeave}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleEditClick({\r\n                            rateId: item.rate._id,\r\n                            rateValue: item.rate.value,\r\n                            commentId: item.comment._id,\r\n                            commentValue: item.comment.content,\r\n                          });\r\n                        }}\r\n                        className=\"recipeDetails-comments-edit-icon\"\r\n                        icon={faEdit}\r\n                      />\r\n                      {!detailsLoading ? (\r\n                        <FontAwesomeIcon\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            handleTrashClick(\r\n                              item.rate._id,\r\n                              item.comment._id,\r\n                              detailsDataRetrieved._id,\r\n                              item._id\r\n                            );\r\n                          }}\r\n                          className=\"recipeDetails-comments-trash-icon\"\r\n                          icon={faTrash}\r\n                        />\r\n                      ) : (\r\n                        <Spinner animation=\"border\" size=\"sm\" variant=\"dark\" />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n        </div>\r\n      </ScrollArea>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import { turnOffRecipeButtonsCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const turnOffRecipeButtons = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: turnOffRecipeButtonsCases.SEARCH_INPUT_FILLED,\r\n      payload: bool,\r\n    });\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { turnOffRecipeButtons } from \"../../../redux/recipeBook/turnOffRecipeButtons/thunk/turnOffRecipeButtonsThunk\";\r\nimport { searchRecipe } from \"../../../redux/recipeBook/retrieveRecipe/thunk/retrieveRecipesThunk\";\r\nimport { changeRateComment } from \"../../../redux/recipeBook/changeRateComment/thunk/changeRateCommentThunk\";\r\n\r\nconst useSearchRecipe = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { recipeButtonPressed } = useSelector(\r\n    (state) => state.recipeButtonTurnedOn\r\n  );\r\n  const { rateCommentChanged } = useSelector(\r\n    (state) => state.isRateCommentChanged\r\n  );\r\n  const { searchInputFilled } = useSelector(\r\n    (state) => state.turnOffRecipeButtons\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputs.recipe === \"\" || inputs.recipe === undefined) {\r\n      dispatch(turnOffRecipeButtons(false));\r\n    } else {\r\n      dispatch(turnOffRecipeButtons(true));\r\n      if (userData.email) {\r\n        dispatch(searchRecipe(inputs.recipe, userData._id, userData.email));\r\n      }\r\n    }\r\n  }, [inputs.recipe, userData._id, userData.email, dispatch]);\r\n\r\n  useEffect(() => {\r\n    setInputs({});\r\n    return () => dispatch(turnOffRecipeButtons(false));\r\n  }, [recipeButtonPressed, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (searchInputFilled) {\r\n      if (userData.email) {\r\n        dispatch(searchRecipe(inputs.recipe, userData._id, userData.email));\r\n      }\r\n    }\r\n    return () => {\r\n      dispatch(changeRateComment(false));\r\n    };\r\n  }, [\r\n    searchInputFilled,\r\n    rateCommentChanged,\r\n    userData._id,\r\n    userData.email,\r\n    inputs.recipe,\r\n    dispatch,\r\n  ]);\r\n\r\n  return { inputs, handleInputChange };\r\n};\r\n\r\nexport default useSearchRecipe;\r\n","import React from \"react\";\r\nimport { Row, Col, Form, InputGroup } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport useSearchRecipe from \"../../../hooks/form/searchRecipe/useSearchRecipe\";\r\nimport \"./searchRecipeForm.css\";\r\n\r\nconst SearchRecipeForm = () => {\r\n  const { inputs, handleInputChange } = useSearchRecipe();\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicSearchRecipeName\">\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text className=\"searchrecipe-icon-box\">\r\n                    <FontAwesomeIcon\r\n                      className=\"searchrecipe-icon\"\r\n                      icon={faSearch}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  onChange={handleInputChange}\r\n                  value={inputs.recipe || \"\"}\r\n                  className=\"searchrecipe-form-control\"\r\n                  size=\"sm\"\r\n                  name=\"recipe\"\r\n                  type=\"text\"\r\n                  placeholder={strings.searchRecipe.SEARCH}\r\n                ></Form.Control>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchRecipeForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showEmojis } from \"../../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport {\r\n  selectEmoji,\r\n  selectEmojiClearState,\r\n} from \"../../../redux/emoji/selectEmoji/thunk/selectEmojiThunk\";\r\nimport { strings } from \"../../../strings/Strings\";\r\n\r\nconst useEmoji = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const categories = [\r\n    strings.emojis.categories.EMOTIONS,\r\n    strings.emojis.categories.BODY,\r\n    strings.emojis.categories.ANIMALS,\r\n    strings.emojis.categories.FOOD,\r\n    strings.emojis.categories.TRAVEL,\r\n    strings.emojis.categories.ACTIVITIES,\r\n    strings.emojis.categories.OBJECTS,\r\n    strings.emojis.categories.SYMBOLS,\r\n    strings.emojis.categories.FLAGS,\r\n  ];\r\n\r\n  const categories_eng = [\r\n    strings.emojis.categories_eng.EMOTIONS,\r\n    strings.emojis.categories_eng.BODY,\r\n    strings.emojis.categories_eng.ANIMALS,\r\n    strings.emojis.categories_eng.FOOD,\r\n    strings.emojis.categories_eng.TRAVEL,\r\n    strings.emojis.categories_eng.ACTIVITIES,\r\n    strings.emojis.categories_eng.OBJECTS,\r\n    strings.emojis.categories_eng.SYMBOLS,\r\n    strings.emojis.categories_eng.FLAGS,\r\n  ];\r\n\r\n  const [categoryIndex, setCategoryIndex] = useState(0);\r\n  const [emojisFiltered, setEmojisFiltered] = useState([]);\r\n  const [emojiFilteredBySubGroup, setEmojiFilteredBySubGroup] = useState({});\r\n  const [selectedEmoji, setSelectedEmoji] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { emojisAll, emojiCategories } = useSelector((state) => state.emojis);\r\n\r\n  const handleSelectCategory = (catIndex) => {\r\n    setCategoryIndex(catIndex);\r\n  };\r\n  const handleEmoji = (emoji) => {\r\n    setSelectedEmoji(emoji.character);\r\n  };\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    dispatch(selectEmoji(selectedEmoji));\r\n  };\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    dispatch(showEmojis(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emojisAll.length > 0) {\r\n      setLoading(true);\r\n      setEmojiFilteredBySubGroup({});\r\n      setEmojisFiltered(\r\n        emojisAll.filter(\r\n          (emoji) => emoji.group === categories_eng[categoryIndex]\r\n        )\r\n      );\r\n    }\r\n  }, [categoryIndex, emojisAll]);\r\n\r\n  useEffect(() => {\r\n    if (emojisFiltered.length > 0 && emojiCategories.length > 0) {\r\n      const emojiCategoriesFiltered = emojiCategories.filter(\r\n        (emoji) => emoji.slug !== \"component\"\r\n      );\r\n      emojiCategoriesFiltered[categoryIndex].subCategories.forEach((subCat) => {\r\n        let subCatFiltered = emojisFiltered.filter(\r\n          (emoji) => emoji.subGroup === subCat\r\n        );\r\n        if (subCatFiltered.length > 0) {\r\n          setEmojiFilteredBySubGroup((emojiFilteredBySubGroup) => ({\r\n            ...emojiFilteredBySubGroup,\r\n            [subCat]: subCatFiltered,\r\n          }));\r\n        }\r\n      });\r\n      setLoading(false);\r\n    }\r\n  }, [emojisFiltered, emojiCategories, categoryIndex]);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(selectEmojiClearState());\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    categories,\r\n    categoryIndex,\r\n    emojiFilteredBySubGroup,\r\n    selectedEmoji,\r\n    loading,\r\n    handleSelectCategory,\r\n    handleEmoji,\r\n    handleSave,\r\n    handleCancel,\r\n  };\r\n};\r\n\r\nexport default useEmoji;\r\n","import { selectEmojiCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const selectEmoji = (emojiCharacter) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: selectEmojiCases.EMOJI_SELECTED,\r\n      payload: emojiCharacter,\r\n    });\r\n  };\r\n};\r\n\r\nexport const selectEmojiClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: selectEmojiCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport useEmoji from \"../../hooks/screen/emoji/useEmoji\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport \"./emoji.css\";\r\n\r\nconst Emoji = () => {\r\n  const {\r\n    categories,\r\n    categoryIndex,\r\n    emojiFilteredBySubGroup,\r\n    selectedEmoji,\r\n    loading,\r\n    handleSelectCategory,\r\n    handleEmoji,\r\n    handleSave,\r\n    handleCancel,\r\n  } = useEmoji();\r\n\r\n  return (\r\n    <div className=\"emoji-box\">\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"emoji-category-names\">\r\n            {categories.length > 0 &&\r\n              categories.map((category, index) => (\r\n                <div\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleSelectCategory(index);\r\n                  }}\r\n                  className={\r\n                    categoryIndex === index\r\n                      ? \"emoji-category-active\"\r\n                      : \"emoji-category\"\r\n                  }\r\n                  key={index}\r\n                >\r\n                  {category}\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\" />\r\n      <Row>\r\n        <Col xs={12}>\r\n          {!loading ? (\r\n            <ScrollArea\r\n              className=\"emoji-scroll-area\"\r\n              smoothScrolling={true}\r\n              horizontal={false}\r\n            >\r\n              {emojiFilteredBySubGroup &&\r\n                Object.values(emojiFilteredBySubGroup).length > 0 &&\r\n                Object.values(emojiFilteredBySubGroup).map(\r\n                  (emojiSubGroup, index) => (\r\n                    <div className=\"emoji-list-container\" key={index}>\r\n                      {emojiSubGroup.map((emoji, index) => (\r\n                        <div\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            handleEmoji(emoji);\r\n                          }}\r\n                          className={\r\n                            selectedEmoji === emoji.character\r\n                              ? \"emoji-list-item-selected\"\r\n                              : \"emoji-list-item\"\r\n                          }\r\n                          key={index}\r\n                        >\r\n                          {emoji.character}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )\r\n                )}\r\n            </ScrollArea>\r\n          ) : (\r\n            <div className=\"emoji-spinner\">\r\n              <Spinner animation=\"border\" variant=\"dark\" />\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4\" />\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={8}>\r\n          <Row>\r\n            <Col xs={5}>\r\n              <Button\r\n                variant=\"dark\"\r\n                disabled={!selectedEmoji}\r\n                onClick={handleSave}\r\n              >\r\n                <div className=\"emoji-button\">\r\n                  {capitalizeFirst(strings.myEvents.calendar.button.SAVE)}\r\n                </div>\r\n              </Button>\r\n            </Col>\r\n            <Col xs={2} />\r\n            <Col xs={5}>\r\n              <Button variant=\"info\" onClick={handleCancel}>\r\n                <div className=\"emoji-button\">\r\n                  {capitalizeFirst(strings.myEvents.calendar.button.CANCEL)}\r\n                </div>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={2} />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Emoji;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { recipeButtonItemsArray } from \"../../../shared/buttonItemsArray\";\r\nimport { getRecipe } from \"../../../redux/recipeBook/retrieveRecipe/thunk/retrieveRecipesThunk\";\r\n\r\nconst useRecipeBook = () => {\r\n  const [skip, setSkip] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  const { recipeButtonId } = useSelector(\r\n    (state) => state.recipeCategorySelected\r\n  );\r\n  const { recipesError } = useSelector((state) => state.recipeBook);\r\n  const { userData } = useSelector((state) => state.login);\r\n\r\n  const handlePrev = (e) => {\r\n    e.preventDefault();\r\n    skip > 1 && setSkip(skip - 1);\r\n  };\r\n  const handleNext = (e) => {\r\n    e.preventDefault();\r\n    !recipesError && setSkip(skip + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSkip(1);\r\n  }, [recipeButtonId]);\r\n\r\n  useEffect(() => {\r\n    const limit = 30;\r\n    dispatch(\r\n      getRecipe(\r\n        recipeButtonItemsArray[recipeButtonId].category,\r\n        userData._id,\r\n        userData.email,\r\n        skip,\r\n        limit\r\n      )\r\n    );\r\n  }, [skip, userData._id, userData.email, dispatch]);\r\n\r\n  return { skip, handlePrev, handleNext };\r\n};\r\n\r\nexport default useRecipeBook;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport { Row, Col, Image, ListGroup } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronCircleRight,\r\n  faChevronCircleLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport MakeRecipeButton from \"./makeRecipeButton\";\r\nimport RecipesList from \"./RecipesList\";\r\nimport RecipeDetails from \"./RecipeDetails\";\r\nimport SearchRecipeForm from \"../../forms/recipeBook/searchRecipe/SearchRecipeForm\";\r\nimport Emoji from \"../../components/emoji/Emoji\";\r\nimport useRecipeBook from \"../../hooks/screen/recipeBook/useRecipeBook\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdSense from \"react-adsense\";\r\nimport \"./recipeBook.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst RecipeBook = ({ match: { path, url, isExact } }) => {\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n  });\r\n  const { detailsShown, detailsDataError } = useSelector(\r\n    (state) => state.isRecipeDetailsShown\r\n  );\r\n  const { recipesError } = useSelector((state) => state.recipeBook);\r\n  const { searchInputFilled } = useSelector(\r\n    (state) => state.turnOffRecipeButtons\r\n  );\r\n  const { logoutError } = useSelector((state) => state.logout);\r\n  const { emojisShown } = useSelector((state) => state.isEmojiShown);\r\n\r\n  const { skip, handlePrev, handleNext } = useRecipeBook();\r\n  return (\r\n    <animated.div className=\"recipebook-area\" style={props}>\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <div className=\"recipebook-first-section\">\r\n        <Row>\r\n          <Col xs={3} />\r\n          <Col xs={9}>\r\n            <div className=\"recipebook-list\">\r\n              <ScrollArea\r\n                className=\"recipesList-item-simplebar\"\r\n                smoothScrolling={true}\r\n              >\r\n                <ListGroup>\r\n                  <RecipesList />\r\n                </ListGroup>\r\n              </ScrollArea>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"recipebook-second-section\">\r\n        <div className={detailsShown ? \"recipebook-recipes-buttons\" : \"\"}>\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={7} />\r\n            <Col xs={4}>\r\n              <SearchRecipeForm />\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={4}>\r\n              <MakeRecipeButton />\r\n            </Col>\r\n            <Col xs={1} />\r\n            <Col xs={5}>\r\n              <Row className=\"mb-5\" />\r\n              <Row className=\"mb-2\" />\r\n              <Image\r\n                className=\"recipebook-soup\"\r\n                src={require(\"../../assets/imgs/soupret.jpg\")}\r\n              />\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          {!searchInputFilled && (\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={1}>\r\n                <FontAwesomeIcon\r\n                  className={\r\n                    skip === 1\r\n                      ? \"recipebook-arrows-inactive\"\r\n                      : \"recipebook-left-arrow\"\r\n                  }\r\n                  onClick={skip === 1 ? null : handlePrev}\r\n                  icon={faChevronCircleLeft}\r\n                />\r\n              </Col>\r\n              <Col xs={2} />\r\n              <Col xs={1}>\r\n                <FontAwesomeIcon\r\n                  className={\r\n                    recipesError\r\n                      ? \"recipebook-arrows-inactive\"\r\n                      : \"recipebook-right-arrow\"\r\n                  }\r\n                  onClick={recipesError ? null : handleNext}\r\n                  icon={faChevronCircleRight}\r\n                />\r\n              </Col>\r\n              <Col xs={6}>\r\n                <AdSense.Google\r\n                  client={process.env.REACT_APP_CLIENT_AD_SENSE}\r\n                  slot=\"7806394673\"\r\n                  style={{\r\n                    width: \"25vw\",\r\n                    height: \"9vw\",\r\n                    float: \"left\",\r\n                    borderRadius: 5,\r\n                  }}\r\n                  format=\"\"\r\n                />\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          )}\r\n          <Row className=\"mb-1\" />\r\n          <Row>\r\n            <Col xs={5} />\r\n            <Col xs={6}>\r\n              <Notification\r\n                notificationMessage={logoutError || detailsDataError}\r\n              />\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n        </div>\r\n        {detailsShown && (\r\n          <div className=\"recipebook-recipes-details\">\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <RecipeDetails />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {emojisShown && (\r\n        <div className=\"global-emoji-overlay\">\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={4} />\r\n            <Col xs={4}>\r\n              <Emoji />\r\n            </Col>\r\n            <Col xs={4} />\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default RecipeBook;\r\n","import { showNewRecipeFormCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showNewRecipeForm = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showNewRecipeFormCases.FORM_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { getMyRecipes } from \"../../redux/myRecipes/retrieveMyRecipes/thunk/retrieveMyRecipesThunk\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport Img from \"react-image\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBook, faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { createDate, capitalize } from \"../../util/Util\";\r\nimport RatingStars from \"../../shared/RatingStars\";\r\nimport RatingActiveStars from \"../../shared/RatingActiveStars\";\r\nimport { getAverageRating } from \"../../shared/getAverageRating\";\r\nimport { showNewRecipeForm } from \"../../redux/myRecipes/showNewRecipeForm/thunk/showNewRecipeFormThunk\";\r\nimport { myRecipeData } from \"../../redux/myRecipes/myRecipePreview/thunk/myRecipePreviewThunk\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport * as timeago from \"timeago.js\";\r\nimport pl from \"timeago.js/lib/lang/pl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./myRecipes.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyRecipesList = () => {\r\n  const dispatch = useDispatch();\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { loadingMyRecipes, myRecipesRetrieved, myRecipesError } = useSelector(\r\n    (state) => state.myRecipes\r\n  );\r\n  const { recipeUpdated } = useSelector((state) => state.isMyRecipeChanged);\r\n\r\n  useEffect(() => {\r\n    if (userData.email) {\r\n      dispatch(getMyRecipes(userData._id, userData.email));\r\n    }\r\n    return () => {\r\n      dispatch(showNewRecipeForm(false));\r\n    };\r\n  }, [userData._id, userData.email, recipeUpdated, dispatch]);\r\n\r\n  timeago.register(\"pl\", pl);\r\n\r\n  return loadingMyRecipes ? (\r\n    <div className=\"myrecipes-list-loading-area\">\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"light\" />\r\n    </div>\r\n  ) : myRecipesError ? (\r\n    <div className=\"myrecipes-list-item-norecipes\">{myRecipesError}</div>\r\n  ) : (\r\n    <div className=\"myrecipes-list-main-area\">\r\n      {myRecipesRetrieved !== null &&\r\n        myRecipesRetrieved.map((retrieveRecipe, index) => (\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(myRecipeData(retrieveRecipe));\r\n            }}\r\n            className=\"myrecipes-list-item\"\r\n            key={index}\r\n          >\r\n            <Row>\r\n              <Col xs={3}>\r\n                <Img\r\n                  className=\"myrecipes-list-item-picture\"\r\n                  src={\r\n                    retrieveRecipe.picture\r\n                      ? strings.path.IMAGE_REQUEST + retrieveRecipe.picture\r\n                      : require(\"../../assets/imgs/panret.jpg\")\r\n                  }\r\n                  loader={\r\n                    <div className=\"global-list-picture-loading-box\">\r\n                      <Spinner animation=\"border\" variant=\"info\" />\r\n                    </div>\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col xs={9}>\r\n                <Row>\r\n                  <Col xs={7} />\r\n                  <Col xs={5}>\r\n                    <div>\r\n                      <TimeAgo\r\n                        className=\"myrecipes-list-item-timeago\"\r\n                        datetime={createDate(retrieveRecipe.date)}\r\n                        locale=\"pl\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"myrecipes-list-item-title\">\r\n                  {retrieveRecipe.title}\r\n                </div>\r\n                <div className=\"myrecipes-list-item-rate-outter\">\r\n                  <RatingStars />\r\n                  <div\r\n                    style={{\r\n                      width: getAverageRating(retrieveRecipe.comments),\r\n                    }}\r\n                    className=\"myrecipes-list-item-rate-inner\"\r\n                  >\r\n                    <RatingActiveStars place={strings.rating.LIST} />\r\n                  </div>\r\n                </div>\r\n                <div style={{ height: 5 }} />\r\n                <div className=\"myrecipes-list-item-author\">\r\n                  <div className=\"myrecipes-list-item-icon\">\r\n                    <FontAwesomeIcon icon={faBook} />\r\n                  </div>\r\n                  <div>{capitalize(retrieveRecipe.category)}</div>\r\n                </div>\r\n                <div className=\"myrecipes-list-item-time\">\r\n                  <div className=\"myrecipes-list-item-icon\">\r\n                    <FontAwesomeIcon icon={faClock} />\r\n                  </div>\r\n                  <div>{retrieveRecipe.cookTime} min.</div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRecipesList;\r\n","import { useEffect } from \"react\";\r\nimport { toEditMyRecipe } from \"../../../redux/myRecipes/toEditMyRecipe/thunk/toEditMyRecipeThunk\";\r\nimport {\r\n  removeMyRecipe,\r\n  changeMyRecipesClearState,\r\n} from \"../../../redux/myRecipes/changeMyRecipes/thunk/changeMyRecipesThunk\";\r\nimport { myRecipePreviewClearState } from \"../../../redux/myRecipes/myRecipePreview/thunk/myRecipePreviewThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useMyRecipePreview = () => {\r\n  const dispatch = useDispatch();\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { recipeUpdated } = useSelector((state) => state.isMyRecipeChanged);\r\n\r\n  const handleEditClick = (data) => {\r\n    dispatch(toEditMyRecipe(data));\r\n  };\r\n\r\n  const handleTrashClick = (recipeId) => {\r\n    dispatch(removeMyRecipe(recipeId, userData._id, userData.email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recipeUpdated) {\r\n      dispatch(changeMyRecipesClearState());\r\n      dispatch(myRecipePreviewClearState());\r\n    }\r\n  }, [recipeUpdated, dispatch]);\r\n\r\n  return {\r\n    handleEditClick,\r\n    handleTrashClick,\r\n  };\r\n};\r\n\r\nexport default useMyRecipePreview;\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner, Button } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport Img from \"react-image\";\r\nimport useMyRecipePreview from \"../../hooks/screen/myRecipes/useMyRecipePreview\";\r\nimport { myRecipePreviewClearState } from \"../../redux/myRecipes/myRecipePreview/thunk/myRecipePreviewThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport RatingStars from \"../../shared/RatingStars\";\r\nimport RatingActiveStars from \"../../shared/RatingActiveStars\";\r\nimport { getAverageRating } from \"../../shared/getAverageRating\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport \"./myRecipes.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyRecipePreview = () => {\r\n  const dispatch = useDispatch();\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 300 },\r\n    from: { opacity: 0 },\r\n  });\r\n  const { handleEditClick, handleTrashClick } = useMyRecipePreview();\r\n  const { myRecipePreviewData } = useSelector((state) => state.myRecipePreview);\r\n  const { loading } = useSelector((state) => state.isMyRecipeChanged);\r\n\r\n  return (\r\n    <animated.div style={props}>\r\n      <Row>\r\n        <Col xs={1} />\r\n        <Col xs={6}>\r\n          <h1 className=\"recipeDetails-title\">{myRecipePreviewData.title}</h1>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <Img\r\n            className=\"recipeDetails-author-photo\"\r\n            src={\r\n              userGooglePhoto.some(\r\n                (element) =>\r\n                  myRecipePreviewData.author.photo &&\r\n                  myRecipePreviewData.author.photo.includes(element)\r\n              )\r\n                ? myRecipePreviewData.author.photo\r\n                : !userGooglePhoto.some(\r\n                    (element) =>\r\n                      myRecipePreviewData.author.photo &&\r\n                      myRecipePreviewData.author.photo.includes(element)\r\n                  ) && myRecipePreviewData.author.photo\r\n                ? strings.path.IMAGE_REQUEST + myRecipePreviewData.author.photo\r\n                : require(\"../../assets/imgs/cookerret.png\")\r\n            }\r\n            loader={<Spinner animation=\"border\" variant=\"dark\" />}\r\n          />\r\n        </Col>\r\n        <Col xs={2}>\r\n          <div className=\"recipeDetails-rate-outter\">\r\n            <RatingStars />\r\n            <div\r\n              style={{ width: getAverageRating(myRecipePreviewData.comments) }}\r\n              className=\"recipeDetails-rate-inner\"\r\n            >\r\n              <RatingActiveStars place={strings.rating.DETAILS} />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(myRecipePreviewClearState());\r\n            }}\r\n            className=\"recipeDetails-close-icon\"\r\n          >\r\n            <FontAwesomeIcon icon={faTimesCircle} />\r\n          </div>\r\n        </Col>\r\n        <Col xs={1} />\r\n      </Row>\r\n      <Row className=\"mb-2\" />\r\n      <ScrollArea smoothScrolling={true} className=\"recipeDetails-main\">\r\n        <div>\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={5}>\r\n              <Img\r\n                className=\"recipeDetails-picture\"\r\n                src={\r\n                  myRecipePreviewData.picture\r\n                    ? strings.path.IMAGE_REQUEST + myRecipePreviewData.picture\r\n                    : require(\"../../assets/imgs/panret.jpg\")\r\n                }\r\n                loader={\r\n                  <div className=\"global-preview-picture-loading-box\">\r\n                    <Spinner animation=\"border\" variant=\"dark\" />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n            <Col xs={5}>\r\n              <div className=\"recipeDetails-ingredients-text\">\r\n                {capitalizeFirst(strings.recipeBookDetails.INGREDIENTS)}\r\n              </div>\r\n              <div style={{ height: 5 }} />\r\n              {myRecipePreviewData.ingredients.map((ingredient, index) => (\r\n                <div className=\"recipeDetails-ingredients-item\" key={index}>\r\n                  - {ingredient}\r\n                </div>\r\n              ))}\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-3\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              <div className=\"recipeDetails-ingredients-text\">\r\n                {capitalizeFirst(strings.recipeBookDetails.DESCRIBE)}\r\n              </div>\r\n              <div style={{ height: 10 }} />\r\n              <div className=\"recipeDetails-ingredients-description\">\r\n                {myRecipePreviewData.description}\r\n              </div>\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              {myRecipePreviewData.video && (\r\n                <div className=\"recipeDetails-player-wrapper\">\r\n                  <ReactPlayer\r\n                    className=\"recipeDetails-player\"\r\n                    url={myRecipePreviewData.video}\r\n                    controls={true}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={6}>\r\n              <div className=\"myrecipes-button-preview-box\">\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleEditClick({\r\n                      recipeId: myRecipePreviewData._id,\r\n                      recipeTitle: myRecipePreviewData.title,\r\n                      recipeImage: myRecipePreviewData.picture,\r\n                      recipeVideo: myRecipePreviewData.video,\r\n                      recipeCategory: myRecipePreviewData.category,\r\n                      recipeCookTime: myRecipePreviewData.cookTime,\r\n                      recipeIngredients: myRecipePreviewData.ingredients,\r\n                      recipeDescription: myRecipePreviewData.description,\r\n                    });\r\n                  }}\r\n                  className=\"myrecipes-preview-button\"\r\n                  variant=\"dark\"\r\n                >\r\n                  <FontAwesomeIcon\r\n                    className=\"myrecipes-preview-button-icon\"\r\n                    icon={faEdit}\r\n                  />\r\n                  <div className=\"myrecipes-button-text\">\r\n                    {capitalize(strings.myRecipes.BUTTON_CORRECTION)}\r\n                  </div>\r\n                </Button>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleTrashClick(myRecipePreviewData._id);\r\n                  }}\r\n                  className=\"myrecipes-preview-button-delete\"\r\n                  variant=\"dark\"\r\n                >\r\n                  <div className=\"myrecipes-form-spinner\">\r\n                    {loading && (\r\n                      <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {loading ? (\r\n                    <div className=\"myrecipes-form-button-loading\">\r\n                      {capitalizeFirst(strings.myRecipes.BUTTON_REMOVE_LOADING)}\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon\r\n                        className=\"myrecipes-preview-button-icon\"\r\n                        icon={faTrash}\r\n                      />\r\n                      <div className=\"myrecipes-button-text\">\r\n                        {capitalize(strings.myRecipes.BUTTON_REMOVE)}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col xs={5} />\r\n          </Row>\r\n        </div>\r\n      </ScrollArea>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default MyRecipePreview;\r\n","import { strings } from \"../strings/Strings\";\r\n\r\nexport const getImage = (image) => {\r\n  return new Promise(async (resolve) => {\r\n    try {\r\n      const pictureName = image.split(\"/\").slice(3).toString();\r\n      const pictureType = pictureName.split(\".\").slice(1).toString();\r\n\r\n      const response = await fetch(strings.path.IMAGE_REQUEST + image);\r\n      const data = await response.blob();\r\n      const metadata = {\r\n        type: `image/${pictureType}`,\r\n      };\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(new File([data], pictureName, metadata));\r\n      fileReader.onloadend = () => {\r\n        resolve({ imageBinary: fileReader.result, pictureName: pictureName });\r\n      };\r\n    } catch (err) {\r\n      if (err) throw new Error(err);\r\n    }\r\n  });\r\n};\r\n","import Compress from \"compress.js\";\r\nimport { strings } from \"../strings/Strings\";\r\nimport { unacceptableWordsArray } from \"../shared/testWordsArray\";\r\nimport { capitalizeFirst } from \"../util/Util\";\r\n\r\nexport const makeImageBinary = (picture) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      if (picture.length > 1) {\r\n        picture = picture.splice(picture.length - 1, 1);\r\n      }\r\n      if (\r\n        unacceptableWordsArray.some(\r\n          (element) => picture.length > 0 && picture[0].name.includes(element)\r\n        )\r\n      ) {\r\n        reject(capitalizeFirst(strings.myRecipes.error.IMAGE_UNACCEPTABLE));\r\n      } else if (picture.length > 0 && picture[0].size > 9000000) {\r\n        reject(capitalizeFirst(strings.myRecipes.error.IMAGE_SIZE_ERROR));\r\n      } else if (picture.length === 0) {\r\n        reject();\r\n      }\r\n\r\n      if (\r\n        picture.length > 0 &&\r\n        picture[0].size > 0 &&\r\n        picture[0].size <= 100000\r\n      ) {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(picture[0]);\r\n        fileReader.onloadend = () => {\r\n          resolve({\r\n            image: fileReader.result,\r\n            imageName: picture.length > 0 && picture[0].name,\r\n          });\r\n        };\r\n      } else if (\r\n        picture.length > 0 &&\r\n        picture[0].size > 100000 &&\r\n        picture[0].size <= 9000000\r\n      ) {\r\n        const compress = new Compress();\r\n        const result = await compress.compress([picture[0]], {\r\n          size: 0.1,\r\n          quality: 1,\r\n          resize: true,\r\n        });\r\n        resolve({\r\n          image: result[0].prefix + result[0].data,\r\n          imageName: picture.length > 0 && picture[0].name,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      if (err) throw new Error(err);\r\n    }\r\n  });\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { unacceptableWordsArray } from \"../../../shared/testWordsArray\";\r\nimport { getImage } from \"../../../shared/getImage\";\r\nimport { makeImageBinary } from \"../../../shared/makeImageBinary\";\r\nimport {\r\n  addMyRecipe,\r\n  editMyRecipe,\r\n  changeMyRecipesClearState,\r\n} from \"../../../redux/myRecipes/changeMyRecipes/thunk/changeMyRecipesThunk\";\r\nimport { showEmojis } from \"../../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { toEditMyRecipeClearState } from \"../../../redux/myRecipes/toEditMyRecipe/thunk/toEditMyRecipeThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useNewRecipeForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({});\r\n  const [error, setError] = useState({});\r\n  const [loadingImage, setLoadingImage] = useState(false);\r\n  const [inputHasFocus, setInputHasFocus] = useState(\"\");\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { recipeUpdated } = useSelector((state) => state.isMyRecipeChanged);\r\n  const { myRecipeToEdit } = useSelector((state) => state.toEditMyRecipe);\r\n  const { emojiCharacter } = useSelector((state) => state.selectedEmoji);\r\n\r\n  const handleInputsChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]:\r\n        e.target.name === strings.myRecipes.inputName.TITLE\r\n          ? capitalizeFirst(e.target.value)\r\n          : e.target.name === strings.myRecipes.inputName.COOK_TIME\r\n          ? parseInt(e.target.value) > 300\r\n            ? (e.target.value = \"300\")\r\n            : e.target.value[0] === \"0\"\r\n            ? (e.target.value = \"1\")\r\n            : e.target.value.replace(/[^0-9]+/g, \"\")\r\n          : e.target.name === strings.myRecipes.inputName.INGREDIENTS\r\n          ? e.target.value.replace(/[^a-zA-Z,\\d\\s]/g, \"\").split(/\\s*,\\s*/)\r\n          : e.target.name === strings.myRecipes.inputName.DESCRIPTION\r\n          ? capitalizeFirst(e.target.value)\r\n          : e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handlePicture = async (picture) => {\r\n    try {\r\n      if (picture.length > 0) {\r\n        setLoadingImage(true);\r\n        const result = await makeImageBinary(picture);\r\n        if (result) {\r\n          setLoadingImage(false);\r\n          setInputs((inputs) => ({\r\n            ...inputs,\r\n            recipeImage: result,\r\n          }));\r\n          if (error.imageError) {\r\n            setError((error) =>\r\n              (({ imageError, ...others }) => ({\r\n                ...others,\r\n              }))(error)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        setLoadingImage(false);\r\n        setError((error) => ({\r\n          ...error,\r\n          imageError: err,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (e) => {\r\n    e.preventDefault();\r\n    setInputs((inputs) =>\r\n      (({ recipeImage, ...others }) => ({\r\n        ...others,\r\n      }))(inputs)\r\n    );\r\n    if (error.imageError) {\r\n      setError((error) =>\r\n        (({ imageError, ...others }) => ({\r\n          ...others,\r\n        }))(error)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleRemoveVideo = (e) => {\r\n    e.preventDefault();\r\n    setInputs((inputs) =>\r\n      (({ video, ...others }) => ({\r\n        ...others,\r\n      }))(inputs)\r\n    );\r\n    if (error.playerError) {\r\n      setError((error) =>\r\n        (({ playerError, ...others }) => ({\r\n          ...others,\r\n        }))(error)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePlayerError = (e) => {\r\n    if (e.target.error.message.includes(\"COULD_NOT_OPEN\")) {\r\n      setError((error) => ({\r\n        ...error,\r\n        playerError: capitalizeFirst(strings.myRecipes.error.VIDEO_URL_ERROR),\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handlePlayerReady = (e) => {\r\n    if (e.player.isReady) {\r\n      setError((error) =>\r\n        (({ playerError, ...others }) => ({\r\n          ...others,\r\n        }))(error)\r\n      );\r\n    }\r\n  };\r\n  const handleFocus = (e) => {\r\n    setInputHasFocus(e.target.name);\r\n  };\r\n  const handleBlur = (e) => {\r\n    if (\r\n      (e.relatedTarget &&\r\n        e.relatedTarget.className &&\r\n        !e.relatedTarget.className.includes(\"btn\")) ||\r\n      e.relatedTarget === null\r\n    ) {\r\n      setInputHasFocus(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (myRecipeToEdit.recipeTitle) {\r\n      dispatch(\r\n        editMyRecipe(\r\n          myRecipeToEdit.recipeId,\r\n          inputs.title,\r\n          inputs.recipeImage,\r\n          inputs.video,\r\n          inputs.category,\r\n          parseInt(inputs.cookTime),\r\n          inputs.ingredients.filter((ingredient) => ingredient !== \"\"),\r\n          inputs.description,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addMyRecipe(\r\n          inputs.title,\r\n          inputs.recipeImage,\r\n          inputs.video,\r\n          inputs.category,\r\n          parseInt(inputs.cookTime),\r\n          inputs.ingredients.filter((ingredient) => ingredient !== \"\"),\r\n          inputs.description,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emojiCharacter) {\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        [inputHasFocus]: inputs[inputHasFocus].concat(emojiCharacter),\r\n      }));\r\n      dispatch(showEmojis(false));\r\n    }\r\n  }, [emojiCharacter, inputHasFocus, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (myRecipeToEdit.recipeTitle) {\r\n      (async () => {\r\n        setLoadingImage(true);\r\n        const result =\r\n          myRecipeToEdit.recipeImage &&\r\n          (await getImage(myRecipeToEdit.recipeImage));\r\n        if (result || result === null) setLoadingImage(false);\r\n        setInputs((inputs) => ({\r\n          ...inputs,\r\n          title: myRecipeToEdit.recipeTitle,\r\n          recipeImage: result && {\r\n            image: result.imageBinary,\r\n            imageName: result.pictureName,\r\n          },\r\n          video: myRecipeToEdit.recipeVideo,\r\n          category: myRecipeToEdit.recipeCategory,\r\n          cookTime: myRecipeToEdit.recipeCookTime,\r\n          ingredients: myRecipeToEdit.recipeIngredients,\r\n          description: myRecipeToEdit.recipeDescription,\r\n        }));\r\n        if (result === null)\r\n          setInputs((inputs) =>\r\n            (({ recipeImage, ...others }) => ({\r\n              ...others,\r\n            }))(inputs)\r\n          );\r\n      })();\r\n    }\r\n  }, [myRecipeToEdit]);\r\n\r\n  useEffect(() => {\r\n    if (recipeUpdated) {\r\n      setInputs({});\r\n      dispatch(changeMyRecipesClearState());\r\n      dispatch(toEditMyRecipeClearState());\r\n    }\r\n    return () => {\r\n      dispatch(toEditMyRecipeClearState());\r\n    };\r\n  }, [recipeUpdated, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!inputs.video && !myRecipeToEdit.recipeVideo) {\r\n      setInputs((inputs) =>\r\n        (({ video, ...others }) => ({\r\n          ...others,\r\n        }))(inputs)\r\n      );\r\n      setError((error) =>\r\n        (({ playerError, ...others }) => ({\r\n          ...others,\r\n        }))(error)\r\n      );\r\n    }\r\n    if (\r\n      unacceptableWordsArray.some(\r\n        (element) => inputs.video && inputs.video.includes(element)\r\n      )\r\n    ) {\r\n      setError((error) => ({\r\n        ...error,\r\n        playerError: capitalizeFirst(\r\n          strings.myRecipes.error.VIDEO_UNACCEPTABLE\r\n        ),\r\n      }));\r\n    }\r\n  }, [inputs.video, myRecipeToEdit.recipeVideo]);\r\n\r\n  return {\r\n    inputs,\r\n    error,\r\n    loadingImage,\r\n    inputHasFocus,\r\n    handleFocus,\r\n    handleBlur,\r\n    handleInputsChange,\r\n    handlePicture,\r\n    handleRemoveImage,\r\n    handleRemoveVideo,\r\n    handlePlayerError,\r\n    handlePlayerReady,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport default useNewRecipeForm;\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Image, Spinner } from \"react-bootstrap\";\r\nimport useNewRecipeForm from \"../../hooks/form/myRecipes/useNewRecipeForm\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst, capitalize } from \"../../util/Util\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGrin } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { toEditMyRecipeClearState } from \"../../redux/myRecipes/toEditMyRecipe/thunk/toEditMyRecipeThunk\";\r\nimport { showNewRecipeForm } from \"../../redux/myRecipes/showNewRecipeForm/thunk/showNewRecipeFormThunk\";\r\nimport { showEmojis } from \"../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport \"./myRecipesForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyRecipesForm = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    inputs,\r\n    error,\r\n    loadingImage,\r\n    inputHasFocus,\r\n    handleFocus,\r\n    handleBlur,\r\n    handleInputsChange,\r\n    handlePicture,\r\n    handleRemoveImage,\r\n    handleRemoveVideo,\r\n    handlePlayerError,\r\n    handlePlayerReady,\r\n    handleSubmit,\r\n  } = useNewRecipeForm();\r\n\r\n  const { loading } = useSelector((state) => state.isMyRecipeChanged);\r\n  const { myRecipeToEdit } = useSelector((state) => state.toEditMyRecipe);\r\n\r\n  return (\r\n    <ScrollArea\r\n      className=\"myrecipes-form-scroll-area\"\r\n      smoothScrolling={true}\r\n      horizontal={false}\r\n    >\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicTitle\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.TITLE)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleInputsChange}\r\n                value={inputs.title || \"\"}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                name=\"title\"\r\n                type=\"text\"\r\n                maxLength=\"21\"\r\n                placeholder={strings.myRecipes.TITLE_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicPicture\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.PICTURE)}\r\n              </Form.Label>\r\n              <ImageUploader\r\n                fileContainerStyle={{\r\n                  height: 75,\r\n                  fontFamily: \"OpenSans-Regular\",\r\n                  border: \"1px solid #CED4DA\",\r\n                  backgroundColor: \"#e2f3f5\",\r\n                }}\r\n                withIcon={false}\r\n                singleImage={true}\r\n                withLabel={true}\r\n                label={capitalizeFirst(strings.myRecipes.MAX_PICTURE_SIZE)}\r\n                buttonText={capitalizeFirst(strings.myRecipes.CHOOSE_PICTURE)}\r\n                buttonStyles={{\r\n                  fontFamily: \"OpenSans-Regular\",\r\n                  fontSize: \"1vw\",\r\n                }}\r\n                onChange={handlePicture}\r\n                imgExtension={[\".jpg\", \"jpeg\", \".gif\", \".png\", \".gif\"]}\r\n                fileTypeError={capitalizeFirst(\r\n                  strings.myRecipes.error.IMAGE_FORMAT\r\n                )}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        {loadingImage ? (\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"myrecipes-form-loading-items\">\r\n                <Spinner animation=\"border\" size=\"sm\" />\r\n                <div className=\"myrecipes-form-loadingimage-text\">\r\n                  {capitalizeFirst(strings.myRecipes.LOADING_IMAGE)}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          inputs.recipeImage && (\r\n            <Row>\r\n              <Col xs={8}>\r\n                <Image\r\n                  src={\r\n                    inputs.recipeImage.image ? inputs.recipeImage.image : null\r\n                  }\r\n                  thumbnail\r\n                />\r\n              </Col>\r\n              <Col xs={1}>\r\n                <FontAwesomeIcon\r\n                  className=\"myrecipes-form-trash\"\r\n                  icon={faTrash}\r\n                  onClick={handleRemoveImage}\r\n                />\r\n              </Col>\r\n              <Col xs={2} />\r\n            </Row>\r\n          )\r\n        )}\r\n        {error.imageError && (\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"myrecipes-form-video-error\">\r\n                {error.imageError ? error.imageError : null}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicVideo\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.VIDEO)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleInputsChange}\r\n                value={inputs.video || \"\"}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                name=\"video\"\r\n                type=\"text\"\r\n                placeholder={strings.myRecipes.VIDEO_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        {error.playerError ? (\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"myrecipes-form-video-error\">\r\n                {error.playerError ? error.playerError : null}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          inputs.video && (\r\n            <Row>\r\n              <Col xs={9}>\r\n                <div className=\"myrecipes-form-player-wrapper\">\r\n                  <ReactPlayer\r\n                    className=\"myrecipes-form-player\"\r\n                    url={inputs.video ? inputs.video : null}\r\n                    controls={true}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    onError={handlePlayerError}\r\n                    onReady={handlePlayerReady}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={1} />\r\n              <Col xs={1}>\r\n                <FontAwesomeIcon\r\n                  className=\"myrecipes-form-trash\"\r\n                  icon={faTrash}\r\n                  onClick={handleRemoveVideo}\r\n                />\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          )\r\n        )}\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicCategory\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.CATEGORY)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                as=\"select\"\r\n                name=\"category\"\r\n                value={inputs.category || \"\"}\r\n                onChange={handleInputsChange}\r\n              >\r\n                <option disabled={true} value=\"\">\r\n                  {capitalizeFirst(strings.myRecipes.CHOOSE_CATEGORY)}\r\n                </option>\r\n                <option value={strings.recipeBook.CAT_LUNCH || \"\"}>\r\n                  {capitalize(strings.myRecipes.category.LUNCH)}\r\n                </option>\r\n                <option value={strings.recipeBook.CAT_DESSERT || \"\"}>\r\n                  {capitalize(strings.myRecipes.category.DESSERTS)}\r\n                </option>\r\n                <option value={strings.recipeBook.CAT_DRINKS || \"\"}>\r\n                  {capitalize(strings.myRecipes.category.DRINKS)}\r\n                </option>\r\n                <option value={strings.recipeBook.CAT_EVENING || \"\"}>\r\n                  {capitalize(strings.myRecipes.category.EVENING)}\r\n                </option>\r\n                <option value={strings.recipeBook.CAT_SALADES || \"\"}>\r\n                  {capitalize(strings.myRecipes.category.SALADES)}\r\n                </option>\r\n                <option value={strings.recipeBook.CAT_FAST_FOOD || \"\"}>\r\n                  {capitalize(strings.myRecipes.category.FAST_FOOD)}\r\n                </option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicCookTime\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.COOK_TIME)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleInputsChange}\r\n                value={inputs.cookTime || \"\"}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                name=\"cookTime\"\r\n                type=\"text\"\r\n                maxLength=\"3\"\r\n                placeholder={strings.myRecipes.COOK_TIME_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicIngredients\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.INGREDIENTS)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleInputsChange}\r\n                value={inputs.ingredients || \"\"}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                name=\"ingredients\"\r\n                type=\"text\"\r\n                placeholder={strings.myRecipes.INGREDIENTS_EX}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicDescription\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myRecipes.DESCRIPTION)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleInputsChange}\r\n                value={inputs.description || \"\"}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                as=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"description\"\r\n                type=\"text\"\r\n                placeholder={strings.myRecipes.DESCRIPTION_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div className=\"myrecipes-form-buttons-box\">\r\n              {!myRecipeToEdit.recipeTitle ? (\r\n                <div className=\"global-emoji-wrapper\">\r\n                  <Button\r\n                    disabled={\r\n                      loading ||\r\n                      inputs.title === undefined ||\r\n                      inputs.title === \"\" ||\r\n                      error.imageError ||\r\n                      error.playerError ||\r\n                      inputs.category === undefined ||\r\n                      inputs.category === \"\" ||\r\n                      inputs.cookTime === undefined ||\r\n                      inputs.cookTime === \"\" ||\r\n                      inputs.ingredients === undefined ||\r\n                      inputs.ingredients === \"\" ||\r\n                      inputs.description === undefined ||\r\n                      inputs.description === \"\"\r\n                    }\r\n                    type=\"submit\"\r\n                    className=\"global-button-label\"\r\n                    variant=\"outline-dark\"\r\n                  >\r\n                    <div className=\"myrecipes-form-spinner\">\r\n                      {loading && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loading ? (\r\n                      <div className=\"myrecipes-form-button-loading\">\r\n                        {capitalizeFirst(strings.contact.BUTTON_TEXT_LOADING)}\r\n                      </div>\r\n                    ) : (\r\n                      <div>{capitalizeFirst(strings.contact.BUTTON_TEXT)}</div>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"global-emoji-button\"\r\n                    disabled={\r\n                      (inputHasFocus !== \"title\" ||\r\n                        inputs.title === \"\" ||\r\n                        inputs.title === undefined) &&\r\n                      (inputHasFocus !== \"description\" ||\r\n                        inputs.description === \"\" ||\r\n                        inputs.description === undefined)\r\n                    }\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      dispatch(showEmojis(true));\r\n                    }}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      className=\"global-emoji-button-icon\"\r\n                      icon={faGrin}\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"global-emoji-wrapper\">\r\n                  <Button\r\n                    disabled={\r\n                      loading ||\r\n                      inputs.title === undefined ||\r\n                      inputs.title === \"\" ||\r\n                      error.imageError ||\r\n                      error.playerError ||\r\n                      inputs.category === undefined ||\r\n                      inputs.category === \"\" ||\r\n                      inputs.cookTime === undefined ||\r\n                      inputs.cookTime === \"\" ||\r\n                      inputs.ingredients === undefined ||\r\n                      inputs.ingredients === \"\" ||\r\n                      inputs.description === undefined ||\r\n                      inputs.description === \"\"\r\n                    }\r\n                    type=\"submit\"\r\n                    className=\"global-button-label\"\r\n                    variant=\"outline-dark\"\r\n                  >\r\n                    <div className=\"myrecipes-form-spinner\">\r\n                      {loading && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loading ? (\r\n                      <div className=\"myrecipes-form-button-loading\">\r\n                        {capitalizeFirst(strings.contact.BUTTON_TEXT_LOADING)}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        {capitalizeFirst(strings.rating.BUTTON_EDIT_TEXT)}\r\n                      </div>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"global-emoji-button\"\r\n                    disabled={\r\n                      (inputHasFocus !== \"title\" ||\r\n                        inputs.title === \"\" ||\r\n                        inputs.title === undefined) &&\r\n                      (inputHasFocus !== \"description\" ||\r\n                        inputs.description === \"\" ||\r\n                        inputs.description === undefined)\r\n                    }\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      dispatch(showEmojis(true));\r\n                    }}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      className=\"global-emoji-button-icon\"\r\n                      icon={faGrin}\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <Button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showNewRecipeForm(false));\r\n                  dispatch(toEditMyRecipeClearState());\r\n                }}\r\n                className=\"global-button-label\"\r\n                variant=\"outline-secondary\"\r\n              >\r\n                {capitalizeFirst(strings.rating.BUTTON_CANCEL_TEXT)}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ScrollArea>\r\n  );\r\n};\r\n\r\nexport default MyRecipesForm;\r\n","import React from \"react\";\r\nimport { Row, Col, Button, ListGroup, Image } from \"react-bootstrap\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport MyRecipesList from \"./MyRecipesList\";\r\nimport MyRecipePreview from \"./MyRecipePreview\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport MyRecipesForm from \"../../forms/myRecipes/myRecipesForm\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport Emoji from \"../../components/emoji/Emoji\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showNewRecipeForm } from \"../../redux/myRecipes/showNewRecipeForm/thunk/showNewRecipeFormThunk\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport \"./myRecipes.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyRecipes = ({ match: { path, url, isExact } }) => {\r\n  const dispatch = useDispatch();\r\n  const { newRecipeFormShown } = useSelector(\r\n    (state) => state.isNewRecipeFormShown\r\n  );\r\n  const { myRecipePreviewShown } = useSelector(\r\n    (state) => state.myRecipePreview\r\n  );\r\n  const { myRecipeChangeError } = useSelector(\r\n    (state) => state.isMyRecipeChanged\r\n  );\r\n  const { logoutError } = useSelector((state) => state.logout);\r\n  const { emojiError } = useSelector((state) => state.emojis);\r\n  const { emojisShown } = useSelector((state) => state.isEmojiShown);\r\n\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n  });\r\n  return (\r\n    <animated.div className=\"myrecipes-area\" style={props}>\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <div className=\"myrecipes-first-section\">\r\n        <Row>\r\n          <Col xs={3} />\r\n          <Col xs={9}>\r\n            <div className=\"myrecipes-list\">\r\n              <ScrollArea\r\n                className=\"myrecipes-scroll-area\"\r\n                smoothScrolling={true}\r\n              >\r\n                <ListGroup>\r\n                  <MyRecipesList />\r\n                </ListGroup>\r\n              </ScrollArea>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"myrecipes-second-section\">\r\n        <div\r\n          className={\r\n            newRecipeFormShown || myRecipePreviewShown\r\n              ? \"myrecipes-button-hidden\"\r\n              : \"\"\r\n          }\r\n        >\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-5\" />\r\n          <Row>\r\n            <Col xs={4} />\r\n            <Col xs={2}>\r\n              <Button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showNewRecipeForm(true));\r\n                }}\r\n                className=\"myrecipes-button-new-recipe\"\r\n                variant=\"outline-dark\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  className=\"myrecipes-button-icon\"\r\n                  icon={faFileAlt}\r\n                />\r\n                <div className=\"myrecipes-button-text\">\r\n                  {capitalize(strings.myRecipes.BUTTON_NEW_RECIPE)}\r\n                </div>\r\n              </Button>\r\n            </Col>\r\n            <Col xs={6} />\r\n          </Row>\r\n          <Row className=\"mb-5\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={6}>\r\n              <Image\r\n                className=\"myrecipes-image\"\r\n                src={require(\"../../assets/imgs/recipebookret.png\")}\r\n              />\r\n            </Col>\r\n            <Col xs={5} />\r\n          </Row>\r\n        </div>\r\n        {newRecipeFormShown && (\r\n          <div className=\"myrecipes-form-shown\">\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-4\" />\r\n            <Row>\r\n              <Col xs={2} />\r\n              <Col xs={6}>\r\n                <MyRecipesForm />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-4\" />\r\n                <Notification\r\n                  notificationMessage={\r\n                    myRecipeChangeError || logoutError || emojiError\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </div>\r\n        )}\r\n        {myRecipePreviewShown && (\r\n          <div className=\"myrecipes-recipe-preview\">\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <MyRecipePreview />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {emojisShown && (\r\n        <div className=\"global-emoji-overlay\">\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={4} />\r\n            <Col xs={4}>\r\n              <Emoji />\r\n            </Col>\r\n            <Col xs={4} />\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default MyRecipes;\r\n","import { showNewMessageFormCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showNewMessageForm = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showNewMessageFormCases.FORM_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import { newMessageSelectedCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const newMessage = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: newMessageSelectedCases.SELECTED, payload: bool });\r\n  };\r\n};\r\n","import { conversationWindowOpenCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const conversationWindowOpen = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: conversationWindowOpenCases.WINDOW_OPEN, payload: bool });\r\n  };\r\n};\r\n","import { chooseRecipientCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const chooseRecipient = (data) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: chooseRecipientCases.RECIPIENT_CHOSEN, payload: data });\r\n  };\r\n};\r\n\r\nexport const chooseRecipientClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: chooseRecipientCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showNewMessageForm } from \"../../../redux/mails/showNewMessageForm/thunk/showNewMessageThunk\";\r\nimport {\r\n  chooseRecipient,\r\n  chooseRecipientClearState,\r\n} from \"../../../redux/mails/chooseRecipient/thunk/chooseRecipientThunk\";\r\nimport { newMessage } from \"../../../redux/mails/newMessageSelected/thunk/newMessageSelectedThunk\";\r\nimport {\r\n  setConversation,\r\n  setConversationClearState,\r\n} from \"../../../redux/mails/setConversation/thunk/setConversationThunk\";\r\nimport {\r\n  setMessageId,\r\n  setMessageIdClearState,\r\n} from \"../../../redux/mails/setMessageId/thunk/setMessageIdThunk\";\r\nimport { showEmojis } from \"../../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { getEmojisClearState } from \"../../../redux/emoji/getEmojis/thunk/getEmojisThunk\";\r\nimport { conversationWindowOpen } from \"../../../redux/mails/conversationWindowOpen/thunk/conversationWindowOpenThunk\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nconst useMessageForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [inputs, setInputs] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchLoading, setSearchLoading] = useState(false);\r\n  const [newTopPosition, setNewTopPosition] = useState(null);\r\n  const [showRecipientSuggestions, setShowRecipientSuggestions] = useState(\r\n    false\r\n  );\r\n  const [recipients, setRecipients] = useState([]);\r\n  const [error, setError] = useState({});\r\n  const [inputHasFocus, setInputHasFocus] = useState(\"\");\r\n\r\n  const conversationScrollRef = useRef(null);\r\n\r\n  const { socket } = useSelector((state) => state.socketData);\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { recipient } = useSelector((state) => state.isRecipientChosen);\r\n  const { newMessageSelected } = useSelector(\r\n    (state) => state.isNewMessageSelected\r\n  );\r\n  const { conversations } = useSelector((state) => state.userConversations);\r\n  const { windowOpen } = useSelector((state) => state.isConversationWindowOpen);\r\n  const { messageId } = useSelector((state) => state.isMessageId);\r\n  const { mailError } = useSelector((state) => state.hasMailError);\r\n  const { emojiCharacter } = useSelector((state) => state.selectedEmoji);\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n  const handleFocus = (e) => {\r\n    setInputHasFocus(e.target.name);\r\n  };\r\n  const handleBlur = (e) => {\r\n    if (\r\n      (e.relatedTarget &&\r\n        e.relatedTarget.className &&\r\n        !e.relatedTarget.className.includes(\"btn\")) ||\r\n      e.relatedTarget === null\r\n    ) {\r\n      setInputHasFocus(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmitMessage = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    if (\r\n      socket.connected &&\r\n      recipient.name &&\r\n      inputs.content &&\r\n      newMessageSelected\r\n    ) {\r\n      socket.emit(\"sendNewMessage\", {\r\n        sender: userData._id,\r\n        recipient: recipient._id,\r\n        content: inputs.content,\r\n        date: new Date(),\r\n      });\r\n    } else if (\r\n      socket.connected &&\r\n      recipient.name &&\r\n      inputs.content &&\r\n      !newMessageSelected &&\r\n      messageId\r\n    ) {\r\n      socket.emit(\"sendNewConversation\", {\r\n        messageId: messageId,\r\n        sender: userData._id,\r\n        recipient: recipient._id,\r\n        content: inputs.content,\r\n        date: new Date(),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    if (recipient.name) dispatch(chooseRecipientClearState());\r\n    dispatch(showNewMessageForm(false));\r\n    dispatch(setMessageIdClearState());\r\n    setRecipients([]);\r\n    setInputs({});\r\n    if (newMessageSelected) dispatch(newMessage(false));\r\n    dispatch(conversationWindowOpen(false));\r\n    if (conversations.length > 0) dispatch(setConversationClearState());\r\n  };\r\n\r\n  const handleRemoveRecipient = (e) => {\r\n    e.preventDefault();\r\n    dispatch(chooseRecipientClearState());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsActive(true);\r\n    return () => setIsActive(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (emojiCharacter) {\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        [inputHasFocus]: inputs[inputHasFocus].concat(emojiCharacter),\r\n      }));\r\n      dispatch(showEmojis(false));\r\n    }\r\n  }, [emojiCharacter, inputHasFocus, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (socket.connected && inputs.to && isActive) {\r\n      setSearchLoading(true);\r\n      setShowRecipientSuggestions(true);\r\n      socket.emit(\"searchRecipient\", {\r\n        sender: userData._id,\r\n        searchedUser: inputs.to,\r\n      });\r\n      socket\r\n        .off(\"searchRecipientResult\")\r\n        .on(\"searchRecipientResult\", (data) => {\r\n          if (data.length > 0) {\r\n            if (error.searchRecipientError) {\r\n              setError({});\r\n            }\r\n            setSearchLoading(false);\r\n            setRecipients(data);\r\n          }\r\n        });\r\n      socket.off(\"searchRecipientError\").on(\"searchRecipientError\", (err) => {\r\n        if (err) {\r\n          setSearchLoading(false);\r\n          setError((error) => ({\r\n            ...error,\r\n            searchRecipientError: err,\r\n          }));\r\n          setShowRecipientSuggestions(false);\r\n        }\r\n      });\r\n    } else if (socket.connected && !inputs.to && isActive) {\r\n      setShowRecipientSuggestions(false);\r\n      if (error.searchRecipientError) {\r\n        setError({});\r\n      }\r\n    }\r\n  }, [\r\n    socket,\r\n    userData._id,\r\n    isActive,\r\n    inputs.to,\r\n    error.searchRecipientError,\r\n    error.connectionError,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      socket.connected &&\r\n      recipients.length > 0 &&\r\n      !recipient.name &&\r\n      isActive\r\n    ) {\r\n      socket.off(\"userActive\").on(\"userActive\", (userId) => {\r\n        if (userId) {\r\n          setRecipients(\r\n            recipients.map((recipient) =>\r\n              recipient._id.toString() === userId\r\n                ? { ...recipient, isConnected: true }\r\n                : recipient\r\n            )\r\n          );\r\n        }\r\n      });\r\n      socket.off(\"userInactive\").on(\"userInactive\", (userId) => {\r\n        if (userId) {\r\n          setRecipients(\r\n            recipients.map((recipient) =>\r\n              recipient._id.toString() === userId\r\n                ? { ...recipient, isConnected: false }\r\n                : recipient\r\n            )\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [socket, recipients, recipient, isActive]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (socket.connected && !inputs.to,\r\n      recipient.name && recipients.length === 0 && isActive)\r\n    ) {\r\n      socket.off(\"userActive\").on(\"userActive\", (userId) => {\r\n        if (userId) {\r\n          if (recipient._id === userId)\r\n            dispatch(chooseRecipient({ ...recipient, isConnected: true }));\r\n        }\r\n      });\r\n      socket.off(\"userInactive\").on(\"userInactive\", (userId) => {\r\n        if (userId) {\r\n          if (recipient._id === userId)\r\n            dispatch(chooseRecipient({ ...recipient, isConnected: false }));\r\n        }\r\n      });\r\n      socket.off(\"newMessageSent\").on(\"newMessageSent\", (result) => {\r\n        if (result) {\r\n          setLoading(false);\r\n          dispatch(setConversation(result.messageSent));\r\n          dispatch(setMessageId(result.messageSent[0].message));\r\n          setInputs({});\r\n          dispatch(newMessage(false));\r\n        }\r\n      });\r\n      socket.off(\"newConversationSent\").on(\"newConversationSent\", (result) => {\r\n        if (\r\n          result &&\r\n          windowOpen &&\r\n          result.newConversationContent[0].message === messageId\r\n        ) {\r\n          setLoading(false);\r\n          dispatch(setConversation(result.newConversationContent));\r\n          setInputs({});\r\n        }\r\n      });\r\n    }\r\n  }, [\r\n    socket,\r\n    inputs,\r\n    recipients,\r\n    recipient,\r\n    windowOpen,\r\n    messageId,\r\n    isActive,\r\n    dispatch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (recipient.name && isActive) {\r\n      setShowRecipientSuggestions(false);\r\n      setRecipients([]);\r\n      setInputs((inputs) =>\r\n        (({ to, ...others }) => ({\r\n          ...others,\r\n        }))(inputs)\r\n      );\r\n    }\r\n  }, [recipient, isActive]);\r\n\r\n  let scrollRefCurrentHeight =\r\n    conversationScrollRef.current &&\r\n    conversationScrollRef.current.state.realHeight;\r\n\r\n  useEffect(() => {\r\n    setNewTopPosition(\r\n      conversationScrollRef.current.state.realHeight -\r\n        conversationScrollRef.current.state.containerHeight\r\n    );\r\n  }, [scrollRefCurrentHeight]);\r\n\r\n  useEffect(() => {\r\n    conversationScrollRef.current.scrollArea.scrollYTo(newTopPosition);\r\n  }, [newTopPosition]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      mailError === capitalizeFirst(strings.mails.error.CONNECTION_ERROR) &&\r\n      isActive\r\n    ) {\r\n      setLoading(false);\r\n      setSearchLoading(false);\r\n      dispatch(chooseRecipientClearState());\r\n      dispatch(setMessageIdClearState());\r\n      setRecipients([]);\r\n      setInputs({});\r\n      dispatch(showEmojis(false));\r\n      dispatch(getEmojisClearState());\r\n      if (newMessageSelected) dispatch(newMessage(false));\r\n      if (conversations.length > 0) dispatch(setConversationClearState());\r\n    }\r\n  }, [mailError, newMessageSelected, conversations, isActive, dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket.connected && isActive) {\r\n        socket.removeAllListeners(\"searchRecipientResult\");\r\n        socket.removeAllListeners(\"searchRecipientError\");\r\n        socket.removeAllListeners(\"userActive\");\r\n        socket.removeAllListeners(\"userInactive\");\r\n        socket.removeAllListeners(\"newMessageSent\");\r\n        socket.removeAllListeners(\"newConversationSent\");\r\n      }\r\n    };\r\n  }, [socket, isActive]);\r\n\r\n  return {\r\n    inputs,\r\n    recipients,\r\n    loading,\r\n    searchLoading,\r\n    error,\r\n    conversationScrollRef,\r\n    inputHasFocus,\r\n    handleInputChange,\r\n    handleCancel,\r\n    handleRemoveRecipient,\r\n    handleSubmitMessage,\r\n    handleFocus,\r\n    handleBlur,\r\n    showRecipientSuggestions,\r\n  };\r\n};\r\n\r\nexport default useMessageForm;\r\n","import React from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { userGooglePhoto } from \"../../../shared/testWordsArray\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport \"./recipient.css\";\r\n\r\nconst Recipient = ({ recipient }) => {\r\n  return (\r\n    <div className=\"recipient-box\">\r\n      <div className=\"recipient-photo-box\">\r\n        <Image\r\n          className=\"recipient-photo\"\r\n          src={\r\n            recipient.photo &&\r\n            userGooglePhoto.some(\r\n              (element) => recipient.photo && recipient.photo.includes(element)\r\n            )\r\n              ? recipient.photo\r\n              : recipient.photo\r\n              ? strings.path.IMAGE_REQUEST + recipient.photo\r\n              : require(\"../../../assets/imgs/cookerret.png\")\r\n          }\r\n          roundedCircle\r\n        />\r\n        <div\r\n          className={\r\n            recipient.isConnected ? \"recipient-active\" : \"recipient-inactive\"\r\n          }\r\n        ></div>\r\n      </div>\r\n      <div className=\"recipient-name\">{recipient.name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipient;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport Recipient from \"./Recipient\";\r\nimport { chooseRecipient } from \"../../../redux/mails/chooseRecipient/thunk/chooseRecipientThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst RecipientSuggestions = ({ recipients }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { messages } = useSelector((state) => state.userMessages);\r\n  const messageRecipientIds = messages.map((message) => message.recipient._id);\r\n  const messageSenderIds = messages.map((message) => message.sender._id);\r\n\r\n  return (\r\n    recipients &&\r\n    recipients.length > 0 &&\r\n    recipients.map((recipient, index) => (\r\n      <div key={index} className=\"recipient-suggestions-box\">\r\n        <ListGroup variant=\"flush\">\r\n          {messageRecipientIds.length > 0 &&\r\n          (messageRecipientIds.some((element) =>\r\n            recipient._id.includes(element)\r\n          ) ||\r\n            messageSenderIds.some((element) =>\r\n              recipient._id.includes(element)\r\n            )) ? (\r\n            <ListGroup.Item\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n              className=\"recipient-item-inactive\"\r\n            >\r\n              <Recipient recipient={recipient} />\r\n            </ListGroup.Item>\r\n          ) : (\r\n            <ListGroup.Item\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                dispatch(chooseRecipient(recipient));\r\n              }}\r\n              className=\"recipient-item\"\r\n            >\r\n              <Recipient recipient={recipient} />\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </div>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default RecipientSuggestions;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Image,\r\n  Spinner,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGrin } from \"@fortawesome/free-regular-svg-icons\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport useMessageForm from \"../../hooks/form/mails/useMessageForm\";\r\nimport RecipientSuggestions from \"../../components/mails/suggestions/RecipientSuggestions\";\r\nimport Recipient from \"../../components/mails/suggestions/Recipient\";\r\nimport { showEmojis } from \"../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport { getConversationDate } from \"./getConversationDate\";\r\nimport \"./messageForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MessageForm = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    inputs,\r\n    recipients,\r\n    inputHasFocus,\r\n    handleInputChange,\r\n    handleCancel,\r\n    handleRemoveRecipient,\r\n    handleSubmitMessage,\r\n    handleFocus,\r\n    handleBlur,\r\n    conversationScrollRef,\r\n    loading,\r\n    searchLoading,\r\n    error,\r\n    showRecipientSuggestions,\r\n  } = useMessageForm();\r\n\r\n  const { recipient } = useSelector((state) => state.isRecipientChosen);\r\n  const { newMessageSelected } = useSelector(\r\n    (state) => state.isNewMessageSelected\r\n  );\r\n  const { conversations } = useSelector((state) => state.userConversations);\r\n\r\n  return (\r\n    <Form>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicTo\">\r\n            {!recipient.name && newMessageSelected ? (\r\n              <div className=\"myevents-icon-address-box\">\r\n                <Form.Control\r\n                  className=\"message-form-control\"\r\n                  onChange={handleInputChange}\r\n                  value={inputs.to || \"\"}\r\n                  onFocus={handleFocus}\r\n                  onBlur={handleBlur}\r\n                  size=\"lg\"\r\n                  name=\"to\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder={strings.mails.TO_PLACEHOLDER}\r\n                />\r\n                <div className=\"myevents-input-spinner\">\r\n                  {searchLoading && <Spinner animation=\"border\" size=\"sm\" />}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"message-form-recipient\">\r\n                <Recipient recipient={recipient} />\r\n                {newMessageSelected && (\r\n                  <FontAwesomeIcon\r\n                    onClick={handleRemoveRecipient}\r\n                    className=\"message-form-recipient-trash\"\r\n                    icon={faTimes}\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n            <div className=\"message-form-adress-suggestion-group\">\r\n              {showRecipientSuggestions && (\r\n                <RecipientSuggestions recipients={recipients} />\r\n              )}\r\n              {error.searchRecipientError && (\r\n                <div className=\"myevents-form-image-error\">\r\n                  {error.searchRecipientError}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"message-form-conversation-box\">\r\n            <ScrollArea\r\n              ref={conversationScrollRef}\r\n              className=\"message-form-conversation-scroll\"\r\n              smoothScrolling={true}\r\n              horizontal={false}\r\n            >\r\n              {conversations &&\r\n                conversations.length > 0 &&\r\n                conversations.map((conversation, index) => (\r\n                  <ListGroup key={index} variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      <div className=\"conversation-area\">\r\n                        <div className=\"conversation-author-box\">\r\n                          <Image\r\n                            className=\"conversation-author-image\"\r\n                            src={\r\n                              conversation.author.photo &&\r\n                              userGooglePhoto.some(\r\n                                (element) =>\r\n                                  conversation.author.photo &&\r\n                                  conversation.author.photo.includes(element)\r\n                              )\r\n                                ? conversation.author.photo\r\n                                : conversation.author.photo\r\n                                ? strings.path.IMAGE_REQUEST +\r\n                                  conversation.author.photo\r\n                                : require(\"../../assets/imgs/cookerret.png\")\r\n                            }\r\n                            roundedCircle\r\n                          />\r\n                          <div className=\"conversation-author\">\r\n                            {conversation.author.name}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"conversation-date\">\r\n                          {getConversationDate(new Date(conversation.date))}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"conversation-content\">\r\n                        {conversation.content}\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                ))}\r\n            </ScrollArea>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicContent\">\r\n            <Form.Control\r\n              className=\"message-form-control\"\r\n              onChange={handleInputChange}\r\n              value={inputs.content || \"\"}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              size=\"lg\"\r\n              name=\"content\"\r\n              type=\"text\"\r\n              placeholder={strings.mails.CONTENT_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"message-form-buttons-box\">\r\n            <div className=\"global-emoji-wrapper\">\r\n              <Button\r\n                onClick={handleSubmitMessage}\r\n                className=\"global-button-label\"\r\n                type=\"submit\"\r\n                variant=\"outline-dark\"\r\n                disabled={\r\n                  loading ||\r\n                  !recipient.name ||\r\n                  inputs.content === undefined ||\r\n                  inputs.content === \"\"\r\n                }\r\n              >\r\n                <div className=\"message-spinner\">\r\n                  {loading && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                {loading ? (\r\n                  <div className=\"message-button-loading\">\r\n                    {capitalizeFirst(strings.mails.BUTTON_SEND_LOADING)}\r\n                  </div>\r\n                ) : (\r\n                  <div>{capitalizeFirst(strings.mails.BUTTON_SEND)}</div>\r\n                )}\r\n              </Button>\r\n              <Button\r\n                className=\"global-emoji-button\"\r\n                disabled={\r\n                  inputHasFocus !== \"content\" ||\r\n                  inputs.content === \"\" ||\r\n                  inputs.content === undefined\r\n                }\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showEmojis(true));\r\n                }}\r\n                size=\"sm\"\r\n                variant=\"light\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  className=\"global-emoji-button-icon\"\r\n                  icon={faGrin}\r\n                />\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              onClick={handleCancel}\r\n              className=\"global-button-label\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              {capitalizeFirst(strings.rating.BUTTON_CANCEL_TEXT)}\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\n\r\nexport const getConversationDate = (conversationDate) => {\r\n  return (\r\n    <>\r\n      {conversationDate.getDate() < 10\r\n        ? `0${conversationDate.getDate()}`\r\n        : conversationDate.getDate()}\r\n      /\r\n      {conversationDate.getMonth() + 1 < 10\r\n        ? `0${conversationDate.getMonth() + 1}`\r\n        : conversationDate.getMonth() + 1}\r\n      /{conversationDate.getFullYear()},{\" \"}\r\n      {conversationDate.getHours() < 10\r\n        ? `0${conversationDate.getHours()}`\r\n        : conversationDate.getHours()}\r\n      :\r\n      {conversationDate.getMinutes() < 10\r\n        ? `0${conversationDate.getMinutes()}`\r\n        : conversationDate.getMinutes()}\r\n    </>\r\n  );\r\n};\r\n","import { mailsComponentActiveCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const mailsComponentActive = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: mailsComponentActiveCases.MAILS_ACTIVE, payload: bool });\r\n  };\r\n};\r\n","import { mailErrorCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const setMailError = (err) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: mailErrorCases.ERROR_RETRIEVED, payload: err });\r\n  };\r\n};\r\n\r\nexport const mailErrorClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: mailErrorCases.CLEAR_STATE });\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setMessages,\r\n  setMessagesClearState,\r\n} from \"../../../redux/mails/setMessages/thunk/setMessagesThunk\";\r\nimport { mailsComponentActive } from \"../../../redux/mails/mailsComponentActive/thunk/mailsComponentActiveThunk\";\r\nimport {\r\n  setMailError,\r\n  mailErrorClearState,\r\n} from \"../../../redux/mails/mailError/thunk/mailErrorThunk\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nconst useMailsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { socket } = useSelector((state) => state.socketData);\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { messages } = useSelector((state) => state.userMessages);\r\n  const { newMessageSelected } = useSelector(\r\n    (state) => state.isNewMessageSelected\r\n  );\r\n  const { windowOpen } = useSelector((state) => state.isConversationWindowOpen);\r\n  const { messageId } = useSelector((state) => state.isMessageId);\r\n\r\n  useEffect(() => {\r\n    setIsActive(true);\r\n    dispatch(mailsComponentActive(true));\r\n    return () => {\r\n      setIsActive(false);\r\n      dispatch(mailsComponentActive(false));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (socket.connected && !newMessageSelected && !windowOpen && isActive) {\r\n      setLoading(true);\r\n      socket.emit(\"getMessages\", userData._id);\r\n      socket.off(\"messagesRetrieved\").on(\"messagesRetrieved\", (data) => {\r\n        if (data.length > 0) {\r\n          dispatch(mailErrorClearState());\r\n          setLoading(false);\r\n          dispatch(setMessages(data));\r\n        }\r\n      });\r\n      socket.off(\"getMessagesError\").on(\"getMessagesError\", (err) => {\r\n        if (err) {\r\n          setLoading(false);\r\n          dispatch(setMailError(err));\r\n          dispatch(setMessagesClearState());\r\n        }\r\n      });\r\n    }\r\n  }, [\r\n    socket,\r\n    isActive,\r\n    userData._id,\r\n    windowOpen,\r\n    newMessageSelected,\r\n    dispatch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      socket.connected &&\r\n      windowOpen &&\r\n      messageId &&\r\n      messages.length > 0 &&\r\n      isActive\r\n    ) {\r\n      const messageUnread = messages.filter(\r\n        (message) => message._id.toString() === messageId\r\n      )[0];\r\n      if (\r\n        messageUnread &&\r\n        messageUnread._id &&\r\n        ((userData._id === messageUnread.recipient._id &&\r\n          userData._id !==\r\n            messageUnread.conversations[messageUnread.conversations.length - 1]\r\n              .author._id) ||\r\n          (userData._id === messageUnread.sender._id &&\r\n            userData._id !==\r\n              messageUnread.conversations[\r\n                messageUnread.conversations.length - 1\r\n              ].author._id))\r\n      ) {\r\n        socket.emit(\"messageRead\", messageUnread._id);\r\n        socket\r\n          .off(\"messageReadSetListInfo\")\r\n          .on(\"messageReadSetListInfo\", (result) => {\r\n            if (result) {\r\n              socket.emit(\"getMessages\", userData._id);\r\n              socket\r\n                .off(\"messagesRetrieved\")\r\n                .on(\"messagesRetrieved\", (data) => {\r\n                  if (data.length > 0) {\r\n                    dispatch(setMessages(data));\r\n                  }\r\n                });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }, [socket, windowOpen, messageId, userData._id, isActive, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (socket.connected && messages.length > 0 && isActive) {\r\n      socket.off(\"userActiveListInfo\").on(\"userActiveListInfo\", (res) => {\r\n        if (res || !res) {\r\n          socket.emit(\"getMessages\", userData._id);\r\n          socket.off(\"messagesRetrieved\").on(\"messagesRetrieved\", (data) => {\r\n            if (data.length > 0) {\r\n              dispatch(setMessages(data));\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [socket, isActive, messages, userData._id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (socket.connected && isActive) {\r\n      socket\r\n        .off(\"newMessageSentListInfo\")\r\n        .on(\"newMessageSentListInfo\", (result) => {\r\n          if (result) {\r\n            socket.emit(\"getMessages\", userData._id);\r\n            socket.off(\"messagesRetrieved\").on(\"messagesRetrieved\", (data) => {\r\n              if (data.length > 0) {\r\n                dispatch(mailErrorClearState());\r\n                dispatch(setMessages(data));\r\n              }\r\n            });\r\n          }\r\n        });\r\n      socket\r\n        .off(\"messageReadSetListInfo\")\r\n        .on(\"messageReadSetListInfo\", (result) => {\r\n          if (result) {\r\n            socket.emit(\"getMessages\", userData._id);\r\n            socket.off(\"messagesRetrieved\").on(\"messagesRetrieved\", (data) => {\r\n              if (data.length > 0) {\r\n                dispatch(setMessages(data));\r\n              }\r\n            });\r\n          }\r\n        });\r\n      socket\r\n        .off(\"newConversationListInfo\")\r\n        .on(\"newConversationListInfo\", (conversationMessageId) => {\r\n          if (conversationMessageId) {\r\n            if (windowOpen && conversationMessageId !== messageId) {\r\n              socket.emit(\"messageUnread\", conversationMessageId);\r\n              socket\r\n                .off(\"messageUnreadSetListInfo\")\r\n                .on(\"messageUnreadSetListInfo\", (result) => {\r\n                  if (result) {\r\n                    socket.emit(\"getMessages\", userData._id);\r\n                    socket\r\n                      .off(\"messagesRetrieved\")\r\n                      .on(\"messagesRetrieved\", (data) => {\r\n                        if (data.length > 0) {\r\n                          dispatch(setMessages(data));\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            } else if (!windowOpen) {\r\n              socket.emit(\"messageUnread\", conversationMessageId);\r\n              socket\r\n                .off(\"messageUnreadSetListInfo\")\r\n                .on(\"messageUnreadSetListInfo\", (result) => {\r\n                  if (result) {\r\n                    socket.emit(\"getMessages\", userData._id);\r\n                    socket\r\n                      .off(\"messagesRetrieved\")\r\n                      .on(\"messagesRetrieved\", (data) => {\r\n                        if (data.length > 0) {\r\n                          dispatch(setMessages(data));\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }, [socket, userData._id, isActive, messageId, windowOpen, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (socket.connected && isActive) {\r\n      socket.off(\"disconnect\").on(\"disconnect\", () => {\r\n        setLoading(false);\r\n        dispatch(\r\n          setMailError(capitalizeFirst(strings.mails.error.CONNECTION_ERROR))\r\n        );\r\n        dispatch(setMessagesClearState());\r\n      });\r\n      socket.off(\"reconnect\").on(\"reconnect\", () => {\r\n        setLoading(true);\r\n        socket.emit(\"getMessages\", userData._id);\r\n        socket.off(\"messagesRetrieved\").on(\"messagesRetrieved\", (data) => {\r\n          if (data.length > 0) {\r\n            dispatch(mailErrorClearState());\r\n            setLoading(false);\r\n            dispatch(setMessages(data));\r\n          }\r\n        });\r\n        socket.off(\"getMessagesError\").on(\"getMessagesError\", (err) => {\r\n          if (err) {\r\n            setLoading(false);\r\n            dispatch(setMailError(err));\r\n            dispatch(setMessagesClearState());\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, [socket, userData._id, isActive, dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (socket.connected && isActive) {\r\n        socket.removeAllListeners(\"messagesRetrieved\");\r\n        socket.removeAllListeners(\"getMessagesError\");\r\n        socket.removeAllListeners(\"userActiveListInfo\");\r\n        socket.removeAllListeners(\"messageReadSetListInfo\");\r\n        socket.removeAllListeners(\"messageUnreadSetListInfo\");\r\n        socket.removeAllListeners(\"newMessageSentListInfo\");\r\n        socket.removeAllListeners(\"newConversationListInfo\");\r\n        socket.removeAllListeners(\"disconnect\");\r\n        socket.removeAllListeners(\"reconnect\");\r\n      }\r\n    };\r\n  }, [socket, isActive]);\r\n\r\n  return { loading };\r\n};\r\n\r\nexport default useMailsList;\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport Img from \"react-image\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope } from \"@fortawesome/free-regular-svg-icons\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport * as timeago from \"timeago.js\";\r\nimport pl from \"timeago.js/lib/lang/pl\";\r\nimport { createDate } from \"../../util/Util\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { continueConversation } from \"../../redux/mails/continueConversation/thunk/continueConversationThunk\";\r\nimport useMailsList from \"../../hooks/screen/mails/useMailsList\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport \"./mails.css\";\r\n\r\nconst MailsList = () => {\r\n  timeago.register(\"pl\", pl);\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading } = useMailsList();\r\n  const { messages } = useSelector((state) => state.userMessages);\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { mailError } = useSelector((state) => state.hasMailError);\r\n\r\n  return loading ? (\r\n    <div className=\"mails-list-loading-area\">\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"light\" />\r\n    </div>\r\n  ) : mailError ? (\r\n    <div className=\"mails-list-item-norecipes\">{mailError}</div>\r\n  ) : (\r\n    <div className=\"mails-list-main-area\">\r\n      {messages.length > 0 &&\r\n        messages.map((message, index) => (\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(continueConversation(message, userData._id));\r\n            }}\r\n            className=\"mails-list-item\"\r\n            key={index}\r\n          >\r\n            <Row>\r\n              <Col xs={3}>\r\n                <div className=\"mails-list-photo-box\">\r\n                  <Img\r\n                    className=\"mails-list-item-picture\"\r\n                    src={\r\n                      message.recipient._id !== userData._id\r\n                        ? userGooglePhoto.some(\r\n                            (element) =>\r\n                              message.recipient.photo &&\r\n                              message.recipient.photo.includes(element)\r\n                          )\r\n                          ? message.recipient.photo\r\n                          : !userGooglePhoto.some(\r\n                              (element) =>\r\n                                message.recipient.photo &&\r\n                                message.recipient.photo.includes(element)\r\n                            ) && message.recipient.photo\r\n                          ? strings.path.IMAGE_REQUEST + message.recipient.photo\r\n                          : require(\"../../assets/imgs/cookerret.png\")\r\n                        : userGooglePhoto.some(\r\n                            (element) =>\r\n                              message.sender.photo &&\r\n                              message.sender.photo.includes(element)\r\n                          )\r\n                        ? message.sender.photo\r\n                        : !userGooglePhoto.some(\r\n                            (element) =>\r\n                              message.sender.photo &&\r\n                              message.sender.photo.includes(element)\r\n                          ) && message.sender.photo\r\n                        ? strings.path.IMAGE_REQUEST + message.sender.photo\r\n                        : require(\"../../assets/imgs/cookerret.png\")\r\n                    }\r\n                    loader={\r\n                      <div className=\"mails-loading-picture-box\">\r\n                        <Spinner animation=\"border\" variant=\"info\" />\r\n                      </div>\r\n                    }\r\n                  />\r\n                  <div\r\n                    className={\r\n                      message.recipient.email !== userData.email\r\n                        ? message.recipient.isConnected\r\n                          ? \"mails-recipient-active\"\r\n                          : \"mails-recipient-inactive\"\r\n                        : message.sender.isConnected\r\n                        ? \"mails-recipient-active\"\r\n                        : \"mails-recipient-inactive\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n              </Col>\r\n              <Col xs={9}>\r\n                <Row>\r\n                  <Col xs={7} />\r\n                  <Col xs={5}>\r\n                    <div>\r\n                      <TimeAgo\r\n                        className=\"mails-item-timeago\"\r\n                        datetime={createDate(\r\n                          message.conversations[\r\n                            message.conversations.length - 1\r\n                          ].date\r\n                        )}\r\n                        locale=\"pl\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"mails-list-item-title\">\r\n                  {message.recipient._id !== userData._id\r\n                    ? message.recipient.name\r\n                    : message.sender.name}\r\n                </div>\r\n                <div style={{ height: 5 }} />\r\n                <div className=\"mails-list-item-author\">\r\n                  <div className=\"mails-list-item-icon\">\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      !message.isRead &&\r\n                      ((userData._id === message.recipient._id &&\r\n                        userData._id !==\r\n                          message.conversations[\r\n                            message.conversations.length - 1\r\n                          ].author._id) ||\r\n                        (userData._id === message.sender._id &&\r\n                          userData._id !==\r\n                            message.conversations[\r\n                              message.conversations.length - 1\r\n                            ].author._id))\r\n                        ? \"mails-list-item-message-unread\"\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    {message.conversations[message.conversations.length - 1]\r\n                      .content.length > 64\r\n                      ? message.conversations[\r\n                          message.conversations.length - 1\r\n                        ].content\r\n                          .substr(0, 64)\r\n                          .concat(\" ...\")\r\n                      : message.conversations[message.conversations.length - 1]\r\n                          .content}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailsList;\r\n","import {\r\n  showNewMessageFormCases,\r\n  setMessageIdCases,\r\n  chooseRecipientCases,\r\n  setConversationCases,\r\n  conversationWindowOpenCases,\r\n} from \"../../../config/cases/Cases\";\r\nimport { sortConversationsByDate } from \"./sortConversationsByDate\";\r\n\r\nexport const continueConversation = (message, userDataId) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: setMessageIdCases.ID_RETRIEVED, payload: message._id });\r\n    dispatch({\r\n      type: chooseRecipientCases.RECIPIENT_CHOSEN,\r\n      payload:\r\n        userDataId === message.sender._id ? message.recipient : message.sender,\r\n    });\r\n    dispatch({\r\n      type: setConversationCases.CONVERSATION_RETRIEVED,\r\n      payload: sortConversationsByDate(message),\r\n    });\r\n    dispatch({ type: conversationWindowOpenCases.WINDOW_OPEN, payload: true });\r\n    dispatch({ type: showNewMessageFormCases.FORM_SHOWN, payload: true });\r\n  };\r\n};\r\n","export const sortConversationsByDate = (data) => {\r\n  return data.conversations.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n};\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { Row, Col, Button, ListGroup, Image } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showNewMessageForm } from \"../../redux/mails/showNewMessageForm/thunk/showNewMessageThunk\";\r\nimport { newMessage } from \"../../redux/mails/newMessageSelected/thunk/newMessageSelectedThunk\";\r\nimport { conversationWindowOpen } from \"../../redux/mails/conversationWindowOpen/thunk/conversationWindowOpenThunk\";\r\nimport MessageForm from \"../../forms/mails/MessageForm\";\r\nimport MailsList from \"./MailsList\";\r\nimport Emoji from \"../../components/emoji/Emoji\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport \"./mails.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst Mails = ({ match: { path, url, isExact } }) => {\r\n  const dispatch = useDispatch();\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n  });\r\n\r\n  const { newMessageFormShown } = useSelector(\r\n    (state) => state.isNewMessageFormShown\r\n  );\r\n  const { emojisShown } = useSelector((state) => state.isEmojiShown);\r\n\r\n  return (\r\n    <animated.div className=\"mails-area\" style={props}>\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <div className=\"mails-first-section\">\r\n        <Row>\r\n          <Col xs={3} />\r\n          <Col xs={9}>\r\n            <div className=\"myrecipes-list\">\r\n              <ScrollArea\r\n                className=\"myrecipes-scroll-area\"\r\n                smoothScrolling={true}\r\n              >\r\n                <ListGroup>\r\n                  <MailsList />\r\n                </ListGroup>\r\n              </ScrollArea>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"mails-second-section\">\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-3\" />\r\n        {!newMessageFormShown && (\r\n          <>\r\n            <Row>\r\n              <Col xs={5} />\r\n              <Col xs={2}>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch(newMessage(true));\r\n                    dispatch(showNewMessageForm(true));\r\n                    dispatch(conversationWindowOpen(true));\r\n                  }}\r\n                  className=\"myrecipes-button-new-recipe\"\r\n                  variant=\"outline-dark\"\r\n                >\r\n                  <FontAwesomeIcon\r\n                    className=\"mails-button-icon\"\r\n                    icon={faEnvelope}\r\n                  />\r\n                  <div className=\"myevents-button-new-event\">\r\n                    {capitalize(strings.mails.BUTTON_NEW_MESSAGE)}\r\n                  </div>\r\n                </Button>\r\n              </Col>\r\n              <Col xs={5} />\r\n            </Row>\r\n            <Row className=\"mb-5\" />\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={10}>\r\n                <div className=\"mails-clean-message-info\">\r\n                  {strings.mails.CLEAN_MESSAGE_INFO}\r\n                </div>\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </>\r\n        )}\r\n        {!newMessageFormShown && (\r\n          <>\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row>\r\n              <Col xs={9}>\r\n                <Image\r\n                  className=\"mails-image\"\r\n                  src={require(\"../../assets/imgs/cookfriendsret.jpg\")}\r\n                />\r\n              </Col>\r\n              <Col xs={3} />\r\n            </Row>\r\n          </>\r\n        )}\r\n        {newMessageFormShown && (\r\n          <Row>\r\n            <Col xs={2} />\r\n            <Col xs={8}>\r\n              <MessageForm />\r\n            </Col>\r\n            <Col xs={2} />\r\n          </Row>\r\n        )}\r\n      </div>\r\n      {emojisShown && (\r\n        <div className=\"global-emoji-overlay\">\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={4} />\r\n            <Col xs={4}>\r\n              <Emoji />\r\n            </Col>\r\n            <Col xs={4} />\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Mails;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { eventButtonItemsArray } from \"../../../shared/buttonItemsArray\";\r\nimport { getEvents } from \"../../../redux/myEvents/retrieveEvents/thunk/retrieveEventsThunk\";\r\n\r\nconst useMyEvents = () => {\r\n  const [skip, setSkip] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n  const { eventsError } = useSelector((state) => state.events);\r\n  const { userData } = useSelector((state) => state.login);\r\n\r\n  const handlePrev = (e) => {\r\n    e.preventDefault();\r\n    skip > 1 && setSkip(skip - 1);\r\n  };\r\n  const handleNext = (e) => {\r\n    e.preventDefault();\r\n    !eventsError && setSkip(skip + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSkip(1);\r\n  }, [eventButtonId]);\r\n\r\n  useEffect(() => {\r\n    const limit = 30;\r\n    dispatch(\r\n      getEvents(\r\n        eventButtonItemsArray[eventButtonId].category,\r\n        userData._id,\r\n        userData.email,\r\n        skip,\r\n        limit\r\n      )\r\n    );\r\n  }, [skip, userData._id, userData.email, dispatch]);\r\n\r\n  return { skip, handlePrev, handleNext };\r\n};\r\n\r\nexport default useMyEvents;\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport Img from \"react-image\";\r\nimport { eventData } from \"../../redux/myEvents/eventPreview/thunk/eventPreviewThunk\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faUsers, faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport * as timeago from \"timeago.js\";\r\nimport pl from \"timeago.js/lib/lang/pl\";\r\nimport { createDate } from \"../../util/Util\";\r\nimport \"./myEvents.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyEventsList = () => {\r\n  timeago.register(\"pl\", pl);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loadingEvents, eventsRetrieved, eventsError } = useSelector(\r\n    (state) => state.events\r\n  );\r\n\r\n  return loadingEvents ? (\r\n    <div className=\"myevents-loading-area\">\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"light\" />\r\n    </div>\r\n  ) : eventsError ? (\r\n    <div className=\"myevents-item-noevents\">{eventsError}</div>\r\n  ) : (\r\n    <div className=\"myevents-list-main-area\">\r\n      {eventsRetrieved !== null &&\r\n        eventsRetrieved.map((eventRetrieved, index) => (\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(eventData(eventRetrieved));\r\n            }}\r\n            className=\"myevents-item\"\r\n            key={index}\r\n          >\r\n            <Row>\r\n              <Col xs={3}>\r\n                <Img\r\n                  className=\"myevents-item-picture\"\r\n                  src={\r\n                    eventRetrieved.eventImage\r\n                      ? strings.path.IMAGE_REQUEST + eventRetrieved.eventImage\r\n                      : require(\"../../assets/imgs/eventret.jpg\")\r\n                  }\r\n                  loader={\r\n                    <div className=\"global-list-picture-loading-box\">\r\n                      <Spinner animation=\"border\" variant=\"info\" />\r\n                    </div>\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col xs={9}>\r\n                <Row>\r\n                  <Col xs={7} />\r\n                  <Col xs={5}>\r\n                    <div>\r\n                      <TimeAgo\r\n                        className=\"myevents-item-timeago\"\r\n                        datetime={createDate(eventRetrieved.creationDate)}\r\n                        locale=\"pl\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"myevents-item-title\">\r\n                  {eventRetrieved.title}\r\n                </div>\r\n                <div style={{ height: 5 }} />\r\n                <div className=\"myevents-item-author\">\r\n                  <div className=\"myevents-item-icon\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                  </div>\r\n                  <div>{eventRetrieved.author.name}</div>\r\n                </div>\r\n                <div className=\"myevents-item-available-places\">\r\n                  <div className=\"myevents-item-icon\">\r\n                    <FontAwesomeIcon icon={faUsers} />\r\n                  </div>\r\n                  <div>\r\n                    {eventRetrieved.participants\r\n                      ? eventRetrieved.participants.length\r\n                      : 0}\r\n                  </div>\r\n                </div>\r\n                <div className=\"myevents-item-location\">\r\n                  <div className=\"myevents-item-icon\">\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n                  </div>\r\n                  <div>{eventRetrieved.eventAddress.city}</div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEventsList;\r\n","import { showNewEventFormCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showNewEventForm = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showNewEventFormCases.FORM_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import { showCalendarCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showCalendar = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showCalendarCases.CALENDAR_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import { selectEventDateCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const selectEventDate = (date) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: selectEventDateCases.DATE_RETRIEVED, payload: date });\r\n  };\r\n};\r\n\r\nexport const selectEventDateClearState = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: selectEventDateCases.CLEAR_STATE });\r\n  };\r\n};\r\n","export const generateZoom = (selectedAddress) => {\r\n  return selectedAddress.address &&\r\n    selectedAddress.address.houseNumber &&\r\n    selectedAddress.address.street &&\r\n    selectedAddress.address.city &&\r\n    selectedAddress.address.country\r\n    ? 17\r\n    : selectedAddress.address &&\r\n      !selectedAddress.address.houseNumber &&\r\n      selectedAddress.address.street &&\r\n      selectedAddress.address.city &&\r\n      selectedAddress.address.country\r\n    ? 15\r\n    : selectedAddress.address &&\r\n      !selectedAddress.address.houseNumber &&\r\n      !selectedAddress.address.street &&\r\n      selectedAddress.address.city &&\r\n      selectedAddress.address.country\r\n    ? 10\r\n    : selectedAddress.address &&\r\n      !selectedAddress.address.houseNumber &&\r\n      !selectedAddress.address.street &&\r\n      !selectedAddress.address.city &&\r\n      selectedAddress.address.country\r\n    ? 4\r\n    : 10;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAddress,\r\n  getAddressClearState,\r\n} from \"../../../redux/myEvents/getAddress/thunk/getAddressThunk\";\r\nimport {\r\n  addNewEvent,\r\n  editEvent,\r\n} from \"../../../redux/myEvents/changeEvent/thunk/changeEventThunk\";\r\nimport { makeImageBinary } from \"../../../shared/makeImageBinary\";\r\nimport { getImage } from \"../../../shared/getImage\";\r\nimport { selectEventAddressClearState } from \"../../../redux/myEvents/selectEventAddress/thunk/selectEventAddressThunk\";\r\nimport { getLocationDetailsClearState } from \"../../../redux/myEvents/getLocationDetails/thunk/getLocationDetailsThunk\";\r\nimport { changeEventClearState } from \"../../../redux/myEvents/changeEvent/thunk/changeEventThunk\";\r\nimport { toEditEventClearState } from \"../../../redux/myEvents/toEditEvent/thunk/toEditEventThunk\";\r\nimport { showNewEventForm } from \"../../../redux/myEvents/showNewEventForm/thunk/showNewEventFormThunk\";\r\nimport { showCalendar } from \"../../../redux/myEvents/showCalendar/thunk/showCalendarThunk\";\r\nimport { showEmojis } from \"../../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { selectEventDate } from \"../../../redux/myEvents/selectEventDate/thunk/selectEventDateThunk\";\r\nimport { generateZoom } from \"../../../shared/generateZoom\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nconst useMyEventsForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({});\r\n  const [error, setError] = useState({});\r\n  const [addressObj, setAddressObj] = useState({});\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [loadingImage, setLoadingImage] = useState(false);\r\n  const [inputHasFocus, setInputHasFocus] = useState(\"\");\r\n\r\n  const { selectedAddress } = useSelector(\r\n    (state) => state.selectedEventAddress\r\n  );\r\n  const { addressChosen } = useSelector((state) => state.isEventAddressChosen);\r\n  const { locationDetailsRetrieved } = useSelector(\r\n    (state) => state.locationDetails\r\n  );\r\n  const { eventUpdated } = useSelector((state) => state.isEventChanged);\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { eventToEdit } = useSelector((state) => state.toEditEvent);\r\n  const { eventDate } = useSelector((state) => state.eventDateSelected);\r\n  const { emojiCharacter } = useSelector((state) => state.selectedEmoji);\r\n\r\n  const handleOnChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]:\r\n        e.target.name === strings.myEvents.inputName.TITLE\r\n          ? capitalizeFirst(e.target.value)\r\n          : e.target.name === strings.myEvents.inputName.DESCRIPTION\r\n          ? capitalizeFirst(e.target.value)\r\n          : e.target.name === strings.myEvents.inputName.AVAILABLE_PLACES\r\n          ? parseInt(e.target.value) > 500\r\n            ? (e.target.value = \"500\")\r\n            : e.target.value[0] === \"0\"\r\n            ? (e.target.value = \"1\")\r\n            : e.target.value.replace(/[^0-9]+/g, \"\")\r\n          : e.target.name === strings.myEvents.TEL\r\n          ? e.target.value.replace(/[^0-9]+/g, \"\")\r\n          : e.target.value,\r\n    }));\r\n  };\r\n  const handlePicture = async (picture) => {\r\n    try {\r\n      if (picture.length > 0) {\r\n        setLoadingImage(true);\r\n        const result = await makeImageBinary(picture);\r\n        if (result) {\r\n          setLoadingImage(false);\r\n          setInputs((inputs) => ({\r\n            ...inputs,\r\n            eventImage: result,\r\n          }));\r\n          if (error.imageError) {\r\n            setError((error) =>\r\n              (({ imageError, ...others }) => ({\r\n                ...others,\r\n              }))(error)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        setLoadingImage(false);\r\n        setError((error) => ({\r\n          ...error,\r\n          imageError: err,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n  const handleShowCalendar = (e) => {\r\n    e.preventDefault();\r\n    dispatch(showCalendar(true));\r\n  };\r\n  const handleRemoveImage = (e) => {\r\n    e.preventDefault();\r\n    setInputs((inputs) =>\r\n      (({ eventImage, ...others }) => ({\r\n        ...others,\r\n      }))(inputs)\r\n    );\r\n    if (error.imageError) {\r\n      setError((error) =>\r\n        (({ imageError, ...others }) => ({\r\n          ...others,\r\n        }))(error)\r\n      );\r\n    }\r\n  };\r\n  const handleFocus = (e) => {\r\n    setInputHasFocus(e.target.name);\r\n  };\r\n  const handleBlur = (e) => {\r\n    if (\r\n      (e.relatedTarget &&\r\n        e.relatedTarget.className &&\r\n        !e.relatedTarget.className.includes(\"btn\")) ||\r\n      e.relatedTarget === null\r\n    ) {\r\n      setInputHasFocus(\"\");\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (eventToEdit.eventData) {\r\n      dispatch(\r\n        editEvent(\r\n          inputs.title,\r\n          inputs.eventImage,\r\n          addressObj,\r\n          inputs.description,\r\n          parseInt(inputs.availablePlaces),\r\n          new Date(eventDate),\r\n          parseInt(inputs.tel),\r\n          eventToEdit.eventData.id,\r\n          eventToEdit.addressData.id,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addNewEvent(\r\n          inputs.title,\r\n          inputs.eventImage,\r\n          addressObj,\r\n          inputs.description,\r\n          parseInt(inputs.availablePlaces),\r\n          new Date(eventDate),\r\n          parseInt(inputs.tel),\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emojiCharacter) {\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        [inputHasFocus]: inputs[inputHasFocus].concat(emojiCharacter),\r\n      }));\r\n      dispatch(showEmojis(false));\r\n    }\r\n  }, [emojiCharacter, inputHasFocus, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (inputs.address) {\r\n      dispatch(getAddress(inputs.address));\r\n      setShowSuggestions(true);\r\n    } else {\r\n      dispatch(getAddressClearState());\r\n      dispatch(getLocationDetailsClearState());\r\n      dispatch(selectEventAddressClearState());\r\n      setShowSuggestions(false);\r\n      setAddressObj({});\r\n    }\r\n  }, [inputs.address, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (addressChosen && inputs.address) ||\r\n      (eventToEdit.addressData &&\r\n        eventToEdit.addressData.label === inputs.address)\r\n    )\r\n      setShowSuggestions(false);\r\n  }, [addressChosen, inputs.address, eventToEdit.addressData]);\r\n\r\n  useEffect(() => {\r\n    if (selectedAddress.label) {\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        address: selectedAddress.label,\r\n      }));\r\n      if (locationDetailsRetrieved.displayPosition)\r\n        setAddressObj((addressObj) => ({\r\n          ...addressObj,\r\n          label: selectedAddress.label,\r\n          streetNumber: parseInt(selectedAddress.address.houseNumber),\r\n          streetName: selectedAddress.address.street,\r\n          postCode: selectedAddress.address.postalCode,\r\n          city: selectedAddress.address.city,\r\n          country: selectedAddress.address.country,\r\n          latitude: locationDetailsRetrieved.displayPosition.latitude,\r\n          longitude: locationDetailsRetrieved.displayPosition.longitude,\r\n          zoom: generateZoom(selectedAddress),\r\n        }));\r\n      if (addressObj.streetName && !addressObj.streetNumber) {\r\n        setAddressObj((addressObj) =>\r\n          (({ streetNumber, ...others }) => ({\r\n            ...others,\r\n          }))(addressObj)\r\n        );\r\n      } else if (\r\n        addressObj.city &&\r\n        !addressObj.streetName &&\r\n        !addressObj.streetNumber\r\n      ) {\r\n        setAddressObj((addressObj) =>\r\n          (({ streetName, streetNumber, ...others }) => ({\r\n            ...others,\r\n          }))(addressObj)\r\n        );\r\n      } else if (\r\n        addressObj.country &&\r\n        !addressObj.city &&\r\n        !addressObj.streetName &&\r\n        !addressObj.streetNumber\r\n      ) {\r\n        setAddressObj((addressObj) =>\r\n          (({ streetName, streetNumber, city, ...others }) => ({\r\n            ...others,\r\n          }))(addressObj)\r\n        );\r\n      }\r\n    } else if (!selectedAddress.label && !eventToEdit.eventData) {\r\n      setInputs((inputs) =>\r\n        (({ address, ...others }) => ({\r\n          ...others,\r\n        }))(inputs)\r\n      );\r\n      setAddressObj({});\r\n    }\r\n  }, [\r\n    selectedAddress,\r\n    locationDetailsRetrieved.displayPosition,\r\n    addressObj.city,\r\n    addressObj.streetName,\r\n    addressObj.streetNumber,\r\n    addressObj.country,\r\n    eventToEdit,\r\n    dispatch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (inputs.address &&\r\n        selectedAddress.label &&\r\n        selectedAddress.label === inputs.address &&\r\n        locationDetailsRetrieved.displayPosition) ||\r\n      (inputs.address &&\r\n        eventToEdit.addressData &&\r\n        inputs.address === eventToEdit.addressData.label)\r\n    ) {\r\n      setShowMap(true);\r\n    } else if (\r\n      !inputs.address &&\r\n      !selectedAddress.label &&\r\n      !locationDetailsRetrieved.displayPosition\r\n    ) {\r\n      setShowMap(false);\r\n    }\r\n  }, [\r\n    selectedAddress.label,\r\n    locationDetailsRetrieved.displayPosition,\r\n    eventToEdit.addressData,\r\n    inputs.address,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (eventToEdit.eventData) {\r\n      (async () => {\r\n        setLoadingImage(true);\r\n        const result =\r\n          eventToEdit.eventData.eventImage &&\r\n          (await getImage(eventToEdit.eventData.eventImage));\r\n        if (result || result === null) setLoadingImage(false);\r\n        dispatch(selectEventDate(new Date(eventToEdit.eventData.eventDate)));\r\n        setInputs((inputs) => ({\r\n          ...inputs,\r\n          title: eventToEdit.eventData.title,\r\n          eventImage: result && {\r\n            image: result.imageBinary,\r\n            imageName: result.pictureName,\r\n          },\r\n          address: eventToEdit.addressData.label,\r\n          description: eventToEdit.eventData.description,\r\n          availablePlaces: eventToEdit.eventData.availablePlaces.toString(),\r\n          tel: eventToEdit.eventData.tel,\r\n        }));\r\n        if (result === null)\r\n          setInputs((inputs) =>\r\n            (({ eventImage, ...others }) => ({\r\n              ...others,\r\n            }))(inputs)\r\n          );\r\n        setAddressObj((addressObj) => ({\r\n          ...addressObj,\r\n          label: eventToEdit.addressData.label,\r\n          streetNumber: eventToEdit.addressData.streetNumber,\r\n          streetName: eventToEdit.addressData.streetName,\r\n          postCode: eventToEdit.addressData.postCode,\r\n          city: eventToEdit.addressData.city,\r\n          country: eventToEdit.addressData.country,\r\n          latitude: eventToEdit.addressData.latitude,\r\n          longitude: eventToEdit.addressData.longitude,\r\n          zoom: eventToEdit.addressData.zoom,\r\n        }));\r\n      })();\r\n    }\r\n  }, [eventToEdit, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (eventUpdated) {\r\n      setInputs({});\r\n      setAddressObj({});\r\n      dispatch(changeEventClearState());\r\n      dispatch(showNewEventForm(false));\r\n      dispatch(getAddressClearState());\r\n      dispatch(selectEventAddressClearState());\r\n      dispatch(getLocationDetailsClearState());\r\n      dispatch(toEditEventClearState());\r\n    }\r\n    return () => {\r\n      dispatch(getAddressClearState());\r\n      dispatch(selectEventAddressClearState());\r\n      dispatch(getLocationDetailsClearState());\r\n      dispatch(toEditEventClearState());\r\n    };\r\n  }, [eventUpdated, dispatch]);\r\n\r\n  return {\r\n    inputs,\r\n    addressObj,\r\n    showMap,\r\n    showSuggestions,\r\n    error,\r\n    loadingImage,\r\n    inputHasFocus,\r\n    handleOnChange,\r\n    handleShowCalendar,\r\n    handlePicture,\r\n    handleRemoveImage,\r\n    handleSubmit,\r\n    handleFocus,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default useMyEventsForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectEventAddress } from \"../../../redux/myEvents/selectEventAddress/thunk/selectEventAddressThunk\";\r\nimport { chooseEventAddress } from \"../../../redux/myEvents/chooseEventAddress/thunk/chooseEventAddressThunk\";\r\nimport { getLocationDetails } from \"../../../redux/myEvents/getLocationDetails/thunk/getLocationDetailsThunk\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\nimport \"./suggestions.css\";\r\n\r\nconst Suggestions = () => {\r\n  const dispatch = useDispatch();\r\n  const { addressesRetrieved } = useSelector(\r\n    (state) => state.addressSuggestions\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(chooseEventAddress(false));\r\n  }, [dispatch]);\r\n\r\n  return addressesRetrieved && addressesRetrieved.length > 0 ? (\r\n    addressesRetrieved.map((suggestion, index) => (\r\n      <div key={index} className=\"suggestions-box\">\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(getLocationDetails(suggestion.locationId));\r\n              dispatch(selectEventAddress(suggestion));\r\n            }}\r\n            className=\"suggestion-item\"\r\n          >\r\n            {suggestion.label}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n    ))\r\n  ) : (\r\n    <div className=\"suggestions-box\">\r\n      <p className=\"suggestion-item no-result\">\r\n        {capitalizeFirst(strings.myEvents.error.NO_SUGGESTIONS)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestions;\r\n","import { chooseEventAddressCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const chooseEventAddress = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: chooseEventAddressCases.ADDRESS_CHOSEN, payload: bool });\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useMap = () => {\r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  const handleHideLoading = () => {\r\n    setShowLoading(false);\r\n  };\r\n\r\n  return { showLoading, handleHideLoading };\r\n};\r\n\r\nexport default useMap;\r\n","import React from \"react\";\r\nimport useMap from \"../../../hooks/screen/myEvents/useMap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport \"./map.css\";\r\n\r\nconst Map = ({ latitude, longitude, zoom }) => {\r\n  const { showLoading, handleHideLoading } = useMap();\r\n  const { userData } = useSelector((state) => state.login);\r\n  return (\r\n    <div className=\"map-iframe-main-area\">\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"map-iframe-box\">\r\n            {showLoading && (\r\n              <div className=\"map-iframe-spinner-box\">\r\n                <Row>\r\n                  <Col xs={4} />\r\n                  <Col xs={4}>\r\n                    <Spinner animation=\"border\" size=\"sm\" />\r\n                  </Col>\r\n                  <Col xs={4} />\r\n                </Row>\r\n              </div>\r\n            )}\r\n            <iframe\r\n              title=\"map\"\r\n              className={showLoading ? \"map-iframe-hidden\" : \"\"}\r\n              style={{ height: \"450px\" }}\r\n              src={\r\n                strings.path.MAP_REQUEST +\r\n                `/${latitude}/${longitude}/${zoom}/${userData._id}/${userData.email}`\r\n              }\r\n              scrolling=\"no\"\r\n              frameBorder=\"0\"\r\n              onLoad={handleHideLoading}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Image, Spinner } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport useMyEventsForm from \"../../hooks/form/myEvents/useMyEventsForm\";\r\nimport Suggestions from \"../../components/map/suggestions/Suggestions\";\r\nimport Map from \"../../components/map/map/Map\";\r\nimport moment from \"moment\";\r\nimport { generateZoom } from \"../../shared/generateZoom\";\r\nimport { selectEventAddressClearState } from \"../../redux/myEvents/selectEventAddress/thunk/selectEventAddressThunk\";\r\nimport { getAddressClearState } from \"../../redux/myEvents/getAddress/thunk/getAddressThunk\";\r\nimport { getLocationDetailsClearState } from \"../../redux/myEvents/getLocationDetails/thunk/getLocationDetailsThunk\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarAlt, faGrin } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toEditEventClearState } from \"../../redux/myEvents/toEditEvent/thunk/toEditEventThunk\";\r\nimport { showNewEventForm } from \"../../redux/myEvents/showNewEventForm/thunk/showNewEventFormThunk\";\r\nimport { selectEventDateClearState } from \"../../redux/myEvents/selectEventDate/thunk/selectEventDateThunk\";\r\nimport { showEmojis } from \"../../redux/emoji/showEmojis/thunk/showEmojisThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport \"./myEventsForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyEventsForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    inputs,\r\n    addressObj,\r\n    showMap,\r\n    showSuggestions,\r\n    error,\r\n    loadingImage,\r\n    inputHasFocus,\r\n    handleOnChange,\r\n    handleShowCalendar,\r\n    handlePicture,\r\n    handleRemoveImage,\r\n    handleSubmit,\r\n    handleFocus,\r\n    handleBlur,\r\n  } = useMyEventsForm();\r\n\r\n  const { loadingAddresses } = useSelector((state) => state.addressSuggestions);\r\n  const { loadingLocationDetails } = useSelector(\r\n    (state) => state.locationDetails\r\n  );\r\n  const { selectedAddress } = useSelector(\r\n    (state) => state.selectedEventAddress\r\n  );\r\n  const { locationDetailsRetrieved } = useSelector(\r\n    (state) => state.locationDetails\r\n  );\r\n  const { loadingEventUpdating } = useSelector((state) => state.isEventChanged);\r\n  const { eventToEdit } = useSelector((state) => state.toEditEvent);\r\n  const { eventDate } = useSelector((state) => state.eventDateSelected);\r\n\r\n  return (\r\n    <ScrollArea\r\n      className=\"myevents-form-scroll-area\"\r\n      smoothScrolling={true}\r\n      horizontal={false}\r\n    >\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicTitle\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.TITLE)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleOnChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                value={inputs.title || \"\"}\r\n                name=\"title\"\r\n                type=\"text\"\r\n                maxLength=\"21\"\r\n                placeholder={strings.myEvents.TITLE_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicPhoto\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.PHOTO)}\r\n              </Form.Label>\r\n              <ImageUploader\r\n                fileContainerStyle={{\r\n                  height: 75,\r\n                  fontFamily: \"OpenSans-Regular\",\r\n                  border: \"1px solid #CED4DA\",\r\n                  backgroundColor: \"#e2f3f5\",\r\n                }}\r\n                withIcon={false}\r\n                singleImage={true}\r\n                withLabel={true}\r\n                label={capitalizeFirst(strings.myRecipes.MAX_PICTURE_SIZE)}\r\n                buttonText={capitalizeFirst(strings.myEvents.PICKER)}\r\n                buttonStyles={{\r\n                  fontFamily: \"OpenSans-Regular\",\r\n                  fontSize: \"1vw\",\r\n                }}\r\n                onChange={handlePicture}\r\n                imgExtension={[\".jpg\", \"jpeg\", \".gif\", \".png\", \".gif\"]}\r\n                fileTypeError={capitalizeFirst(\r\n                  strings.myRecipes.error.IMAGE_FORMAT\r\n                )}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        {loadingImage ? (\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"myevents-form-loading-items\">\r\n                <Spinner animation=\"border\" size=\"sm\" />\r\n                <div className=\"myevents-form-loadingimage-text\">\r\n                  {capitalizeFirst(strings.myRecipes.LOADING_IMAGE)}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          inputs.eventImage && (\r\n            <Row>\r\n              <Col xs={8}>\r\n                <Image\r\n                  src={inputs.eventImage.image ? inputs.eventImage.image : null}\r\n                  thumbnail\r\n                />\r\n              </Col>\r\n              <Col xs={1}>\r\n                <FontAwesomeIcon\r\n                  className=\"myevents-form-trash\"\r\n                  icon={faTrash}\r\n                  onClick={handleRemoveImage}\r\n                />\r\n              </Col>\r\n              <Col xs={2} />\r\n            </Row>\r\n          )\r\n        )}\r\n        {error.imageError && (\r\n          <Row>\r\n            <Col xs={12}>\r\n              <div className=\"myevents-form-image-error\">\r\n                {error.imageError ? error.imageError : null}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicAddress\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.ADDRESS)}\r\n              </Form.Label>\r\n              <div className=\"myevents-icon-address-box\">\r\n                <Form.Control\r\n                  className=\"global-form-control\"\r\n                  onChange={handleOnChange}\r\n                  onFocus={handleFocus}\r\n                  onBlur={handleBlur}\r\n                  value={inputs.address || \"\"}\r\n                  name=\"address\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder={strings.myEvents.ADDRESS_PLACEHOLDER}\r\n                />\r\n                <div className=\"myevents-input-spinner\">\r\n                  {(loadingAddresses || loadingLocationDetails) && (\r\n                    <Spinner animation=\"border\" size=\"sm\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"myevents-form-adress-suggestion-group\">\r\n                {showSuggestions && <Suggestions />}\r\n              </div>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        {showMap && (\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Map\r\n                latitude={\r\n                  locationDetailsRetrieved.displayPosition &&\r\n                  locationDetailsRetrieved.displayPosition.latitude\r\n                    ? locationDetailsRetrieved.displayPosition.latitude\r\n                    : addressObj.latitude\r\n                    ? addressObj.latitude\r\n                    : 52.229676\r\n                }\r\n                longitude={\r\n                  locationDetailsRetrieved.displayPosition &&\r\n                  locationDetailsRetrieved.displayPosition.longitude\r\n                    ? locationDetailsRetrieved.displayPosition.longitude\r\n                    : addressObj.longitude\r\n                    ? addressObj.longitude\r\n                    : 21.012229\r\n                }\r\n                zoom={\r\n                  addressObj.zoom\r\n                    ? addressObj.zoom\r\n                    : generateZoom(selectedAddress)\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicDescription\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.DESCRIPTION)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleOnChange}\r\n                value={inputs.description || \"\"}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                as=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"description\"\r\n                type=\"text\"\r\n                placeholder={strings.myEvents.DESCRIPTION_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicAvailablePlaces\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.AVAILABLE_PLACES)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleOnChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                value={inputs.availablePlaces || \"\"}\r\n                name=\"availablePlaces\"\r\n                type=\"text\"\r\n                maxLength=\"3\"\r\n                placeholder={strings.myEvents.AVAILABLE_PLACES_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicEventDate\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.EVENT_DATE)}\r\n              </Form.Label>\r\n              <div className=\"myevents-datepicker-icon-box\">\r\n                <Form.Control\r\n                  className=\"global-form-control\"\r\n                  onChange={() => {}}\r\n                  value={\r\n                    eventDate\r\n                      ? moment(eventDate).format(\"DD/MM/YYYY, HH:mm\")\r\n                      : \"\"\r\n                  }\r\n                  onClick={handleShowCalendar}\r\n                  onFocus={handleFocus}\r\n                  onBlur={handleBlur}\r\n                  type=\"text\"\r\n                  placeholder={strings.myEvents.DATE_PLACEHOLDER}\r\n                  autoComplete=\"off\"\r\n                />\r\n                <div className=\"myevents-datepicker-icon-wrapper\">\r\n                  <FontAwesomeIcon\r\n                    className=\"myevents-datepicker-icon\"\r\n                    icon={faCalendarAlt}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Form.Group controlId=\"formBasicContactTel\">\r\n              <Form.Label className=\"global-form-label\">\r\n                {capitalizeFirst(strings.myEvents.TEL)}\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"global-form-control\"\r\n                onChange={handleOnChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                value={inputs.tel || \"\"}\r\n                name=\"tel\"\r\n                type=\"text\"\r\n                maxLength=\"9\"\r\n                placeholder={strings.myEvents.TEL_PLACEHOLDER}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div className=\"myevents-form-button-box\">\r\n              {!eventToEdit.eventData ? (\r\n                <div className=\"global-emoji-wrapper\">\r\n                  <Button\r\n                    disabled={\r\n                      loadingEventUpdating ||\r\n                      inputs.title === undefined ||\r\n                      inputs.title === \"\" ||\r\n                      error.imageError ||\r\n                      !addressObj.country ||\r\n                      inputs.description === undefined ||\r\n                      inputs.description === \"\" ||\r\n                      inputs.availablePlaces === undefined ||\r\n                      inputs.availablePlaces === \"\" ||\r\n                      !eventDate ||\r\n                      eventDate === \"\" ||\r\n                      inputs.tel === \"\" ||\r\n                      inputs.tel === undefined\r\n                    }\r\n                    type=\"submit\"\r\n                    className=\"global-button-label\"\r\n                    variant=\"outline-dark\"\r\n                  >\r\n                    <div className=\"myevents-form-spinner\">\r\n                      {loadingEventUpdating && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loadingEventUpdating ? (\r\n                      <div className=\"myevents-form-button-loading\">\r\n                        {capitalizeFirst(strings.contact.BUTTON_TEXT_LOADING)}\r\n                      </div>\r\n                    ) : (\r\n                      <div>{capitalizeFirst(strings.contact.BUTTON_TEXT)}</div>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"global-emoji-button\"\r\n                    disabled={\r\n                      (inputHasFocus !== \"title\" ||\r\n                        inputs.title === \"\" ||\r\n                        inputs.title === undefined) &&\r\n                      (inputHasFocus !== \"description\" ||\r\n                        inputs.description === \"\" ||\r\n                        inputs.description === undefined)\r\n                    }\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      dispatch(showEmojis(true));\r\n                    }}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      className=\"global-emoji-button-icon\"\r\n                      icon={faGrin}\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"global-emoji-wrapper\">\r\n                  <Button\r\n                    disabled={\r\n                      loadingEventUpdating ||\r\n                      inputs.title === undefined ||\r\n                      inputs.title === \"\" ||\r\n                      error.imageError ||\r\n                      !addressObj.country ||\r\n                      inputs.description === undefined ||\r\n                      inputs.description === \"\" ||\r\n                      inputs.availablePlaces === undefined ||\r\n                      inputs.availablePlaces === \"\" ||\r\n                      !eventDate ||\r\n                      eventDate === \"\" ||\r\n                      inputs.tel === \"\" ||\r\n                      inputs.tel === undefined\r\n                    }\r\n                    type=\"submit\"\r\n                    className=\"global-button-label\"\r\n                    variant=\"outline-dark\"\r\n                  >\r\n                    <div className=\"myevents-form-spinner\">\r\n                      {loadingEventUpdating && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loadingEventUpdating ? (\r\n                      <div className=\"myevents-form-button-loading\">\r\n                        {capitalizeFirst(strings.contact.BUTTON_TEXT_LOADING)}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        {capitalizeFirst(strings.rating.BUTTON_EDIT_TEXT)}\r\n                      </div>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"global-emoji-button\"\r\n                    disabled={\r\n                      (inputHasFocus !== \"title\" ||\r\n                        inputs.title === \"\" ||\r\n                        inputs.title === undefined) &&\r\n                      (inputHasFocus !== \"description\" ||\r\n                        inputs.description === \"\" ||\r\n                        inputs.description === undefined)\r\n                    }\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      dispatch(showEmojis(true));\r\n                    }}\r\n                    size=\"sm\"\r\n                    variant=\"light\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      className=\"global-emoji-button-icon\"\r\n                      icon={faGrin}\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <Button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showNewEventForm(false));\r\n                  dispatch(getAddressClearState());\r\n                  dispatch(selectEventAddressClearState());\r\n                  dispatch(getLocationDetailsClearState());\r\n                  dispatch(toEditEventClearState());\r\n                  dispatch(selectEventDateClearState());\r\n                }}\r\n                className=\"global-button-label\"\r\n                variant=\"outline-secondary\"\r\n              >\r\n                {capitalizeFirst(strings.rating.BUTTON_CANCEL_TEXT)}\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ScrollArea>\r\n  );\r\n};\r\n\r\nexport default MyEventsForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { searchEvents } from \"../../../redux/myEvents/retrieveEvents/thunk/retrieveEventsThunk\";\r\nimport { searchEventFilled } from \"../../../redux/myEvents/searchEventFilled/thunk/searchEventFilledThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showCalendar } from \"../../../redux/myEvents/showCalendar/thunk/showCalendarThunk\";\r\nimport { selectEventDateClearState } from \"../../../redux/myEvents/selectEventDate/thunk/selectEventDateThunk\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../../util/Util\";\r\n\r\nconst useSearchEventsForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { eventDate } = useSelector((state) => state.eventDateSelected);\r\n\r\n  const handleOnChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]:\r\n        e.target.name === strings.myEvents.inputName.CITY\r\n          ? capitalizeFirst(e.target.value.replace(/[^a-zA-Z]+/g, \"\"))\r\n          : e.target.value,\r\n    }));\r\n  };\r\n  const handleShowCalendar = (e) => {\r\n    e.preventDefault();\r\n    dispatch(showCalendar(true));\r\n  };\r\n  const handleRemoveDate = (e) => {\r\n    e.preventDefault();\r\n    dispatch(selectEventDateClearState());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventDate || inputs.city) {\r\n      dispatch(\r\n        searchEvents(\r\n          eventDate ? new Date(eventDate) : null,\r\n          inputs.city,\r\n          userData._id,\r\n          userData.email\r\n        )\r\n      );\r\n      dispatch(searchEventFilled(true));\r\n    } else {\r\n      dispatch(searchEventFilled(false));\r\n    }\r\n    return () => dispatch(searchEventFilled(false));\r\n  }, [eventDate, userData._id, userData.email, inputs.city, dispatch]);\r\n\r\n  return {\r\n    inputs,\r\n    handleOnChange,\r\n    handleShowCalendar,\r\n    handleRemoveDate,\r\n  };\r\n};\r\n\r\nexport default useSearchEventsForm;\r\n","import React from \"react\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useSearchEventsForm from \"../../hooks/form/myEvents/useSearchEventsForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport \"./myEventsForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst SearchEventsForm = () => {\r\n  const {\r\n    inputs,\r\n    handleOnChange,\r\n    handleShowCalendar,\r\n    handleRemoveDate,\r\n  } = useSearchEventsForm();\r\n\r\n  const { eventDate } = useSelector((state) => state.eventDateSelected);\r\n\r\n  return (\r\n    <Form>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicSearchCity\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myEvents.SEARCH_CITY)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"global-form-control\"\r\n              onChange={handleOnChange}\r\n              value={inputs.city || \"\"}\r\n              name=\"city\"\r\n              type=\"text\"\r\n              placeholder={strings.myEvents.SEARCH_CITY}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicSearchEventDate\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myEvents.SEARCH_DATE)}\r\n            </Form.Label>\r\n            <div className=\"myevents-form-selected-date-wrapper\">\r\n              <div className=\"myevents-datepicker-icon-box\">\r\n                <Form.Control\r\n                  className=\"global-form-control\"\r\n                  onChange={() => {}}\r\n                  value={\r\n                    eventDate ? moment(eventDate).format(\"DD/MM/YYYY\") : \"\"\r\n                  }\r\n                  onClick={handleShowCalendar}\r\n                  type=\"text\"\r\n                  placeholder={strings.myEvents.SEARCH_DATE_PLACEHOLDER}\r\n                  autoComplete=\"off\"\r\n                />\r\n                <div className=\"myevents-datepicker-icon-wrapper\">\r\n                  <FontAwesomeIcon\r\n                    className=\"myevents-datepicker-icon\"\r\n                    icon={faCalendarAlt}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {eventDate && (\r\n                <FontAwesomeIcon\r\n                  onClick={handleRemoveDate}\r\n                  className=\"myevents-form-trash-date\"\r\n                  icon={faTimes}\r\n                />\r\n              )}\r\n            </div>\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchEventsForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { eventCategorySelected } from \"../../../redux/myEvents/eventCategorySelected/thunk/eventCategorySelectedThunk\";\r\nimport { getEvents } from \"../../../redux/myEvents/retrieveEvents/thunk/retrieveEventsThunk\";\r\nimport { showNewEventForm } from \"../../../redux/myEvents/showNewEventForm/thunk/showNewEventFormThunk\";\r\nimport { selectEventDateClearState } from \"../../../redux/myEvents/selectEventDate/thunk/selectEventDateThunk\";\r\nimport { eventButtonItemsArray } from \"../../../shared/buttonItemsArray\";\r\n\r\nconst useEventButtons = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialState = () => {\r\n    let buttonInitialStates = [];\r\n    for (let i = 0; i < eventButtonItemsArray.length; i++) {\r\n      buttonInitialStates.push(false);\r\n    }\r\n    return buttonInitialStates;\r\n  };\r\n\r\n  const [activesClasses, setActive] = useState(initialState());\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { searchEventFilled } = useSelector(\r\n    (state) => state.isSearchEventFormFilled\r\n  );\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n  const { eventUpdated } = useSelector((state) => state.isEventChanged);\r\n\r\n  const toggleActiveClass = (id, category) => {\r\n    const skip = 1;\r\n    const limit = 30;\r\n    dispatch(eventCategorySelected(id));\r\n    setActive(\r\n      initialState().map((bool, index) => (index === id ? !bool : bool))\r\n    );\r\n    if (userData.email) {\r\n      dispatch(getEvents(category, userData._id, userData.email, skip, limit));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!searchEventFilled) {\r\n      dispatch(selectEventDateClearState());\r\n      toggleActiveClass(\r\n        eventButtonItemsArray[eventButtonId].id,\r\n        eventButtonItemsArray[eventButtonId].category\r\n      );\r\n    }\r\n    return () => dispatch(showNewEventForm(false));\r\n  }, [eventUpdated, searchEventFilled, eventButtonId, dispatch]);\r\n\r\n  return { activesClasses, toggleActiveClass };\r\n};\r\n\r\nexport default useEventButtons;\r\n","import React from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { eventButtonItemsArray } from \"../../shared/buttonItemsArray\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport useEventButtons from \"../../hooks/screen/myEvents/useEventButtons\";\r\nimport \"./myEvents.css\";\r\n\r\nconst MakeEventButtons = () => {\r\n  const { activesClasses, toggleActiveClass } = useEventButtons();\r\n\r\n  return eventButtonItemsArray.map((buttonItem) => (\r\n    <div key={buttonItem.id}>\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={10}>\r\n          <div className=\"myevents-button-box\">\r\n            <Button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                toggleActiveClass(buttonItem.id, buttonItem.category);\r\n              }}\r\n              variant=\"dark\"\r\n            >\r\n              <div className=\"myevents-button-text\">\r\n                {capitalize(buttonItem.name)}\r\n              </div>\r\n            </Button>\r\n            <div\r\n              className={\r\n                activesClasses[buttonItem.id]\r\n                  ? \"myevents-button-border-active\"\r\n                  : \"myevents-button-border-nonactive\"\r\n              }\r\n            ></div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4\" />\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default MakeEventButtons;\r\n","import React from \"react\";\r\n\r\nexport const getDateTime = (date) => {\r\n  return (\r\n    <>\r\n      {date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}/\r\n      {date.getMonth() + 1 < 10\r\n        ? `0${date.getMonth() + 1}`\r\n        : date.getMonth() + 1}\r\n      /{date.getFullYear()}, godz.{\" \"}\r\n      {date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()}:\r\n      {date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()}\r\n    </>\r\n  );\r\n};\r\n","export const delayAvailablePlacesCounter = (time) => {\r\n  return new Promise((resolve) => setTimeout(resolve, time));\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { toEditEvent } from \"../../../redux/myEvents/toEditEvent/thunk/toEditEventThunk\";\r\nimport {\r\n  removeEvent,\r\n  changeEventClearState,\r\n} from \"../../../redux/myEvents/changeEvent/thunk/changeEventThunk\";\r\nimport {\r\n  joinEvent,\r\n  unjoinEvent,\r\n  followAuthor,\r\n  unfollowAuthor,\r\n  eventPreviewClearState,\r\n} from \"../../../redux/myEvents/eventPreview/thunk/eventPreviewThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { delayAvailablePlacesCounter } from \"./delayAvailablePlacesCounter\";\r\n\r\nconst useEventPreview = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { eventUpdated } = useSelector((state) => state.isEventChanged);\r\n  const { eventPreviewData } = useSelector((state) => state.eventPreview);\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n\r\n  const [countAvailablePlaces, setCountAvailablePlaces] = useState(0);\r\n\r\n  const handleEditClick = (data) => {\r\n    dispatch(toEditEvent(data));\r\n  };\r\n\r\n  const handleTrashClick = (eventId, addressId) => {\r\n    dispatch(removeEvent(eventId, addressId, userData._id, userData.email));\r\n  };\r\n\r\n  const handleJoinEvent = (eventId) => {\r\n    dispatch(joinEvent(eventId, userData._id, userData.email));\r\n  };\r\n\r\n  const handleUnjoinEvent = (eventId) => {\r\n    dispatch(unjoinEvent(eventId, userData._id, userData.email));\r\n  };\r\n\r\n  const handleFollowEventAuthor = (authorId, eventId) => {\r\n    dispatch(followAuthor(authorId, eventId, userData._id, userData.email));\r\n  };\r\n\r\n  const handleUnfollowEventAuthor = (authorId, eventId) => {\r\n    dispatch(unfollowAuthor(authorId, eventId, userData._id, userData.email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (\r\n        eventPreviewData.availablePlaces -\r\n          eventPreviewData.participants.length <\r\n        50\r\n      ) {\r\n        for (\r\n          let i = 0;\r\n          i <=\r\n          eventPreviewData.availablePlaces -\r\n            eventPreviewData.participants.length;\r\n          i++\r\n        ) {\r\n          setCountAvailablePlaces(i);\r\n          await delayAvailablePlacesCounter(30);\r\n        }\r\n      } else {\r\n        setCountAvailablePlaces(\r\n          eventPreviewData.availablePlaces -\r\n            eventPreviewData.participants.length\r\n        );\r\n      }\r\n    })();\r\n  }, [\r\n    eventPreviewData._id,\r\n    eventPreviewData.availablePlaces,\r\n    eventPreviewData.participants.length,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (eventUpdated && eventButtonId === 1) {\r\n      dispatch(changeEventClearState());\r\n      dispatch(eventPreviewClearState());\r\n    } else if (eventUpdated && (eventButtonId === 0 || eventButtonId === 2)) {\r\n      dispatch(changeEventClearState());\r\n    }\r\n  }, [eventUpdated, eventButtonId, dispatch]);\r\n\r\n  return {\r\n    handleEditClick,\r\n    handleTrashClick,\r\n    countAvailablePlaces,\r\n    handleJoinEvent,\r\n    handleUnjoinEvent,\r\n    handleFollowEventAuthor,\r\n    handleUnfollowEventAuthor,\r\n  };\r\n};\r\n\r\nexport default useEventPreview;\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner, Button } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst, capitalize } from \"../../util/Util\";\r\nimport { getDateTime } from \"../../shared/getDateTime\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faEdit,\r\n  faTrash,\r\n  faFileSignature,\r\n  faTimes,\r\n  faUserPlus,\r\n  faUserMinus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport Img from \"react-image\";\r\nimport Map from \"../../components/map/map/Map\";\r\nimport useEventPreview from \"../../hooks/screen/myEvents/useEventPreview\";\r\nimport { eventPreviewClearState } from \"../../redux/myEvents/eventPreview/thunk/eventPreviewThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport \"./myEvents.css\";\r\n\r\nconst EventPreview = () => {\r\n  const dispatch = useDispatch();\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 300 },\r\n    from: { opacity: 0 },\r\n  });\r\n\r\n  const {\r\n    handleEditClick,\r\n    handleTrashClick,\r\n    countAvailablePlaces,\r\n    handleJoinEvent,\r\n    handleUnjoinEvent,\r\n    handleFollowEventAuthor,\r\n    handleUnfollowEventAuthor,\r\n  } = useEventPreview();\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { eventPreviewData } = useSelector((state) => state.eventPreview);\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n  const { loadingEventUpdating } = useSelector((state) => state.isEventChanged);\r\n  const { loading } = useSelector((state) => state.eventPreview);\r\n\r\n  const eventFollowed =\r\n    eventPreviewData.author.followers.length > 0 &&\r\n    eventPreviewData.author.followers.map(\r\n      (follower) => follower && follower.email\r\n    );\r\n\r\n  return (\r\n    <animated.div style={props}>\r\n      <Row>\r\n        <Col xs={1} />\r\n        <Col xs={6}>\r\n          <h1 className=\"eventpreview-title\">{eventPreviewData.title}</h1>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <Img\r\n            className=\"eventpreview-author-photo\"\r\n            src={\r\n              userGooglePhoto.some(\r\n                (element) =>\r\n                  eventPreviewData.author.photo &&\r\n                  eventPreviewData.author.photo.includes(element)\r\n              )\r\n                ? eventPreviewData.author.photo\r\n                : !userGooglePhoto.some(\r\n                    (element) =>\r\n                      eventPreviewData.author.photo &&\r\n                      eventPreviewData.author.photo.includes(element)\r\n                  ) && eventPreviewData.author.photo\r\n                ? strings.path.IMAGE_REQUEST + eventPreviewData.author.photo\r\n                : require(\"../../assets/imgs/cookerret.png\")\r\n            }\r\n            loader={<Spinner animation=\"border\" variant=\"dark\" />}\r\n          />\r\n        </Col>\r\n        <Col xs={2}>\r\n          <div className=\"eventpreview-available-places\">\r\n            <div className=\"eventpreview-available-places-text\">\r\n              {strings.myEvents.AVAILABLE_PLACES_PREVIEW}\r\n            </div>\r\n            <div\r\n              className={\r\n                countAvailablePlaces ===\r\n                eventPreviewData.availablePlaces -\r\n                  eventPreviewData.participants.length\r\n                  ? \"eventpreview-available-places-text number animate\"\r\n                  : \"eventpreview-available-places-text number\"\r\n              }\r\n            >\r\n              {countAvailablePlaces}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(eventPreviewClearState());\r\n            }}\r\n            className=\"eventpreview-close-icon\"\r\n          >\r\n            <FontAwesomeIcon icon={faTimesCircle} />\r\n          </div>\r\n        </Col>\r\n        <Col xs={1} />\r\n      </Row>\r\n      <Row className=\"mb-2\" />\r\n      <ScrollArea smoothScrolling={true} className=\"eventpreview-main\">\r\n        <div>\r\n          {eventButtonId === 0 && (\r\n            <>\r\n              <Row className=\"mb-1\" />\r\n              <Row>\r\n                <Col xs={1} />\r\n                <Col xs={3}>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      (eventFollowed &&\r\n                        !eventFollowed.some((email) =>\r\n                          userData.email.includes(email)\r\n                        )) ||\r\n                      !eventFollowed\r\n                        ? handleFollowEventAuthor(\r\n                            eventPreviewData.author._id,\r\n                            eventPreviewData._id\r\n                          )\r\n                        : handleUnfollowEventAuthor(\r\n                            eventPreviewData.author._id,\r\n                            eventPreviewData._id\r\n                          );\r\n                    }}\r\n                    disabled={userData.email === eventPreviewData.author.email}\r\n                    className=\"eventpreview-follow-button\"\r\n                    variant=\"dark\"\r\n                  >\r\n                    <div className=\"myrecipes-form-spinner\">\r\n                      {loading && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loading ? (\r\n                      <div className=\"myrecipes-form-button-loading\">\r\n                        {capitalizeFirst(\r\n                          strings.recipeBookDetails.FOLLOW_LOADING\r\n                        )}\r\n                      </div>\r\n                    ) : (eventFollowed &&\r\n                        !eventFollowed.some((email) =>\r\n                          userData.email.includes(email)\r\n                        )) ||\r\n                      !eventFollowed ? (\r\n                      <>\r\n                        <FontAwesomeIcon\r\n                          className=\"myrecipes-preview-button-icon\"\r\n                          icon={faUserPlus}\r\n                        />\r\n                        <div className=\"myrecipes-button-text\">\r\n                          {capitalizeFirst(strings.myEvents.FOLLOW)}\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <FontAwesomeIcon\r\n                          className=\"myrecipes-preview-button-icon\"\r\n                          icon={faUserMinus}\r\n                        />\r\n                        <div className=\"myrecipes-button-text\">\r\n                          {capitalizeFirst(strings.recipeBookDetails.UNFOLLOW)}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={8} />\r\n              </Row>\r\n              <Row className=\"mb-3\" />\r\n            </>\r\n          )}\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={7}>\r\n              <Img\r\n                className=\"eventpreview-picture\"\r\n                src={\r\n                  eventPreviewData.eventImage\r\n                    ? strings.path.IMAGE_REQUEST + eventPreviewData.eventImage\r\n                    : require(\"../../assets/imgs/eventret.jpg\")\r\n                }\r\n                loader={\r\n                  <div className=\"eventpreview-loading-picture-box\">\r\n                    <Spinner animation=\"border\" variant=\"dark\" />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n            <Col xs={4} />\r\n          </Row>\r\n          <Row className=\"mb-3\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              <div className=\"eventpreview-description-text\">\r\n                {capitalizeFirst(strings.myEvents.DESCRIPTION_PLACEHOLDER)}\r\n              </div>\r\n              <div style={{ height: 10 }} />\r\n              <div className=\"eventpreview-description\">\r\n                {eventPreviewData.description}\r\n              </div>\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              <div className=\"eventpreview-address-box\">\r\n                <Col xs={6}>\r\n                  <div className=\"eventpreview-description-text\">\r\n                    {capitalizeFirst(strings.myEvents.ADDRESS_PREVIEW)}\r\n                  </div>\r\n                  <Row className=\"mb-5\" />\r\n                  <Row className=\"mb-5\" />\r\n                  <Row className=\"mb-5\" />\r\n                  <Row className=\"mb-5\" />\r\n                  <div className=\"eventpreview-address\">\r\n                    <div className=\"eventpreview-address-text\">\r\n                      {eventPreviewData.eventAddress.streetName}{\" \"}\r\n                      {eventPreviewData.eventAddress.streetNumber}\r\n                    </div>\r\n                    <div className=\"eventpreview-address-text\">\r\n                      {eventPreviewData.eventAddress.postCode}\r\n                    </div>\r\n                    <div className=\"eventpreview-address-text\">\r\n                      {eventPreviewData.eventAddress.city}\r\n                    </div>\r\n                    <div style={{ height: 10 }} />\r\n                    <div className=\"eventpreview-address-text data\">\r\n                      {getDateTime(new Date(eventPreviewData.eventDate))}\r\n                    </div>\r\n                    <div style={{ height: 25 }} />\r\n                    <div className=\"eventpreview-address-text tel\">\r\n                      tel. {eventPreviewData.tel}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Row className=\"mb-5\" />\r\n                  <Map\r\n                    latitude={eventPreviewData.eventAddress.latitude}\r\n                    longitude={eventPreviewData.eventAddress.longitude}\r\n                    zoom={eventPreviewData.eventAddress.zoom}\r\n                  />\r\n                  <Row className=\"mb-5\" />\r\n                </Col>\r\n              </div>\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={10}>\r\n              <div className=\"eventpreview-description-text\">\r\n                {capitalizeFirst(strings.myEvents.PARTICIPANTS_PREVIEW)}\r\n              </div>\r\n              <div style={{ height: 10 }} />\r\n              <div className=\"eventpreview-participant-main-area\">\r\n                {eventPreviewData.participants.length > 0 ? (\r\n                  eventPreviewData.participants.map((participant, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"eventpreview-participant-photo-box\"\r\n                    >\r\n                      <Img\r\n                        className=\"eventpreview-participant-photo\"\r\n                        src={\r\n                          userGooglePhoto.some(\r\n                            (element) =>\r\n                              participant.photo &&\r\n                              participant.photo.includes(element)\r\n                          )\r\n                            ? participant.photo\r\n                            : !userGooglePhoto.some(\r\n                                (element) =>\r\n                                  participant.photo &&\r\n                                  participant.photo.includes(element)\r\n                              ) && participant.photo\r\n                            ? strings.path.IMAGE_REQUEST + participant.photo\r\n                            : require(\"../../assets/imgs/cookerret.png\")\r\n                        }\r\n                        loader={<Spinner animation=\"border\" variant=\"dark\" />}\r\n                      />\r\n                      <div className=\"eventpreview-participant-name\">\r\n                        {participant.name}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"eventpreview-no-participants\">\r\n                    {capitalizeFirst(strings.myEvents.error.NO_PARTICIPANTS)}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n          <Row className=\"mb-1\" />\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={6}>\r\n              {eventButtonId === 0 && (\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleJoinEvent(eventPreviewData._id);\r\n                  }}\r\n                  disabled={\r\n                    eventPreviewData.author.email === userData.email ||\r\n                    eventPreviewData.participants.some((participant) =>\r\n                      userData.email.includes(participant.email)\r\n                    ) ||\r\n                    eventPreviewData.availablePlaces ===\r\n                      eventPreviewData.participants.length\r\n                  }\r\n                  className={\r\n                    eventPreviewData.author.email !== userData.email &&\r\n                    !eventPreviewData.participants.some((participant) =>\r\n                      userData.email.includes(participant.email)\r\n                    )\r\n                      ? \"eventpreview-preview-button-delete\"\r\n                      : \"eventpreview-preview-button-delete-disabled\"\r\n                  }\r\n                  variant=\"dark\"\r\n                >\r\n                  <div className=\"myrecipes-form-spinner\">\r\n                    {loading && (\r\n                      <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {loading ? (\r\n                    <div className=\"myrecipes-form-button-loading\">\r\n                      {capitalizeFirst(strings.myEvents.BUTTON_JOIN_LOADING)}\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon\r\n                        className=\"myrecipes-preview-button-icon\"\r\n                        icon={faFileSignature}\r\n                      />\r\n                      <div className=\"myevents-button-preview-action\">\r\n                        {capitalizeFirst(strings.myEvents.BUTTON_JOIN)}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              )}\r\n              {eventButtonId === 1 && (\r\n                <div className=\"eventpreview-button-preview-box\">\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleEditClick({\r\n                        eventData: {\r\n                          id: eventPreviewData._id,\r\n                          title: eventPreviewData.title,\r\n                          eventImage: eventPreviewData.eventImage,\r\n                          description: eventPreviewData.description,\r\n                          availablePlaces: eventPreviewData.availablePlaces,\r\n                          eventDate: eventPreviewData.eventDate,\r\n                          tel: eventPreviewData.tel,\r\n                        },\r\n                        addressData: {\r\n                          id: eventPreviewData.eventAddress._id,\r\n                          label: eventPreviewData.eventAddress.label,\r\n                          streetNumber:\r\n                            eventPreviewData.eventAddress.streetNumber,\r\n                          streetName: eventPreviewData.eventAddress.streetName,\r\n                          postCode: eventPreviewData.eventAddress.postCode,\r\n                          city: eventPreviewData.eventAddress.city,\r\n                          country: eventPreviewData.eventAddress.country,\r\n                          latitude: eventPreviewData.eventAddress.latitude,\r\n                          longitude: eventPreviewData.eventAddress.longitude,\r\n                          zoom: eventPreviewData.eventAddress.zoom,\r\n                        },\r\n                      });\r\n                    }}\r\n                    className=\"eventpreview-preview-button\"\r\n                    variant=\"dark\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      className=\"eventpreview-preview-button-icon\"\r\n                      icon={faEdit}\r\n                    />\r\n                    <div className=\"myevents-button-preview-action\">\r\n                      {capitalize(strings.myRecipes.BUTTON_CORRECTION)}\r\n                    </div>\r\n                  </Button>\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleTrashClick(\r\n                        eventPreviewData._id,\r\n                        eventPreviewData.eventAddress._id\r\n                      );\r\n                    }}\r\n                    className=\"eventpreview-preview-button-delete\"\r\n                    variant=\"dark\"\r\n                  >\r\n                    <div className=\"myrecipes-form-spinner\">\r\n                      {loadingEventUpdating && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    {loadingEventUpdating ? (\r\n                      <div className=\"myrecipes-form-button-loading\">\r\n                        {capitalizeFirst(\r\n                          strings.myRecipes.BUTTON_REMOVE_LOADING\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <FontAwesomeIcon\r\n                          className=\"myrecipes-preview-button-icon\"\r\n                          icon={faTrash}\r\n                        />\r\n                        <div className=\"myevents-button-preview-action\">\r\n                          {capitalize(strings.myRecipes.BUTTON_REMOVE)}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              {eventButtonId === 2 && (\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleUnjoinEvent(eventPreviewData._id);\r\n                  }}\r\n                  disabled={\r\n                    !eventPreviewData.participants.some((participant) =>\r\n                      userData.email.includes(participant.email)\r\n                    )\r\n                  }\r\n                  className={\r\n                    eventPreviewData.participants.some((participant) =>\r\n                      userData.email.includes(participant.email)\r\n                    )\r\n                      ? \"eventpreview-preview-button-delete\"\r\n                      : \"eventpreview-preview-button-delete-disabled\"\r\n                  }\r\n                  variant=\"dark\"\r\n                >\r\n                  <div className=\"myrecipes-form-spinner\">\r\n                    {loading && (\r\n                      <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {loading ? (\r\n                    <div className=\"myrecipes-form-button-loading\">\r\n                      {capitalizeFirst(strings.myEvents.BUTTON_UNJOIN_LOADING)}\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon\r\n                        className=\"myrecipes-preview-button-icon\"\r\n                        icon={faTimes}\r\n                      />\r\n                      <div className=\"myevents-button-preview-action\">\r\n                        {capitalizeFirst(strings.myEvents.BUTTON_UNJOIN)}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              )}\r\n            </Col>\r\n            <Col xs={5} />\r\n          </Row>\r\n        </div>\r\n      </ScrollArea>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default EventPreview;\r\n","export const getDaysInMonth = (month, year) =>\r\n  new Date(year, month, 0).getDate();\r\n","export const getNewSelectedDate = (month, year) => {\r\n  const newSelectedDate = new Date(year, month, 1);\r\n  return (\r\n    newSelectedDate && {\r\n      newDate: newSelectedDate,\r\n      firstDay: newSelectedDate.getDay(),\r\n      selectedMonth: newSelectedDate.getMonth(),\r\n      selectedYear: newSelectedDate.getFullYear(),\r\n    }\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showCalendar } from \"../../../redux/myEvents/showCalendar/thunk/showCalendarThunk\";\r\nimport { selectEventDate } from \"../../../redux/myEvents/selectEventDate/thunk/selectEventDateThunk\";\r\nimport moment from \"moment\";\r\nimport { getDaysInMonth } from \"../../../components/calendar/getDaysInMonth\";\r\nimport { getNewSelectedDate } from \"../../../components/calendar/getNewSelectedDate\";\r\nimport { strings } from \"../../../strings/Strings\";\r\n\r\nconst useCalendar = () => {\r\n  const dispatch = useDispatch();\r\n  const now = new Date();\r\n\r\n  const dayNames = [\r\n    strings.myEvents.calendar.days.MON,\r\n    strings.myEvents.calendar.days.TUE,\r\n    strings.myEvents.calendar.days.WED,\r\n    strings.myEvents.calendar.days.THU,\r\n    strings.myEvents.calendar.days.FRI,\r\n    strings.myEvents.calendar.days.SAT,\r\n    strings.myEvents.calendar.days.SUN,\r\n  ];\r\n\r\n  const months = [\r\n    strings.myEvents.calendar.months.JAN,\r\n    strings.myEvents.calendar.months.FEB,\r\n    strings.myEvents.calendar.months.MAR,\r\n    strings.myEvents.calendar.months.APR,\r\n    strings.myEvents.calendar.months.MAY,\r\n    strings.myEvents.calendar.months.JUN,\r\n    strings.myEvents.calendar.months.JUL,\r\n    strings.myEvents.calendar.months.AUG,\r\n    strings.myEvents.calendar.months.SEP,\r\n    strings.myEvents.calendar.months.OCT,\r\n    strings.myEvents.calendar.months.NOV,\r\n    strings.myEvents.calendar.months.DEC,\r\n  ];\r\n\r\n  const [monthIndex, setMonthIndex] = useState(now.getMonth());\r\n  const [newSelectedDate, setNewSelectedDate] = useState(\r\n    getNewSelectedDate(monthIndex, now.getFullYear())\r\n  );\r\n  const [daysInMonth, setDaysInMonth] = useState(\r\n    getDaysInMonth(monthIndex + 1, now.getFullYear())\r\n  );\r\n  const [selectedMonth, setSelectedMonth] = useState(\r\n    months[newSelectedDate.selectedMonth]\r\n  );\r\n  const [selectedDay, setSelectedDay] = useState(null);\r\n  const [date, setDate] = useState(null);\r\n  const [inputs, setInputs] = useState({});\r\n  const [error, setError] = useState({});\r\n\r\n  const { eventDate } = useSelector((state) => state.eventDateSelected);\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n\r\n  const handlePreviousMonth = (e) => {\r\n    e.preventDefault();\r\n    monthIndex >= now.getMonth() && setMonthIndex(monthIndex - 1);\r\n  };\r\n  const handleNextMonth = (e) => {\r\n    e.preventDefault();\r\n    !moment(\r\n      moment(now.setHours(0, 0, 0, 0)).add(moment.duration(1, \"y\"))._d\r\n    ).isSame(newSelectedDate.newDate.setHours(0, 0, 0, 0)) &&\r\n      setMonthIndex(monthIndex + 1);\r\n  };\r\n  const handleSelectDate = (date) => {\r\n    setSelectedDay(date);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    dispatch(selectEventDate(new Date(date)));\r\n    dispatch(showCalendar(false));\r\n  };\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    dispatch(showCalendar(false));\r\n  };\r\n\r\n  const numberOfDaysInMonth = [];\r\n  if (newSelectedDate.firstDay > 0) {\r\n    for (let i = 0; i < newSelectedDate.firstDay - 1; i++) {\r\n      numberOfDaysInMonth.push(\"\");\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 7 - 1; i++) {\r\n      numberOfDaysInMonth.push(\"\");\r\n    }\r\n  }\r\n\r\n  for (let i = 1; i <= daysInMonth; i++) {\r\n    numberOfDaysInMonth.push(\r\n      new Date(\r\n        newSelectedDate.selectedYear,\r\n        newSelectedDate.selectedMonth,\r\n        i,\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      )\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNewSelectedDate(getNewSelectedDate(monthIndex, now.getFullYear()));\r\n  }, [monthIndex]);\r\n\r\n  useEffect(() => {\r\n    setDaysInMonth(getDaysInMonth(monthIndex + 1, now.getFullYear()));\r\n    setSelectedMonth(months[newSelectedDate.selectedMonth]);\r\n  }, [newSelectedDate, monthIndex, months, now]);\r\n\r\n  useEffect(() => {\r\n    if (eventButtonId !== 0) {\r\n      if (eventDate) {\r\n        setInputs((inputs) => ({\r\n          ...inputs,\r\n          hour: new Date(eventDate).toLocaleTimeString(\"pl-PL\", {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n        }));\r\n        setSelectedDay(new Date(eventDate));\r\n      } else {\r\n        setInputs((inputs) => ({\r\n          ...inputs,\r\n          hour: moment(\r\n            moment(new Date()).add(moment.duration(2, \"h\"))._d\r\n          ).format(\"HH:mm\"),\r\n        }));\r\n      }\r\n    }\r\n  }, [eventDate, eventButtonId]);\r\n\r\n  useEffect(() => {\r\n    if (eventButtonId !== 0) {\r\n      const inputsSplit = inputs.hour && inputs.hour.split(\":\");\r\n      if (selectedDay && inputsSplit && inputs.hour) {\r\n        setDate(\r\n          selectedDay.setHours(\r\n            parseInt(inputsSplit[0]),\r\n            parseInt(inputsSplit[1]),\r\n            0,\r\n            0\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      setDate(selectedDay);\r\n    }\r\n  }, [inputs.hour, selectedDay, eventButtonId]);\r\n\r\n  useEffect(() => {\r\n    if (eventButtonId !== 0) {\r\n      const dateNow = new Date();\r\n      if (\r\n        date &&\r\n        moment(date).isBefore(\r\n          moment(\r\n            moment(\r\n              dateNow.setHours(dateNow.getHours(), dateNow.getMinutes(), 0, 0)\r\n            ).add(moment.duration(2, \"h\"))._d\r\n          )\r\n        )\r\n      ) {\r\n        setError((error) => ({\r\n          ...error,\r\n          timeError: `${strings.myEvents.calendar.error.TIME_BEFORE} ${moment(\r\n            moment(\r\n              dateNow.setHours(dateNow.getHours(), dateNow.getMinutes(), 0, 0)\r\n            ).add(moment.duration(2, \"h\"))._d\r\n          ).format(\"HH:mm\")}`,\r\n        }));\r\n      } else {\r\n        setError({});\r\n      }\r\n    }\r\n  }, [date, eventButtonId]);\r\n\r\n  return {\r\n    dayNames,\r\n    numberOfDaysInMonth,\r\n    now,\r\n    selectedMonth,\r\n    monthIndex,\r\n    newSelectedDate,\r\n    inputs,\r\n    error,\r\n    date,\r\n    handleInputChange,\r\n    handlePreviousMonth,\r\n    handleNextMonth,\r\n    handleSelectDate,\r\n    handleSave,\r\n    handleCancel,\r\n  };\r\n};\r\n\r\nexport default useCalendar;\r\n","export const isWeekend = (day) => {\r\n  return day % 7 === 6 || day % 7 === 0;\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronCircleRight,\r\n  faChevronCircleLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport useCalendar from \"../../hooks/screen/myEvents/useCalendar\";\r\nimport moment from \"moment\";\r\nimport { isWeekend } from \"../../components/calendar/isWeekend\";\r\nimport { getDateTime } from \"../../shared/getDateTime\";\r\nimport { getDate } from \"./getDate\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport \"./calendar.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst Calendar = () => {\r\n  const {\r\n    dayNames,\r\n    numberOfDaysInMonth,\r\n    now,\r\n    selectedMonth,\r\n    monthIndex,\r\n    newSelectedDate,\r\n    date,\r\n    inputs,\r\n    error,\r\n    handleInputChange,\r\n    handlePreviousMonth,\r\n    handleNextMonth,\r\n    handleSelectDate,\r\n    handleSave,\r\n    handleCancel,\r\n  } = useCalendar();\r\n\r\n  const { eventDate } = useSelector((state) => state.eventDateSelected);\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n\r\n  return (\r\n    <div className=\"calendar-box\">\r\n      <Row>\r\n        <Col xs={eventButtonId === 0 ? 12 : 7}>\r\n          <div>\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={2}>\r\n                <FontAwesomeIcon\r\n                  className={\r\n                    monthIndex === now.getMonth()\r\n                      ? \"calendar-arrows-inactive\"\r\n                      : \"calendar-left-arrow\"\r\n                  }\r\n                  onClick={\r\n                    monthIndex === now.getMonth() ? null : handlePreviousMonth\r\n                  }\r\n                  icon={faChevronCircleLeft}\r\n                />\r\n              </Col>\r\n              <Col xs={6} />\r\n              <Col xs={2}>\r\n                <FontAwesomeIcon\r\n                  className={\r\n                    moment(\r\n                      moment(now.setHours(0, 0, 0, 0)).add(\r\n                        moment.duration(1, \"y\")\r\n                      )._d\r\n                    ).isSame(newSelectedDate.newDate.setHours(0, 0, 0, 0))\r\n                      ? \"calendar-arrows-inactive\"\r\n                      : \"calendar-right-arrow\"\r\n                  }\r\n                  onClick={\r\n                    moment(\r\n                      moment(now.setHours(0, 0, 0, 0)).add(\r\n                        moment.duration(1, \"y\")\r\n                      )._d\r\n                    ).isSame(newSelectedDate.newDate.setHours(0, 0, 0, 0))\r\n                      ? null\r\n                      : handleNextMonth\r\n                  }\r\n                  icon={faChevronCircleRight}\r\n                />\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} />\r\n              <Col xs={8}>\r\n                <div className=\"calendar-month-name\">{`${selectedMonth} ${newSelectedDate.selectedYear}`}</div>\r\n              </Col>\r\n              <Col xs={2} />\r\n            </Row>\r\n            <Row className=\"mb-3\" />\r\n            <div className=\"calendar-day-names\">\r\n              {dayNames.map((day, index) => (\r\n                <div key={index} className=\"calendar-day\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"calendar-days-in-month\">\r\n              {numberOfDaysInMonth.length > 0 &&\r\n                numberOfDaysInMonth.map((day, index) =>\r\n                  newSelectedDate.firstDay > 0 ? (\r\n                    <div\r\n                      className={\r\n                        index < newSelectedDate.firstDay - 1\r\n                          ? \"\"\r\n                          : day &&\r\n                            `${\r\n                              moment(day).isBefore(now.setHours(0, 0, 0, 0))\r\n                                ? \"calendar-number-of-day-before-today\"\r\n                                : \"calendar-number-of-day\"\r\n                            } ${\r\n                              isWeekend(\r\n                                day.getDate() + newSelectedDate.firstDay - 1\r\n                              )\r\n                                ? `${\r\n                                    moment(day).isBefore(\r\n                                      now.setHours(0, 0, 0, 0)\r\n                                    )\r\n                                      ? \"weekend-before-today\"\r\n                                      : \"weekend\"\r\n                                  }`\r\n                                : \"\"\r\n                            } ${\r\n                              moment(day).isSame(now.setHours(0, 0, 0, 0))\r\n                                ? \"today\"\r\n                                : \"\"\r\n                            } ${\r\n                              moment(day).isSame(date && date, \"day\")\r\n                                ? \"selected-date\"\r\n                                : \"\"\r\n                            }`\r\n                      }\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        return day &&\r\n                          moment(day).isBefore(now.setHours(0, 0, 0, 0))\r\n                          ? null\r\n                          : handleSelectDate(day);\r\n                      }}\r\n                      key={index}\r\n                    >\r\n                      {day && day.getDate()}\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      className={\r\n                        index < 7 - 1\r\n                          ? \"\"\r\n                          : day &&\r\n                            `${\r\n                              moment(day).isBefore(now.setHours(0, 0, 0, 0))\r\n                                ? \"calendar-number-of-day-before-today\"\r\n                                : \"calendar-number-of-day\"\r\n                            } ${\r\n                              isWeekend(day.getDate() + 7 - 1)\r\n                                ? `${\r\n                                    moment(day).isBefore(\r\n                                      now.setHours(0, 0, 0, 0)\r\n                                    )\r\n                                      ? \"weekend-before-today\"\r\n                                      : \"weekend\"\r\n                                  }`\r\n                                : \"\"\r\n                            } ${\r\n                              moment(day).isSame(now.setHours(0, 0, 0, 0))\r\n                                ? \"today\"\r\n                                : \"\"\r\n                            } ${\r\n                              moment(day).isSame(date && date, \"day\")\r\n                                ? \"selected-date\"\r\n                                : \"\"\r\n                            }`\r\n                      }\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        return day &&\r\n                          moment(day).isBefore(now.setHours(0, 0, 0, 0))\r\n                          ? null\r\n                          : handleSelectDate(day);\r\n                      }}\r\n                      key={index}\r\n                    >\r\n                      {day && day.getDate()}\r\n                    </div>\r\n                  )\r\n                )}\r\n            </div>\r\n            <Row className=\"mb-4\" />\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={10}>\r\n                {date && (\r\n                  <div className=\"calendar-selected-day\">\r\n                    {eventButtonId === 0\r\n                      ? getDate(new Date(date))\r\n                      : getDateTime(new Date(date))}\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n        {eventButtonId !== 0 && (\r\n          <Col xs={5}>\r\n            <div className=\"calendar-timer-box\">\r\n              <Form>\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <Form.Group controlId=\"formBasicTimer\">\r\n                      <Form.Label className=\"global-form-label\">\r\n                        {strings.myEvents.calendar.HOUR}\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        onChange={handleInputChange}\r\n                        className=\"calendar-time-form-control\"\r\n                        name=\"hour\"\r\n                        type=\"time\"\r\n                        value={inputs.hour || \"\"}\r\n                        disabled={!date}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n              <div className=\"calendar-time-error\">\r\n                {error.timeError ? error.timeError : null}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      <Row className=\"mb-5\" />\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={8}>\r\n          <Row>\r\n            <Col xs={5}>\r\n              <Button\r\n                variant=\"dark\"\r\n                disabled={!date || error.timeError}\r\n                onClick={handleSave}\r\n              >\r\n                <div className=\"calendar-button\">\r\n                  {!eventDate\r\n                    ? capitalizeFirst(strings.myEvents.calendar.button.SAVE)\r\n                    : capitalizeFirst(strings.myEvents.calendar.button.EDIT)}\r\n                </div>\r\n              </Button>\r\n            </Col>\r\n            <Col xs={2} />\r\n            <Col xs={5}>\r\n              <Button variant=\"info\" onClick={handleCancel}>\r\n                <div className=\"calendar-button\">\r\n                  {capitalizeFirst(strings.myEvents.calendar.button.CANCEL)}\r\n                </div>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={2} />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\n\r\nexport const getDate = (date) => {\r\n  return (\r\n    <>\r\n      {date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}/\r\n      {date.getMonth() + 1 < 10\r\n        ? `0${date.getMonth() + 1}`\r\n        : date.getMonth() + 1}\r\n      /{date.getFullYear()}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { Row, Col, ListGroup, Image, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronCircleRight,\r\n  faChevronCircleLeft,\r\n  faCalendarAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport useMyEvents from \"../../hooks/screen/myEvents/useMyEvents\";\r\nimport ScrollArea from \"react-scrollbar\";\r\nimport MyEventsList from \"./MyEventsList\";\r\nimport MyEventsForm from \"../../forms/myEvents/MyEventsForm\";\r\nimport SearchEventsForm from \"../../forms/myEvents/SearchEventsForm\";\r\nimport { showNewEventForm } from \"../../redux/myEvents/showNewEventForm/thunk/showNewEventFormThunk\";\r\nimport MakeEventButtons from \"./makeEventButtons\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport EventPreview from \"./EventPreview\";\r\nimport Calendar from \"../../components/calendar/Calendar\";\r\nimport Emoji from \"../../components/emoji/Emoji\";\r\nimport { capitalize } from \"../../util/Util\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport \"./myEvents.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyEvents = ({ match: { path, url, isExact } }) => {\r\n  const dispatch = useDispatch();\r\n  const { eventButtonId } = useSelector((state) => state.eventCategorySelected);\r\n  const { newEventFormShown } = useSelector(\r\n    (state) => state.isNewEventFormShown\r\n  );\r\n  const { eventPreviewShown } = useSelector((state) => state.eventPreview);\r\n  const { eventChangeError } = useSelector((state) => state.isEventChanged);\r\n  const { eventsError } = useSelector((state) => state.events);\r\n  const { logoutError } = useSelector((state) => state.logout);\r\n  const { emojiError } = useSelector((state) => state.emojis);\r\n  const { eventPreviewError } = useSelector((state) => state.eventPreview);\r\n  const { addressesRetrievedError } = useSelector(\r\n    (state) => state.addressSuggestions\r\n  );\r\n  const { locationDetailsError } = useSelector(\r\n    (state) => state.locationDetails\r\n  );\r\n  const { searchEventFilled } = useSelector(\r\n    (state) => state.isSearchEventFormFilled\r\n  );\r\n  const { calendarShown } = useSelector((state) => state.isCalendarShown);\r\n  const { emojisShown } = useSelector((state) => state.isEmojiShown);\r\n\r\n  const { skip, handlePrev, handleNext } = useMyEvents();\r\n\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n  });\r\n  return (\r\n    <animated.div style={props} className=\"myevents-main-area\">\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <div className=\"myevents-first-section\">\r\n        <Row>\r\n          <Col xs={3} />\r\n          <Col xs={9}>\r\n            <div className=\"myevents-list\">\r\n              <ScrollArea\r\n                className=\"myevents-list-simplebar\"\r\n                smoothScrolling={true}\r\n              >\r\n                <ListGroup>\r\n                  <MyEventsList />\r\n                </ListGroup>\r\n              </ScrollArea>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"myevents-second-section\">\r\n        {\r\n          <div\r\n            className={\r\n              newEventFormShown || eventPreviewShown\r\n                ? \"myevents-buttons-hidden\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <div className=\"myevents-top-box\">\r\n              <Row>\r\n                {eventButtonId === 1 ? (\r\n                  <>\r\n                    <Col xs={3} />\r\n                    <Col xs={3}>\r\n                      <Button\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(showNewEventForm(true));\r\n                        }}\r\n                        className=\"myrecipes-button-new-recipe\"\r\n                        variant=\"outline-dark\"\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          className=\"mails-button-icon\"\r\n                          icon={faCalendarAlt}\r\n                        />\r\n                        <div className=\"myevents-button-new-event\">\r\n                          {capitalize(strings.myEvents.BUTTON_NEW_EVENT)}\r\n                        </div>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col xs={1} />\r\n                  </>\r\n                ) : eventButtonId === 0 ? (\r\n                  <>\r\n                    <Col xs={1} />\r\n                    <Col xs={5}>\r\n                      <SearchEventsForm />\r\n                    </Col>\r\n                    <Col xs={1} />\r\n                  </>\r\n                ) : (\r\n                  <Col xs={7} />\r\n                )}\r\n                <Col xs={4}>\r\n                  <MakeEventButtons />\r\n                </Col>\r\n                <Col xs={1} />\r\n              </Row>\r\n              {eventButtonId === 0 && !searchEventFilled && (\r\n                <Row>\r\n                  <Col xs={1} />\r\n                  <Col xs={1}>\r\n                    <FontAwesomeIcon\r\n                      className={\r\n                        skip === 1\r\n                          ? \"recipebook-arrows-inactive\"\r\n                          : \"recipebook-left-arrow\"\r\n                      }\r\n                      onClick={skip === 1 ? null : handlePrev}\r\n                      icon={faChevronCircleLeft}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={2} />\r\n                  <Col xs={1}>\r\n                    <FontAwesomeIcon\r\n                      className={\r\n                        eventsError\r\n                          ? \"recipebook-arrows-inactive\"\r\n                          : \"recipebook-right-arrow\"\r\n                      }\r\n                      onClick={eventsError ? null : handleNext}\r\n                      icon={faChevronCircleRight}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={7} />\r\n                </Row>\r\n              )}\r\n            </div>\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-3\" />\r\n            <Row>\r\n              <Col xs={3} />\r\n              <Col xs={4}>\r\n                <Image\r\n                  className=\"myevents-main-image\"\r\n                  src={require(\"../../assets/imgs/spoonret.jpg\")}\r\n                />\r\n              </Col>\r\n              <Col xs={5} />\r\n            </Row>\r\n          </div>\r\n        }\r\n        {newEventFormShown && (\r\n          <div className=\"myevents-form-shown\">\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-4\" />\r\n            <Row>\r\n              <Col xs={2} />\r\n              <Col xs={6}>\r\n                <MyEventsForm />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-5\" />\r\n                <Row className=\"mb-4\" />\r\n                <Notification\r\n                  notificationMessage={\r\n                    eventChangeError ||\r\n                    logoutError ||\r\n                    addressesRetrievedError ||\r\n                    locationDetailsError ||\r\n                    eventPreviewError ||\r\n                    emojiError\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </div>\r\n        )}\r\n        {eventPreviewShown && (\r\n          <div className=\"eventpreview-recipe-preview\">\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <EventPreview />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {calendarShown && (\r\n        <div className=\"myevents-calendar-overlay\">\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-5\" />\r\n          <Row>\r\n            <Col xs={4} />\r\n            <Col xs={4}>\r\n              <Calendar />\r\n            </Col>\r\n            <Col xs={4} />\r\n          </Row>\r\n        </div>\r\n      )}\r\n      {emojisShown && (\r\n        <div className=\"global-emoji-overlay\">\r\n          <Row className=\"mb-5\" />\r\n          <Row className=\"mb-4\" />\r\n          <Row>\r\n            <Col xs={4} />\r\n            <Col xs={4}>\r\n              <Emoji />\r\n            </Col>\r\n            <Col xs={4} />\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default MyEvents;\r\n","import { useState, useEffect } from \"react\";\r\nimport { makeImageBinary } from \"../../../shared/makeImageBinary\";\r\nimport { getImage } from \"../../../shared/getImage\";\r\nimport { updateUserProfile } from \"../../../redux/login/loginUser/thunk/loginThunk\";\r\nimport { updateMyProfile } from \"../../../redux/updateMyProfile/updateProfile/thunk/updateMyProfileThunk\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userGooglePhoto } from \"../../../shared/testWordsArray\";\r\n\r\nconst useMyProfileForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({});\r\n  const [error, setError] = useState({});\r\n  const [showOverlay, setShowOverlay] = useState(true);\r\n  const [showEdit, setShowEdit] = useState(true);\r\n  const [loadingImage, setLoadingImage] = useState(false);\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { profileUpdated } = useSelector((state) => state.updateMyProfile);\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handlePicture = async (picture) => {\r\n    try {\r\n      if (picture.length > 0) {\r\n        setLoadingImage(true);\r\n        const result = await makeImageBinary(picture);\r\n        if (result) {\r\n          setLoadingImage(false);\r\n          setInputs((inputs) => ({\r\n            ...inputs,\r\n            profileImage: result,\r\n          }));\r\n          if (error.imageError) {\r\n            setError((error) =>\r\n              (({ imageError, ...others }) => ({\r\n                ...others,\r\n              }))(error)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (err) {\r\n        setLoadingImage(false);\r\n        setError((error) => ({\r\n          ...error,\r\n          imageError: err,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n  const handleRemoveImage = (e) => {\r\n    e.preventDefault();\r\n    setInputs((inputs) =>\r\n      (({ profileImage, ...others }) => ({\r\n        ...others,\r\n      }))(inputs)\r\n    );\r\n    if (error.imageError) {\r\n      setError((error) =>\r\n        (({ imageError, ...others }) => ({\r\n          ...others,\r\n        }))(error)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    setShowOverlay(false);\r\n    setShowEdit(false);\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      name: userData.name,\r\n    }));\r\n    if (\r\n      userGooglePhoto.some(\r\n        (element) => userData.photo && userData.photo.includes(element)\r\n      )\r\n    ) {\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        profileImage: {\r\n          image: userData.photo,\r\n        },\r\n      }));\r\n    } else if (\r\n      !userGooglePhoto.some(\r\n        (element) => userData.photo && userData.photo.includes(element)\r\n      )\r\n    ) {\r\n      setLoadingImage(true);\r\n      const result = userData.photo && (await getImage(userData.photo));\r\n      if (result || result === null) setLoadingImage(false);\r\n      if (result) {\r\n        setInputs((inputs) => ({\r\n          ...inputs,\r\n          profileImage: {\r\n            image: result.imageBinary,\r\n            imageName: result.pictureName,\r\n          },\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateUserProfile(\r\n        inputs.name,\r\n        inputs.profileImage,\r\n        userData._id,\r\n        userData.email\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    setInputs({});\r\n    if (error.imageError) setError({});\r\n    setShowOverlay(true);\r\n    setShowEdit(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputs({});\r\n    setShowOverlay(true);\r\n    setShowEdit(true);\r\n  }, [profileUpdated]);\r\n\r\n  useEffect(() => {\r\n    if (inputs.name === undefined) dispatch(updateMyProfile(false));\r\n  }, [inputs.name, dispatch]);\r\n\r\n  return {\r\n    inputs,\r\n    error,\r\n    showOverlay,\r\n    showEdit,\r\n    loadingImage,\r\n    handleInputChange,\r\n    handlePicture,\r\n    handleRemoveImage,\r\n    handleEdit,\r\n    handleSubmit,\r\n    handleCancel,\r\n  };\r\n};\r\n\r\nexport default useMyProfileForm;\r\n","import { updateMyProfileCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const updateMyProfile = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: updateMyProfileCases.PROFILE_UPDATED,\r\n      payload: bool,\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Spinner, Image } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport useMyProfileForm from \"../../hooks/form/myProfile/useMyProfileForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./myProfileForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyProfileForm = () => {\r\n  const {\r\n    inputs,\r\n    error,\r\n    showOverlay,\r\n    showEdit,\r\n    loadingImage,\r\n    handleInputChange,\r\n    handlePicture,\r\n    handleRemoveImage,\r\n    handleEdit,\r\n    handleSubmit,\r\n    handleCancel,\r\n  } = useMyProfileForm();\r\n\r\n  const { loading } = useSelector((state) => state.login);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicUserName\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myProfile.USER_NAME)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"myprofile-form-control\"\r\n              onChange={handleInputChange}\r\n              value={inputs.name || \"\"}\r\n              size=\"sm\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder={strings.myProfile.USER_NAME_PLACEHOLDER}\r\n            />\r\n            {showOverlay && (\r\n              <div className=\"myprofile-form-iuploader-overlay\" />\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicPhoto\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myProfile.PHOTO)}\r\n            </Form.Label>\r\n            <ImageUploader\r\n              fileContainerStyle={{\r\n                height: 70,\r\n                fontFamily: \"OpenSans-Regular\",\r\n                border: \"1px solid #CED4DA\",\r\n                position: \"relative\",\r\n              }}\r\n              withIcon={false}\r\n              singleImage={true}\r\n              withLabel={true}\r\n              label={capitalizeFirst(strings.myRecipes.MAX_PICTURE_SIZE)}\r\n              buttonText={capitalizeFirst(strings.myProfile.PICKER)}\r\n              buttonStyles={{\r\n                fontFamily: \"OpenSans-Regular\",\r\n                fontSize: \"1vw\",\r\n              }}\r\n              onChange={handlePicture}\r\n              imgExtension={[\".jpg\", \"jpeg\", \".gif\", \".png\", \".gif\"]}\r\n              fileTypeError={capitalizeFirst(\r\n                strings.myRecipes.error.IMAGE_FORMAT\r\n              )}\r\n            />\r\n            {showOverlay && (\r\n              <div className=\"myprofile-form-iuploader-overlay\" />\r\n            )}\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      {loadingImage ? (\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div className=\"myprofile-form-loading-items\">\r\n              <Spinner animation=\"border\" size=\"sm\" />\r\n              <div className=\"myprofile-form-loadingimage-text\">\r\n                {capitalizeFirst(strings.myRecipes.LOADING_IMAGE)}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        inputs.profileImage && (\r\n          <Row>\r\n            <Col xs={9}>\r\n              <Image\r\n                src={\r\n                  inputs.profileImage.image ? inputs.profileImage.image : null\r\n                }\r\n                thumbnail\r\n              />\r\n            </Col>\r\n            <Col xs={1} />\r\n            <Col xs={1}>\r\n              <FontAwesomeIcon\r\n                className=\"myprofile-form-trash\"\r\n                icon={faTrash}\r\n                onClick={handleRemoveImage}\r\n              />\r\n            </Col>\r\n            <Col xs={1} />\r\n          </Row>\r\n        )\r\n      )}\r\n      {error.imageError && (\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div className=\"myprofile-form-image-error\">\r\n              {error.imageError ? error.imageError : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"mb-3\" />\r\n      <Row>\r\n        <Col xs={12}>\r\n          {showEdit && (\r\n            <Button\r\n              className=\"global-button-label\"\r\n              variant=\"dark\"\r\n              onClick={handleEdit}\r\n            >\r\n              <div>{capitalizeFirst(strings.myProfile.BUTTON_TEXT_EDIT)}</div>\r\n            </Button>\r\n          )}\r\n          {!showEdit && (\r\n            <div className=\"myprofile-form-buttons-box\">\r\n              <Button\r\n                className=\"global-button-label\"\r\n                type=\"submit\"\r\n                variant=\"outline-dark\"\r\n                disabled={\r\n                  loading ||\r\n                  inputs.name === undefined ||\r\n                  inputs.name === \"\" ||\r\n                  error.imageError\r\n                }\r\n              >\r\n                <div className=\"myprofile-spinner\">\r\n                  {loading && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                {loading ? (\r\n                  <div className=\"myprofile-button-loading\">\r\n                    {capitalizeFirst(strings.myProfile.BUTTON_TEXT_LOADING)}\r\n                  </div>\r\n                ) : (\r\n                  <div>{capitalizeFirst(strings.myProfile.BUTTON_TEXT)}</div>\r\n                )}\r\n              </Button>\r\n              <Button\r\n                onClick={handleCancel}\r\n                className=\"global-button-label\"\r\n                variant=\"outline-secondary\"\r\n              >\r\n                {capitalizeFirst(strings.rating.BUTTON_CANCEL_TEXT)}\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MyProfileForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { strings } from \"../../../strings/Strings\";\r\nimport { userGooglePhoto } from \"../../../shared/testWordsArray\";\r\n\r\nconst useMyProfilePreview = () => {\r\n  const [inputUserPhoto, setInputUserPhoto] = useState({});\r\n  const { userData } = useSelector((state) => state.login);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !userGooglePhoto.some(\r\n        (element) => userData.photo && userData.photo.includes(element)\r\n      ) &&\r\n      userData.photo\r\n    )\r\n      setInputUserPhoto((inputUserPhoto) => ({\r\n        ...inputUserPhoto,\r\n        userPhoto: strings.path.IMAGE_REQUEST + userData.photo,\r\n      }));\r\n  }, [userData.photo]);\r\n\r\n  useEffect(() => {\r\n    if (userData.photo === null && inputUserPhoto && inputUserPhoto.userPhoto)\r\n      setInputUserPhoto({});\r\n  }, [userData.photo, inputUserPhoto]);\r\n\r\n  return { inputUserPhoto, userData };\r\n};\r\n\r\nexport default useMyProfilePreview;\r\n","import React from \"react\";\r\nimport { Row, Col, Spinner } from \"react-bootstrap\";\r\nimport Img from \"react-image\";\r\nimport useMyProfilePreview from \"../../hooks/screen/myProfile/useMyProfilePreview\";\r\nimport { userGooglePhoto } from \"../../shared/testWordsArray\";\r\nimport \"./myProfile.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyProfilePreview = () => {\r\n  const { inputUserPhoto, userData } = useMyProfilePreview();\r\n\r\n  return (\r\n    <div className=\"myprofile-preview-area\">\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Img\r\n            className=\"myprofile-user-image\"\r\n            src={\r\n              userGooglePhoto.some(\r\n                (element) => userData.photo && userData.photo.includes(element)\r\n              )\r\n                ? userData.photo\r\n                : inputUserPhoto.userPhoto\r\n                ? inputUserPhoto.userPhoto\r\n                : require(\"../../assets/imgs/cookerret.png\")\r\n            }\r\n            loader={\r\n              <div className=\"global-list-picture-loading-box\">\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              </div>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\" />\r\n      <Row>\r\n        <Col xs={12}>\r\n          <p className=\"myprofile-user-name\">{userData.name}</p>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfilePreview;\r\n","import { showMyPasswordFormCases } from \"../../../config/cases/Cases\";\r\n\r\nexport const showMyPasswordForm = (bool) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: showMyPasswordFormCases.FORM_SHOWN, payload: bool });\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeUserPassword } from \"../../../redux/updateMyProfile/changePassword/thunk/changePasswordThunk\";\r\nimport { showMyPasswordForm } from \"../../../redux/updateMyProfile/showMyPassword/thunk/showMyPasswordThunk\";\r\n\r\nconst useMyPasswordForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { userPasswordChanged } = useSelector(\r\n    (state) => state.isUserPasswordChanged\r\n  );\r\n\r\n  const handleOnChange = (e) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    setInputs({});\r\n    dispatch(showMyPasswordForm(false));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      changeUserPassword(\r\n        inputs.currentPass,\r\n        inputs.newPass,\r\n        inputs.confirmPass,\r\n        userData._id,\r\n        userData.email\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userPasswordChanged) {\r\n      setInputs({});\r\n      dispatch(showMyPasswordForm(false));\r\n    }\r\n    return () => dispatch(showMyPasswordForm(false));\r\n  }, [userPasswordChanged, dispatch]);\r\n\r\n  return { inputs, handleCancel, handleOnChange, handleSubmit };\r\n};\r\n\r\nexport default useMyPasswordForm;\r\n","import React from \"react\";\r\nimport { Form, Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport useMyPasswordForm from \"../../hooks/form/myProfile/useMyPasswordForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./myProfileForm.css\";\r\nimport \"../../shared/global.css\";\r\n\r\nconst MyPasswordForm = () => {\r\n  const {\r\n    inputs,\r\n    handleCancel,\r\n    handleOnChange,\r\n    handleSubmit,\r\n  } = useMyPasswordForm();\r\n  const { loading } = useSelector((state) => state.isUserPasswordChanged);\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicCurrentPassword\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myProfile.CURRENT_PASS)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"myprofile-form-control\"\r\n              onChange={handleOnChange}\r\n              value={inputs.currentPass || \"\"}\r\n              size=\"lg\"\r\n              name=\"currentPass\"\r\n              type=\"password\"\r\n              placeholder={strings.myProfile.CURRENT_PASS_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicNewPassword\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myProfile.NEW_PASS)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"myprofile-form-control\"\r\n              onChange={handleOnChange}\r\n              value={inputs.newPass || \"\"}\r\n              size=\"lg\"\r\n              name=\"newPass\"\r\n              type=\"password\"\r\n              placeholder={strings.myProfile.NEW_PASS_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Form.Group controlId=\"formBasicConfirmPassword\">\r\n            <Form.Label className=\"global-form-label\">\r\n              {capitalizeFirst(strings.myProfile.CONFIRM_PASS)}\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"myprofile-form-control\"\r\n              onChange={handleOnChange}\r\n              value={inputs.confirmPass || \"\"}\r\n              size=\"lg\"\r\n              name=\"confirmPass\"\r\n              type=\"password\"\r\n              placeholder={strings.myProfile.CONFIRME_PASS_PLACEHOLDER}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"myprofile-form-buttons-box\">\r\n            <Button\r\n              disabled={\r\n                loading ||\r\n                inputs.currentPass === undefined ||\r\n                inputs.currentPass === \"\" ||\r\n                inputs.newPass === undefined ||\r\n                inputs.newPass === \"\" ||\r\n                inputs.confirmPass === undefined ||\r\n                inputs.confirmPass === \"\"\r\n              }\r\n              className=\"global-button-label\"\r\n              type=\"submit\"\r\n              variant=\"outline-dark\"\r\n            >\r\n              <div className=\"myprofile-spinner\">\r\n                {loading && (\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n              </div>\r\n              {loading ? (\r\n                <div className=\"myprofile-button-loading\">\r\n                  {capitalizeFirst(strings.myProfile.BUTTON_TEXT_LOADING)}\r\n                </div>\r\n              ) : (\r\n                <div>{capitalizeFirst(strings.myProfile.BUTTON_TEXT)}</div>\r\n              )}\r\n            </Button>\r\n            <Button\r\n              onClick={handleCancel}\r\n              className=\"global-button-label\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              {capitalizeFirst(strings.rating.BUTTON_CANCEL_TEXT)}\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MyPasswordForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { removeAccount } from \"../../../redux/updateMyProfile/removeAccount/thunk/removeAccountThunk\";\r\nimport { logoutUser } from \"../../../redux/logout/thunk/logoutThunk\";\r\nimport { removeAccountClearState } from \"../../../redux/updateMyProfile/removeAccount/thunk/removeAccountThunk\";\r\nimport { disconnectIOSocket } from \"../../../components/navbar/disconnectIOSocket\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useMyProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const [showRemoveAccount, setShowRemoveAccount] = useState(true);\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { accountRemoved } = useSelector((state) => state.isAccountRemoved);\r\n  const { socket } = useSelector((state) => state.socketData);\r\n\r\n  const handleTrash = (e) => {\r\n    e.preventDefault();\r\n    setShowRemoveAccount(false);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    setShowRemoveAccount(true);\r\n  };\r\n\r\n  const handleDeleteAccount = (e) => {\r\n    e.preventDefault();\r\n    dispatch(removeAccount(userData._id, userData.email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (accountRemoved && socket.connected) {\r\n        dispatch(removeAccountClearState());\r\n        await disconnectIOSocket(socket, userData._id);\r\n        dispatch(logoutUser(userData._id, userData.email));\r\n      }\r\n    })();\r\n  }, [accountRemoved, socket, userData._id, userData.email, dispatch]);\r\n\r\n  return { showRemoveAccount, handleTrash, handleCancel, handleDeleteAccount };\r\n};\r\n\r\nexport default useMyProfile;\r\n","import React from \"react\";\r\nimport { Row, Col, Image, Button, Spinner } from \"react-bootstrap\";\r\nimport MyProfileForm from \"../../forms/myProfile/MyProfileForm\";\r\nimport MyProfilePreview from \"./MyProfilePreview\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Notification from \"../../components/notifications/Notification\";\r\nimport MyPasswordForm from \"../../forms/myProfile/MyPasswordForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport useMyProfile from \"../../hooks/screen/myProfile/useMyProfile\";\r\nimport { showMyPasswordForm } from \"../../redux/updateMyProfile/showMyPassword/thunk/showMyPasswordThunk\";\r\nimport { capitalizeFirst } from \"../../util/Util\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport \"./myProfile.css\";\r\n\r\nconst MyProfile = ({ match: { path, url, isExact } }) => {\r\n  const dispatch = useDispatch();\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    config: { duration: 300 },\r\n    from: { opacity: 0 },\r\n  });\r\n  const { loginError } = useSelector((state) => state.login);\r\n  const { logoutError } = useSelector((state) => state.logout);\r\n  const { userPasswordChanged, changeUserPasswordError } = useSelector(\r\n    (state) => state.isUserPasswordChanged\r\n  );\r\n  const { myPasswordFormShown } = useSelector(\r\n    (state) => state.isMyPasswordFormShown\r\n  );\r\n  const { loading, removingAccountError } = useSelector(\r\n    (state) => state.isAccountRemoved\r\n  );\r\n  const { userData } = useSelector((state) => state.login);\r\n  const {\r\n    showRemoveAccount,\r\n    handleTrash,\r\n    handleCancel,\r\n    handleDeleteAccount,\r\n  } = useMyProfile();\r\n  return (\r\n    <animated.div className=\"myprofile-main-area\" style={props}>\r\n      <Navbar path={path} url={url} isExact={isExact} />\r\n      <div className=\"myprofile-first-section\">\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-5\" />\r\n        <Row>\r\n          <Col xs={4} />\r\n          <Col xs={4}>\r\n            <MyProfilePreview />\r\n          </Col>\r\n          <Col xs={4} />\r\n        </Row>\r\n        <Row>\r\n          <Col xs={5}>\r\n            <Image\r\n              className=\"myprofile-background-image\"\r\n              src={require(\"../../assets/imgs/panret2.jpg\")}\r\n            />\r\n          </Col>\r\n          <Col xs={1} />\r\n          <Col xs={5}>\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row className=\"mb-5\" />\r\n            <Notification\r\n              notificationMessage={\r\n                loginError\r\n                  ? loginError\r\n                  : logoutError\r\n                  ? logoutError\r\n                  : removingAccountError\r\n                  ? removingAccountError\r\n                  : changeUserPasswordError\r\n                  ? changeUserPasswordError\r\n                  : userPasswordChanged\r\n                  ? capitalizeFirst(strings.myProfile.PASSWORD_CHANGED)\r\n                  : null\r\n              }\r\n            />\r\n          </Col>\r\n          <Col xs={1} />\r\n        </Row>\r\n      </div>\r\n      <div className=\"myprofile-second-section\">\r\n        <Row className=\"mb-5\" />\r\n        <Row className=\"mb-4\" />\r\n        {showRemoveAccount && (\r\n          <div className=\"myprofile-trash-box\">\r\n            <Row>\r\n              <Col xs={10} />\r\n              <Col xs={1}>\r\n                <FontAwesomeIcon\r\n                  onClick={handleTrash}\r\n                  className=\"myprofile-trash-icon\"\r\n                  icon={faTrash}\r\n                />\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </div>\r\n        )}\r\n        {!showRemoveAccount && (\r\n          <div className=\"myprofile-trash-box\">\r\n            <Row>\r\n              <Col xs={5} />\r\n              <Col xs={6}>\r\n                <div className=\"myprofile-remove-account-area\">\r\n                  <p className=\"myprofile-remove-account-text\">\r\n                    {capitalizeFirst(strings.myProfile.REMOVE_ACCOUNT)}\r\n                  </p>\r\n                  {!loading && (\r\n                    <div>\r\n                      <FontAwesomeIcon\r\n                        onClick={handleDeleteAccount}\r\n                        className=\"myprofile-remove-account-icon yes\"\r\n                        icon={faCheckCircle}\r\n                      />\r\n                      <FontAwesomeIcon\r\n                        onClick={handleCancel}\r\n                        className=\"myprofile-remove-account-icon no\"\r\n                        icon={faTimesCircle}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {loading && <Spinner animation=\"border\" variant=\"dark\" />}\r\n                </div>\r\n              </Col>\r\n              <Col xs={1} />\r\n            </Row>\r\n          </div>\r\n        )}\r\n        <Row className=\"mb-3\" />\r\n        {!myPasswordFormShown && (\r\n          <Row>\r\n            <Col xs={1} />\r\n            <Col xs={3}>\r\n              <Button\r\n                disabled={userData.isGoogleUser}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(showMyPasswordForm(true));\r\n                }}\r\n                className=\"myprofile-button-show-pass-form\"\r\n                variant=\"dark\"\r\n                size=\"sm\"\r\n              >\r\n                {capitalizeFirst(strings.myProfile.BUTTON_EDIT_PASS)}\r\n              </Button>\r\n            </Col>\r\n            <Col xs={8} />\r\n          </Row>\r\n        )}\r\n        {myPasswordFormShown && (\r\n          <>\r\n            <Row className=\"mb-3\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={5}>\r\n                <MyPasswordForm />\r\n              </Col>\r\n              <Col xs={6} />\r\n            </Row>\r\n          </>\r\n        )}\r\n        {!myPasswordFormShown && (\r\n          <>\r\n            <Row className=\"mb-3\" />\r\n            <Row className=\"mb-5\" />\r\n            <Row>\r\n              <Col xs={1} />\r\n              <Col xs={6}>\r\n                <MyProfileForm />\r\n              </Col>\r\n              <Col xs={5} />\r\n            </Row>\r\n          </>\r\n        )}\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import { useMemo, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ioConnect } from \"../../../redux/mails/socketData/thunk/ioConnectThunk\";\r\nimport {\r\n  setMessages,\r\n  setMessagesClearState,\r\n} from \"../../../redux/mails/setMessages/thunk/setMessagesThunk\";\r\nimport {\r\n  getEmojis,\r\n  getEmojiCategories,\r\n} from \"../../../redux/emoji/getEmojis/thunk/getEmojisThunk\";\r\nimport { setConversation } from \"../../../redux/mails/setConversation/thunk/setConversationThunk\";\r\n\r\nconst useApp = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { userLogged } = useSelector((state) => state.isUserLogged);\r\n  const { windowOpen } = useSelector((state) => state.isConversationWindowOpen);\r\n  const { messageId } = useSelector((state) => state.isMessageId);\r\n  const { mailsActive } = useSelector((state) => state.isMailsComponentActive);\r\n  const { socket } = useSelector((state) => state.socketData);\r\n\r\n  const userDataMemoized = useMemo(() => {\r\n    return { ...userData };\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    setIsActive(true);\r\n    return () => setIsActive(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (socket.connected || socket.disconnected) &&\r\n      userLogged &&\r\n      !mailsActive &&\r\n      isActive\r\n    ) {\r\n      socket.emit(\"getMessages\", userDataMemoized._id);\r\n      socket.off(\"messagesRetrievedApp\").on(\"messagesRetrievedApp\", (data) => {\r\n        if (data.length > 0) {\r\n          dispatch(setMessages(data));\r\n        }\r\n      });\r\n      socket.off(\"getMessagesErrorApp\").on(\"getMessagesErrorApp\", (err) => {\r\n        if (err) {\r\n          dispatch(setMessagesClearState());\r\n        }\r\n      });\r\n      socket\r\n        .off(\"newMessageSentAppInfo\")\r\n        .on(\"newMessageSentAppInfo\", (result) => {\r\n          if (result) {\r\n            socket.emit(\"getMessages\", userDataMemoized._id);\r\n            socket\r\n              .off(\"messagesRetrievedApp\")\r\n              .on(\"messagesRetrievedApp\", (data) => {\r\n                if (data.length > 0) {\r\n                  dispatch(setMessages(data));\r\n                }\r\n              });\r\n          }\r\n        });\r\n      socket\r\n        .off(\"newConversationAppInfo\")\r\n        .on(\"newConversationAppInfo\", (conversationMessageId) => {\r\n          if (conversationMessageId) {\r\n            if (windowOpen && conversationMessageId === messageId) {\r\n              socket.emit(\"messageUnread\", conversationMessageId);\r\n              socket\r\n                .off(\"messageUnreadSetAppInfo\")\r\n                .on(\"messageUnreadSetAppInfo\", (result) => {\r\n                  if (result) {\r\n                    socket.emit(\"getMessages\", userDataMemoized._id);\r\n                    socket\r\n                      .off(\"messagesRetrievedApp\")\r\n                      .on(\"messagesRetrievedApp\", (data) => {\r\n                        if (data.length > 0) {\r\n                          dispatch(setMessages(data));\r\n                          dispatch(\r\n                            setConversation(\r\n                              data.filter(\r\n                                (message) =>\r\n                                  message._id.toString() ===\r\n                                  conversationMessageId.toString()\r\n                              )[0].conversations\r\n                            )\r\n                          );\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              socket.emit(\"messageUnread\", conversationMessageId);\r\n              socket\r\n                .off(\"messageUnreadSetAppInfo\")\r\n                .on(\"messageUnreadSetAppInfo\", (result) => {\r\n                  if (result) {\r\n                    socket.emit(\"getMessages\", userDataMemoized._id);\r\n                    socket\r\n                      .off(\"messagesRetrievedApp\")\r\n                      .on(\"messagesRetrievedApp\", (data) => {\r\n                        if (data.length > 0) {\r\n                          dispatch(setMessages(data));\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            }\r\n          }\r\n        });\r\n    }\r\n    return () => {\r\n      if ((socket.connected || socket.disconnected) && userLogged && isActive) {\r\n        socket.removeAllListeners(\"messagesRetrievedApp\");\r\n        socket.removeAllListeners(\"getMessagesErrorApp\");\r\n        socket.removeAllListeners(\"newMessageSentAppInfo\");\r\n        socket.removeAllListeners(\"newConversationAppInfo\");\r\n        socket.removeAllListeners(\"messageUnreadSetAppInfo\");\r\n      }\r\n    };\r\n  }, [\r\n    socket,\r\n    userDataMemoized._id,\r\n    isActive,\r\n    userLogged,\r\n    windowOpen,\r\n    messageId,\r\n    mailsActive,\r\n    dispatch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (userLogged) {\r\n      dispatch(ioConnect(userDataMemoized._id, userDataMemoized.email));\r\n      dispatch(getEmojis());\r\n      dispatch(getEmojiCategories());\r\n    }\r\n  }, [userDataMemoized._id, userDataMemoized.email, userLogged, dispatch]);\r\n\r\n  return { userDataMemoized };\r\n};\r\n\r\nexport default useApp;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { strings } from \"../../strings/Strings\";\r\nimport Home from \"../../components/home/Home\";\r\nimport Login from \"../login/Login\";\r\nimport Signup from \"../signup/Signup\";\r\nimport RecipeBook from \"../recipeBook/RecipeBook\";\r\nimport MyRecipes from \"../myRecipes/MyRecipes\";\r\nimport Mails from \"../mails/Mails\";\r\nimport MyEvents from \"../myEvents/MyEvents\";\r\nimport MyProfile from \"../myProfile/MyProfile\";\r\nimport useApp from \"../../hooks/screen/app/useApp\";\r\nimport \"./app.css\";\r\n\r\nconst App = () => {\r\n  const { userDataMemoized } = useApp();\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          {userDataMemoized.email !== undefined && (\r\n            <Route path={strings.path.HOME} exact component={Home} />\r\n          ) ? (\r\n            <Redirect\r\n              from={strings.path.HOME}\r\n              to={strings.path.RECIPE_BOOK}\r\n              exact\r\n            />\r\n          ) : (\r\n            <Route path={strings.path.HOME} exact component={Home} />\r\n          )}\r\n          {userDataMemoized.email !== undefined && (\r\n            <Route path={strings.path.LOGIN} exact component={Login} />\r\n          ) ? (\r\n            <Redirect\r\n              from={strings.path.LOGIN}\r\n              to={strings.path.RECIPE_BOOK}\r\n              exact\r\n            />\r\n          ) : (\r\n            <Route path={strings.path.LOGIN} exact component={Login} />\r\n          )}\r\n          {userDataMemoized.email !== undefined && (\r\n            <Route path={strings.path.SIGNUP} exact component={Signup} />\r\n          ) ? (\r\n            <Redirect\r\n              from={strings.path.SIGNUP}\r\n              to={strings.path.RECIPE_BOOK}\r\n            />\r\n          ) : (\r\n            <Route path={strings.path.SIGNUP} exact component={Signup} />\r\n          )}\r\n          {userDataMemoized.email !== undefined ? (\r\n            <Route\r\n              path={strings.path.RECIPE_BOOK}\r\n              exact\r\n              component={RecipeBook}\r\n            />\r\n          ) : (\r\n            <Redirect to={strings.path.HOME} exact />\r\n          )}\r\n          {userDataMemoized.email !== undefined ? (\r\n            <Route path={strings.path.MY_RECIPES} exact component={MyRecipes} />\r\n          ) : (\r\n            <Redirect to={strings.path.HOME} exact />\r\n          )}\r\n          {userDataMemoized.email !== undefined ? (\r\n            <Route path={strings.path.MAILS} exact component={Mails} />\r\n          ) : (\r\n            <Redirect to={strings.path.HOME} exact />\r\n          )}\r\n          {userDataMemoized.email !== undefined ? (\r\n            <Route path={strings.path.MY_EVENTS} exact component={MyEvents} />\r\n          ) : (\r\n            <Redirect to={strings.path.HOME} exact />\r\n          )}\r\n          {userDataMemoized.email !== undefined ? (\r\n            <Route path={strings.path.MY_PROFILE} exact component={MyProfile} />\r\n          ) : (\r\n            <Redirect to={strings.path.HOME} exact />\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport configureStore from \"./redux/config/Persistor\";\r\nimport App from \"./views/app/App\";\r\nimport \"./index.css\";\r\n\r\nconst { myStore, persistor } = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={myStore}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/cookerret.cdff214d.png\";","module.exports = __webpack_public_path__ + \"static/media/panret.609d52b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eventret.745f56d7.jpg\";"],"sourceRoot":""}